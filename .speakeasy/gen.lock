lockVersion: 2.0.0
id: 24d370c2-6b03-48a1-b9df-d477b88b9851
management:
  docChecksum: a8ddf965834b9ac75634abfe6f16b11a
  docVersion: 1.0.0
  speakeasyVersion: 1.606.10
  generationVersion: 2.687.13
  releaseVersion: 0.3.0
  configChecksum: 1973c3db4d08fa5b999f866c30a3c1eb
  repoURL: https://github.com/StackOneHQ/stackone-client-csharp.git
  published: true
features:
  csharp:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.0.1
    core: 3.12.0
    deprecations: 2.81.2
    examples: 2.81.6
    flattening: 2.81.3
    globalSecurity: 2.83.7
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.4
    groups: 2.81.2
    intellisenseMarkdownSupport: 0.1.0
    methodArguments: 0.2.0
    nameOverrides: 2.81.2
    nullables: 0.1.1
    openEnums: 0.1.0
    pagination: 0.2.6
    responseFormat: 0.0.4
    retries: 0.0.1
    sdkHooks: 0.2.0
    unions: 0.2.2
generatedFiles:
  - .gitattributes
  - NUGET.md
  - StackOneHQ.Client.sln
  - USAGE.md
  - docs/Models/Components/ATSLocation.md
  - docs/Models/Components/ATSLocationResult.md
  - docs/Models/Components/ATSLocationsPaginated.md
  - docs/Models/Components/Account.md
  - docs/Models/Components/AccountAddress.md
  - docs/Models/Components/AccountAddressCountry.md
  - docs/Models/Components/AccountAddressCountrySourceValueUnion.md
  - docs/Models/Components/AccountAddressCountryValue.md
  - docs/Models/Components/AccountAddressLocationType.md
  - docs/Models/Components/AccountAddressLocationTypeSourceValueUnion.md
  - docs/Models/Components/AccountAddressLocationTypeValue.md
  - docs/Models/Components/AccountAddressSourceValueCountry.md
  - docs/Models/Components/AccountAddressSourceValueLocationType.md
  - docs/Models/Components/AccountResult.md
  - docs/Models/Components/AccountType.md
  - docs/Models/Components/AccountTypeSourceValueUnion.md
  - docs/Models/Components/AccountTypeValue.md
  - docs/Models/Components/AccountingAccount.md
  - docs/Models/Components/AccountingAccountActiveEnum.md
  - docs/Models/Components/AccountingAccountActiveUnion.md
  - docs/Models/Components/AccountingAccountResult.md
  - docs/Models/Components/AccountingAccountResultActiveEnum.md
  - docs/Models/Components/AccountingAccountResultActiveUnion.md
  - docs/Models/Components/AccountingAccountResultData.md
  - docs/Models/Components/AccountingAccountResultSourceValue.md
  - docs/Models/Components/AccountingAccountResultSourceValueUnion.md
  - docs/Models/Components/AccountingAccountResultType.md
  - docs/Models/Components/AccountingAccountResultValue.md
  - docs/Models/Components/AccountingAccountSourceValue.md
  - docs/Models/Components/AccountingAccountSourceValueUnion.md
  - docs/Models/Components/AccountingAccountType.md
  - docs/Models/Components/AccountingAccountValue.md
  - docs/Models/Components/AccountingAccountsPaginated.md
  - docs/Models/Components/AccountingCompaniesPaginated.md
  - docs/Models/Components/AccountingCompany.md
  - docs/Models/Components/AccountingCompanyBaseCurrency.md
  - docs/Models/Components/AccountingCompanyResult.md
  - docs/Models/Components/AccountingCompanyResultBaseCurrency.md
  - docs/Models/Components/AccountingCompanyResultData.md
  - docs/Models/Components/AccountingCompanyResultSourceValue.md
  - docs/Models/Components/AccountingCompanyResultSourceValueUnion.md
  - docs/Models/Components/AccountingCompanyResultValue.md
  - docs/Models/Components/AccountingCompanySourceValue.md
  - docs/Models/Components/AccountingCompanySourceValueUnion.md
  - docs/Models/Components/AccountingCompanyValue.md
  - docs/Models/Components/AccountingJournal.md
  - docs/Models/Components/AccountingJournalBatchCreateRequestDto.md
  - docs/Models/Components/AccountingJournalCreateRequestDto.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoCurrencyCode.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoSourceValue.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoSourceValueUnion.md
  - docs/Models/Components/AccountingJournalCreateRequestDtoValue.md
  - docs/Models/Components/AccountingJournalResult.md
  - docs/Models/Components/AccountingJournalResultData.md
  - docs/Models/Components/AccountingJournalResultSourceValue.md
  - docs/Models/Components/AccountingJournalResultSourceValueUnion.md
  - docs/Models/Components/AccountingJournalResultStatus.md
  - docs/Models/Components/AccountingJournalResultValue.md
  - docs/Models/Components/AccountingJournalSourceValue.md
  - docs/Models/Components/AccountingJournalSourceValueUnion.md
  - docs/Models/Components/AccountingJournalStatus.md
  - docs/Models/Components/AccountingJournalValue.md
  - docs/Models/Components/AccountingJournalsPaginated.md
  - docs/Models/Components/AccountingTaxRate.md
  - docs/Models/Components/AccountingTaxRateActiveEnum.md
  - docs/Models/Components/AccountingTaxRateActiveUnion.md
  - docs/Models/Components/AccountingTaxRateResult.md
  - docs/Models/Components/AccountingTaxRateResultActiveEnum.md
  - docs/Models/Components/AccountingTaxRateResultActiveUnion.md
  - docs/Models/Components/AccountingTaxRateResultData.md
  - docs/Models/Components/AccountingTaxRatesPaginated.md
  - docs/Models/Components/AccountsPaginated.md
  - docs/Models/Components/Actor.md
  - docs/Models/Components/AdditionalData.md
  - docs/Models/Components/AdditionalDataValue.md
  - docs/Models/Components/Answer.md
  - docs/Models/Components/AnswerSourceValue.md
  - docs/Models/Components/AnswerSourceValueUnion.md
  - docs/Models/Components/AnswerType.md
  - docs/Models/Components/AnswerValue.md
  - docs/Models/Components/Application.md
  - docs/Models/Components/ApplicationApplicationStatus.md
  - docs/Models/Components/ApplicationAttachment.md
  - docs/Models/Components/ApplicationAttachmentContentType.md
  - docs/Models/Components/ApplicationAttachmentSourceValue.md
  - docs/Models/Components/ApplicationAttachmentSourceValueUnion.md
  - docs/Models/Components/ApplicationAttachmentValue.md
  - docs/Models/Components/ApplicationCandidate.md
  - docs/Models/Components/ApplicationChanges.md
  - docs/Models/Components/ApplicationChangesDataModel.md
  - docs/Models/Components/ApplicationChangesDataModelApplicationStatus.md
  - docs/Models/Components/ApplicationChangesDataModelSourceValue.md
  - docs/Models/Components/ApplicationChangesDataModelSourceValueUnion.md
  - docs/Models/Components/ApplicationChangesDataModelValue.md
  - docs/Models/Components/ApplicationChangesPaginated.md
  - docs/Models/Components/ApplicationChangesSourceValue.md
  - docs/Models/Components/ApplicationChangesSourceValueUnion.md
  - docs/Models/Components/ApplicationChangesValue.md
  - docs/Models/Components/ApplicationInterviewStage.md
  - docs/Models/Components/ApplicationResult.md
  - docs/Models/Components/ApplicationSource.md
  - docs/Models/Components/ApplicationSourceValue.md
  - docs/Models/Components/ApplicationSourceValueUnion.md
  - docs/Models/Components/ApplicationStage.md
  - docs/Models/Components/ApplicationStageResult.md
  - docs/Models/Components/ApplicationStagesPaginated.md
  - docs/Models/Components/ApplicationValue.md
  - docs/Models/Components/ApplicationsPaginated.md
  - docs/Models/Components/Archived.md
  - docs/Models/Components/ArchivedEnum.md
  - docs/Models/Components/AssessmentPackage.md
  - docs/Models/Components/AssessmentPackagePaginated.md
  - docs/Models/Components/AssessmentPackageResult.md
  - docs/Models/Components/Assignment.md
  - docs/Models/Components/AssignmentLearningObjectType.md
  - docs/Models/Components/AssignmentLearningObjectTypeSourceValueUnion.md
  - docs/Models/Components/AssignmentLearningObjectTypeValue.md
  - docs/Models/Components/AssignmentResult.md
  - docs/Models/Components/AssignmentResult1.md
  - docs/Models/Components/AssignmentResultSourceValueUnion.md
  - docs/Models/Components/AssignmentResultValue.md
  - docs/Models/Components/AssignmentSourceValueLearningObjectType.md
  - docs/Models/Components/AssignmentSourceValueResult.md
  - docs/Models/Components/AssignmentSourceValueStatus.md
  - docs/Models/Components/AssignmentStatus.md
  - docs/Models/Components/AssignmentStatusSourceValueUnion.md
  - docs/Models/Components/AssignmentStatusValue.md
  - docs/Models/Components/AssignmentsPaginated.md
  - docs/Models/Components/AtsCreateApplicationRequestDto.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSource.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateApplicationRequestDtoValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDto.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplication.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoJob.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoPackage.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoRequester.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoValue.md
  - docs/Models/Components/AtsCreateBackgroundCheckPackagesRequestDto.md
  - docs/Models/Components/AtsCreateCandidateRequestDto.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDto.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplication.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoCandidate.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoJob.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoPackage.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoRequester.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoValue.md
  - docs/Models/Components/AtsCreateJobRequestDto.md
  - docs/Models/Components/AtsCreateJobRequestDtoConfidential.md
  - docs/Models/Components/AtsCreateJobRequestDtoJobStatus.md
  - docs/Models/Components/AtsCreateJobRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateJobRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateJobRequestDtoValue.md
  - docs/Models/Components/AtsCreateNotesRequestDto.md
  - docs/Models/Components/AtsCreateNotesRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateNotesRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateNotesRequestDtoValue.md
  - docs/Models/Components/AtsCreateNotesRequestDtoVisibility.md
  - docs/Models/Components/AtsCreateOfferRequestDto.md
  - docs/Models/Components/AtsCreateOfferRequestDtoOfferStatus.md
  - docs/Models/Components/AtsCreateOfferRequestDtoSourceValue.md
  - docs/Models/Components/AtsCreateOfferRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsCreateOfferRequestDtoValue.md
  - docs/Models/Components/AtsDocumentApiModel.md
  - docs/Models/Components/AtsDocumentApiModelCategory.md
  - docs/Models/Components/AtsDocumentApiModelCategorySourceValueUnion.md
  - docs/Models/Components/AtsDocumentApiModelFileFormat.md
  - docs/Models/Components/AtsDocumentApiModelFileFormatSourceValueUnion.md
  - docs/Models/Components/AtsDocumentApiModelFileFormatValue.md
  - docs/Models/Components/AtsDocumentApiModelSourceValueCategory.md
  - docs/Models/Components/AtsDocumentApiModelSourceValueFileFormat.md
  - docs/Models/Components/AtsDocumentApiModelSourceValueType.md
  - docs/Models/Components/AtsDocumentApiModelType.md
  - docs/Models/Components/AtsDocumentApiModelTypeSourceValueUnion.md
  - docs/Models/Components/AtsDocumentApiModelTypeValue.md
  - docs/Models/Components/AtsDocumentResult.md
  - docs/Models/Components/AtsDocumentsPaginated.md
  - docs/Models/Components/AtsDocumentsUploadRequestDto.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoCategory.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoCategoryValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidential.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidentialSourceValueUnion.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoFileFormat.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoFileFormatSourceValueUnion.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoFileFormatValue.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoSourceValueConfidential.md
  - docs/Models/Components/AtsDocumentsUploadRequestDtoSourceValueFileFormat.md
  - docs/Models/Components/AtsJob.md
  - docs/Models/Components/AtsJobConfidential.md
  - docs/Models/Components/AtsJobHiringTeam.md
  - docs/Models/Components/AtsJobJobStatus.md
  - docs/Models/Components/AtsJobResult.md
  - docs/Models/Components/AtsJobSourceValue.md
  - docs/Models/Components/AtsJobSourceValueUnion.md
  - docs/Models/Components/AtsJobValue.md
  - docs/Models/Components/AtsJobsPaginated.md
  - docs/Models/Components/AtsMoveApplicationRequestDto.md
  - docs/Models/Components/AtsRejectApplicationRequestDto.md
  - docs/Models/Components/AtsUpdateApplicationRequestDto.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoApplicationStatus.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSource.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsUpdateApplicationRequestDtoValue.md
  - docs/Models/Components/AtsUpdateBackgroundCheckPackagesRequestDto.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDto.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoCandidate.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoResult.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoScore.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoValue.md
  - docs/Models/Components/AtsUpdateCandidateRequestDto.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDto.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoResult.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoScore.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoValue.md
  - docs/Models/Components/AtsUpdateJobRequestDto.md
  - docs/Models/Components/AtsUpdateJobRequestDtoConfidential.md
  - docs/Models/Components/AtsUpdateJobRequestDtoJobStatus.md
  - docs/Models/Components/AtsUpdateJobRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateJobRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsUpdateJobRequestDtoValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDto.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoSourceValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoSourceValueUnion.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoValue.md
  - docs/Models/Components/AtsUpdateNotesRequestDtoVisibility.md
  - docs/Models/Components/Attachment.md
  - docs/Models/Components/AttachmentContentType.md
  - docs/Models/Components/AttachmentSourceValue.md
  - docs/Models/Components/AttachmentSourceValueUnion.md
  - docs/Models/Components/AttachmentValue.md
  - docs/Models/Components/AuthorModel.md
  - docs/Models/Components/AvatarCategorySourceValueUnion.md
  - docs/Models/Components/AvatarFileFormatSourceValueUnion.md
  - docs/Models/Components/AvatarValue.md
  - docs/Models/Components/BackgroundCheckPackage.md
  - docs/Models/Components/BackgroundCheckPackagePaginated.md
  - docs/Models/Components/BackgroundCheckPackageResult.md
  - docs/Models/Components/BadRequestResponseData.md
  - docs/Models/Components/BadRequestResponseHeaders.md
  - docs/Models/Components/BalanceUnit.md
  - docs/Models/Components/BalanceUnitSourceValueUnion.md
  - docs/Models/Components/BalanceUnitValue.md
  - docs/Models/Components/BatchResultApiModel.md
  - docs/Models/Components/Body.md
  - docs/Models/Components/Campaign.md
  - docs/Models/Components/CampaignResult.md
  - docs/Models/Components/CampaignSourceValueStatus.md
  - docs/Models/Components/CampaignStatus.md
  - docs/Models/Components/CampaignStatusSourceValueUnion.md
  - docs/Models/Components/CampaignStatusValue.md
  - docs/Models/Components/CampaignsPaginated.md
  - docs/Models/Components/Candidate.md
  - docs/Models/Components/CandidateEmail.md
  - docs/Models/Components/CandidateResult.md
  - docs/Models/Components/CandidatesPaginated.md
  - docs/Models/Components/CategoriesPaginated.md
  - docs/Models/Components/Category.md
  - docs/Models/Components/CategoryActiveEnum.md
  - docs/Models/Components/CategoryActiveUnion.md
  - docs/Models/Components/CategoryHierarchy.md
  - docs/Models/Components/CategoryHierarchySourceValueUnion.md
  - docs/Models/Components/CategoryHierarchyValue.md
  - docs/Models/Components/CategoryLanguage.md
  - docs/Models/Components/CategoryLanguageSourceValueUnion.md
  - docs/Models/Components/CategoryLanguageValue.md
  - docs/Models/Components/CategoryLevel.md
  - docs/Models/Components/CategoryLevelSourceValueUnion.md
  - docs/Models/Components/CategoryLevelValue.md
  - docs/Models/Components/CategoryResult.md
  - docs/Models/Components/CategorySourceValueHierarchy.md
  - docs/Models/Components/CategorySourceValueLanguage.md
  - docs/Models/Components/CategorySourceValueLevel.md
  - docs/Models/Components/ChangeType.md
  - docs/Models/Components/ChannelsEnum.md
  - docs/Models/Components/ChannelsEnumSourceValue.md
  - docs/Models/Components/ChannelsEnumSourceValueUnion.md
  - docs/Models/Components/ChannelsEnumValue.md
  - docs/Models/Components/CompaniesPaginated.md
  - docs/Models/Components/Company.md
  - docs/Models/Components/CompanyResult.md
  - docs/Models/Components/Completion.md
  - docs/Models/Components/CompletionLearningObjectType.md
  - docs/Models/Components/CompletionLearningObjectTypeSourceValueUnion.md
  - docs/Models/Components/CompletionLearningObjectTypeValue.md
  - docs/Models/Components/CompletionResult.md
  - docs/Models/Components/CompletionResult1.md
  - docs/Models/Components/CompletionResultSourceValueUnion.md
  - docs/Models/Components/CompletionResultValue.md
  - docs/Models/Components/CompletionSourceValueLearningObjectType.md
  - docs/Models/Components/CompletionSourceValueResult.md
  - docs/Models/Components/CompletionsPaginated.md
  - docs/Models/Components/ConditionType.md
  - docs/Models/Components/ConditionTypeSourceValueUnion.md
  - docs/Models/Components/ConditionTypeValue.md
  - docs/Models/Components/ConnectSession.md
  - docs/Models/Components/ConnectSessionAuthenticate.md
  - docs/Models/Components/ConnectSessionCategory.md
  - docs/Models/Components/ConnectSessionCreate.md
  - docs/Models/Components/ConnectSessionCreateCategory.md
  - docs/Models/Components/ConnectSessionCreateMetadata.md
  - docs/Models/Components/ConnectSessionCreateType.md
  - docs/Models/Components/ConnectSessionMetadata.md
  - docs/Models/Components/ConnectSessionTokenAuthLink.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkCategory.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkMetadata.md
  - docs/Models/Components/ConnectSessionTokenAuthLinkType.md
  - docs/Models/Components/ConnectSessionType.md
  - docs/Models/Components/ConnectorsMeta.md
  - docs/Models/Components/ConnectorsMetaCategory.md
  - docs/Models/Components/Contact.md
  - docs/Models/Components/ContactResult.md
  - docs/Models/Components/ContactsPaginated.md
  - docs/Models/Components/Content.md
  - docs/Models/Components/ContentActiveEnum.md
  - docs/Models/Components/ContentActiveUnion.md
  - docs/Models/Components/ContentBlock.md
  - docs/Models/Components/ContentBlockResult.md
  - docs/Models/Components/ContentBlockSourceValueStatus.md
  - docs/Models/Components/ContentBlockSourceValueType.md
  - docs/Models/Components/ContentBlockStatus.md
  - docs/Models/Components/ContentBlockStatusSourceValueUnion.md
  - docs/Models/Components/ContentBlockStatusValue.md
  - docs/Models/Components/ContentBlockType.md
  - docs/Models/Components/ContentBlockTypeSourceValueUnion.md
  - docs/Models/Components/ContentBlockTypeValue.md
  - docs/Models/Components/ContentBlocksPaginated.md
  - docs/Models/Components/ContentContentType.md
  - docs/Models/Components/ContentPaginated.md
  - docs/Models/Components/ContentResult.md
  - docs/Models/Components/ContentSourceValue.md
  - docs/Models/Components/ContentSourceValueUnion.md
  - docs/Models/Components/ContentValue.md
  - docs/Models/Components/ContractType.md
  - docs/Models/Components/ContractTypeContractType.md
  - docs/Models/Components/ContractTypeSourceValueUnion.md
  - docs/Models/Components/ContractTypeValue.md
  - docs/Models/Components/CostCenter.md
  - docs/Models/Components/CostCenterSourceValueUnion.md
  - docs/Models/Components/CostCenterType.md
  - docs/Models/Components/CostCenterValue.md
  - docs/Models/Components/CostCenters.md
  - docs/Models/Components/CountryCodeEnum.md
  - docs/Models/Components/CountryCodeEnumSourceValue.md
  - docs/Models/Components/CountryCodeEnumSourceValueUnion.md
  - docs/Models/Components/CountryCodeEnumValue.md
  - docs/Models/Components/Course.md
  - docs/Models/Components/CourseActiveEnum.md
  - docs/Models/Components/CourseActiveUnion.md
  - docs/Models/Components/CoursePaginated.md
  - docs/Models/Components/CourseResult.md
  - docs/Models/Components/CreateAnswer.md
  - docs/Models/Components/CreateAnswerSourceValue.md
  - docs/Models/Components/CreateAnswerSourceValueUnion.md
  - docs/Models/Components/CreateAnswerType.md
  - docs/Models/Components/CreateAnswerValue.md
  - docs/Models/Components/CreateAssessmentOrderResult.md
  - docs/Models/Components/CreateBackgroundCheckOrderResult.md
  - docs/Models/Components/CreateCategoriesApiModel.md
  - docs/Models/Components/CreateCategoriesApiModelHierarchy.md
  - docs/Models/Components/CreateCategoriesApiModelHierarchySourceValueUnion.md
  - docs/Models/Components/CreateCategoriesApiModelHierarchyValue.md
  - docs/Models/Components/CreateCategoriesApiModelLanguage.md
  - docs/Models/Components/CreateCategoriesApiModelLanguageSourceValueUnion.md
  - docs/Models/Components/CreateCategoriesApiModelLanguageValue.md
  - docs/Models/Components/CreateCategoriesApiModelLevel.md
  - docs/Models/Components/CreateCategoriesApiModelLevelSourceValueUnion.md
  - docs/Models/Components/CreateCategoriesApiModelLevelValue.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValueHierarchy.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValueLanguage.md
  - docs/Models/Components/CreateCategoriesApiModelSourceValueLevel.md
  - docs/Models/Components/CreateCostCenterApiModel.md
  - docs/Models/Components/CreateEmploymentApiModel.md
  - docs/Models/Components/CreateEmploymentApiModelDurationUnit.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractType.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentContractTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentType.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/CreateEmploymentApiModelEmploymentTypeValue.md
  - docs/Models/Components/CreateEmploymentApiModelGrade.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequency.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequencySourceValueUnion.md
  - docs/Models/Components/CreateEmploymentApiModelPayFrequencyValue.md
  - docs/Models/Components/CreateEmploymentApiModelPayPeriod.md
  - docs/Models/Components/CreateEmploymentApiModelPayPeriodSourceValueUnion.md
  - docs/Models/Components/CreateEmploymentApiModelPayPeriodValue.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueEmploymentContractType.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueEmploymentType.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValuePayFrequency.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValuePayPeriod.md
  - docs/Models/Components/CreateEmploymentApiModelSourceValueWorkTime.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTime.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTimeSourceValueUnion.md
  - docs/Models/Components/CreateEmploymentApiModelWorkTimeValue.md
  - docs/Models/Components/CreateHRISBenefit.md
  - docs/Models/Components/CreateHRISBenefitBenefitType.md
  - docs/Models/Components/CreateHRISBenefitSourceValue.md
  - docs/Models/Components/CreateHRISBenefitSourceValueUnion.md
  - docs/Models/Components/CreateHRISBenefitValue.md
  - docs/Models/Components/CreateJournalLine.md
  - docs/Models/Components/CreateMessage.md
  - docs/Models/Components/CreateMessageEmailMessageContents.md
  - docs/Models/Components/CreateMessageMessageContent.md
  - docs/Models/Components/CreateMessageMessageType.md
  - docs/Models/Components/CreateMessagePushMessageContents.md
  - docs/Models/Components/CreateMessageSmsMessageContents.md
  - docs/Models/Components/CreateMessageSourceValue.md
  - docs/Models/Components/CreateMessageSourceValueUnion.md
  - docs/Models/Components/CreateMessageValue.md
  - docs/Models/Components/CreatePackage.md
  - docs/Models/Components/CreateQuestionnaire.md
  - docs/Models/Components/CreateResult.md
  - docs/Models/Components/CreateResultDataApiModel.md
  - docs/Models/Components/CreateSkillsApiModel.md
  - docs/Models/Components/CreateSkillsApiModelHierarchy.md
  - docs/Models/Components/CreateSkillsApiModelHierarchySourceValueUnion.md
  - docs/Models/Components/CreateSkillsApiModelHierarchyValue.md
  - docs/Models/Components/CreateSkillsApiModelLanguage.md
  - docs/Models/Components/CreateSkillsApiModelLanguageSourceValueUnion.md
  - docs/Models/Components/CreateSkillsApiModelLanguageValue.md
  - docs/Models/Components/CreateSkillsApiModelLevel.md
  - docs/Models/Components/CreateSkillsApiModelLevelSourceValueUnion.md
  - docs/Models/Components/CreateSkillsApiModelLevelValue.md
  - docs/Models/Components/CreateSkillsApiModelSourceValueHierarchy.md
  - docs/Models/Components/CreateSkillsApiModelSourceValueLanguage.md
  - docs/Models/Components/CreateSkillsApiModelSourceValueLevel.md
  - docs/Models/Components/CrmCreateContactRequestDto.md
  - docs/Models/Components/CustomFieldDefinition.md
  - docs/Models/Components/CustomFieldDefinitionResultApiModel.md
  - docs/Models/Components/CustomFieldDefinitionSourceValue.md
  - docs/Models/Components/CustomFieldDefinitionSourceValueUnion.md
  - docs/Models/Components/CustomFieldDefinitionType.md
  - docs/Models/Components/CustomFieldDefinitionValue.md
  - docs/Models/Components/CustomFieldDefinitionsPaginated.md
  - docs/Models/Components/CustomFieldOption.md
  - docs/Models/Components/CustomFieldOptionValue.md
  - docs/Models/Components/CustomFieldOptionValueUnion.md
  - docs/Models/Components/CustomFields.md
  - docs/Models/Components/CustomFieldsValue.md
  - docs/Models/Components/CustomFieldsValueUnion.md
  - docs/Models/Components/CustomMappingError.md
  - docs/Models/Components/DeleteResult.md
  - docs/Models/Components/Department.md
  - docs/Models/Components/DepartmentResult.md
  - docs/Models/Components/DepartmentSourceValueUnion.md
  - docs/Models/Components/DepartmentType.md
  - docs/Models/Components/DepartmentValue.md
  - docs/Models/Components/DepartmentsPaginated.md
  - docs/Models/Components/Description.md
  - docs/Models/Components/Division.md
  - docs/Models/Components/DivisionSourceValueUnion.md
  - docs/Models/Components/DivisionType.md
  - docs/Models/Components/DivisionValue.md
  - docs/Models/Components/DownloadApiModel.md
  - docs/Models/Components/DownloadHeadersApiModel.md
  - docs/Models/Components/Draft.md
  - docs/Models/Components/DraftEnum.md
  - docs/Models/Components/DriveResult.md
  - docs/Models/Components/Drives.md
  - docs/Models/Components/DrivesPaginated.md
  - docs/Models/Components/EmailMessages.md
  - docs/Models/Components/EmailMessagesMessageContent.md
  - docs/Models/Components/EmailMessagesMessageType.md
  - docs/Models/Components/EmailMessagesSourceValue.md
  - docs/Models/Components/EmailMessagesSourceValueUnion.md
  - docs/Models/Components/EmailMessagesValue.md
  - docs/Models/Components/EmailTemplate.md
  - docs/Models/Components/EmailTemplateResult.md
  - docs/Models/Components/EmailTemplatesPaginated.md
  - docs/Models/Components/Employee.md
  - docs/Models/Components/EmployeeAvatar.md
  - docs/Models/Components/EmployeeCompany.md
  - docs/Models/Components/EmployeeEmploymentContractType.md
  - docs/Models/Components/EmployeeEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/EmployeeEmploymentContractTypeValue.md
  - docs/Models/Components/EmployeeEmploymentStatus.md
  - docs/Models/Components/EmployeeEmploymentStatusSourceValueUnion.md
  - docs/Models/Components/EmployeeEmploymentStatusValue.md
  - docs/Models/Components/EmployeeEmploymentType.md
  - docs/Models/Components/EmployeeEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/EmployeeEmploymentTypeValue.md
  - docs/Models/Components/EmployeeEthnicity.md
  - docs/Models/Components/EmployeeEthnicitySourceValueUnion.md
  - docs/Models/Components/EmployeeEthnicityValue.md
  - docs/Models/Components/EmployeeGender.md
  - docs/Models/Components/EmployeeGenderSourceValueUnion.md
  - docs/Models/Components/EmployeeGenderValue.md
  - docs/Models/Components/EmployeeHomeLocation.md
  - docs/Models/Components/EmployeeHomeLocationCountry.md
  - docs/Models/Components/EmployeeHomeLocationCountrySourceValueUnion.md
  - docs/Models/Components/EmployeeHomeLocationCountryValue.md
  - docs/Models/Components/EmployeeMaritalStatus.md
  - docs/Models/Components/EmployeeMaritalStatusSourceValueUnion.md
  - docs/Models/Components/EmployeeMaritalStatusValue.md
  - docs/Models/Components/EmployeeNationalIdentityNumber.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountry.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountrySourceValueUnion.md
  - docs/Models/Components/EmployeeNationalIdentityNumberCountryValue.md
  - docs/Models/Components/EmployeePreferredLanguage.md
  - docs/Models/Components/EmployeePreferredLanguageSourceValueUnion.md
  - docs/Models/Components/EmployeePreferredLanguageValue.md
  - docs/Models/Components/EmployeeResult.md
  - docs/Models/Components/EmployeeSourceValueEmploymentContractType.md
  - docs/Models/Components/EmployeeSourceValueEmploymentStatus.md
  - docs/Models/Components/EmployeeSourceValueEmploymentType.md
  - docs/Models/Components/EmployeeSourceValueEthnicity.md
  - docs/Models/Components/EmployeeSourceValueGender.md
  - docs/Models/Components/EmployeeSourceValueHomeLocationCountry.md
  - docs/Models/Components/EmployeeSourceValueMaritalStatus.md
  - docs/Models/Components/EmployeeSourceValueNationalIdentityNumberCountry.md
  - docs/Models/Components/EmployeeSourceValuePreferredLanguage.md
  - docs/Models/Components/EmployeeSourceValueType.md
  - docs/Models/Components/EmployeeSourceValueWorkLocationCountry.md
  - docs/Models/Components/EmployeeType.md
  - docs/Models/Components/EmployeeTypeSourceValueUnion.md
  - docs/Models/Components/EmployeeTypeValue.md
  - docs/Models/Components/EmployeeWorkLocation.md
  - docs/Models/Components/EmployeeWorkLocationCountry.md
  - docs/Models/Components/EmployeeWorkLocationCountrySourceValueUnion.md
  - docs/Models/Components/EmployeeWorkLocationCountryValue.md
  - docs/Models/Components/EmployeesPaginated.md
  - docs/Models/Components/Employment.md
  - docs/Models/Components/EmploymentActiveEnum.md
  - docs/Models/Components/EmploymentActiveUnion.md
  - docs/Models/Components/EmploymentDepartment.md
  - docs/Models/Components/EmploymentDurationUnit.md
  - docs/Models/Components/EmploymentEmploymentContractType.md
  - docs/Models/Components/EmploymentEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/EmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/EmploymentEmploymentType.md
  - docs/Models/Components/EmploymentEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/EmploymentEmploymentTypeValue.md
  - docs/Models/Components/EmploymentGrade.md
  - docs/Models/Components/EmploymentJob.md
  - docs/Models/Components/EmploymentManagerApiModel.md
  - docs/Models/Components/EmploymentManagerApiModelSourceValue.md
  - docs/Models/Components/EmploymentManagerApiModelSourceValueUnion.md
  - docs/Models/Components/EmploymentManagerApiModelValue.md
  - docs/Models/Components/EmploymentPayFrequency.md
  - docs/Models/Components/EmploymentPayFrequencySourceValueUnion.md
  - docs/Models/Components/EmploymentPayFrequencyValue.md
  - docs/Models/Components/EmploymentPayPeriod.md
  - docs/Models/Components/EmploymentPayPeriodSourceValueUnion.md
  - docs/Models/Components/EmploymentPayPeriodValue.md
  - docs/Models/Components/EmploymentResult.md
  - docs/Models/Components/EmploymentSourceValueEmploymentContractType.md
  - docs/Models/Components/EmploymentSourceValueEmploymentType.md
  - docs/Models/Components/EmploymentSourceValuePayFrequency.md
  - docs/Models/Components/EmploymentSourceValuePayPeriod.md
  - docs/Models/Components/EmploymentSourceValueType.md
  - docs/Models/Components/EmploymentSourceValueWorkTime.md
  - docs/Models/Components/EmploymentType.md
  - docs/Models/Components/EmploymentTypeSourceValueUnion.md
  - docs/Models/Components/EmploymentTypeType.md
  - docs/Models/Components/EmploymentTypeValue.md
  - docs/Models/Components/EmploymentWorkTime.md
  - docs/Models/Components/EmploymentWorkTimeSourceValueUnion.md
  - docs/Models/Components/EmploymentWorkTimeValue.md
  - docs/Models/Components/EmploymentsPaginated.md
  - docs/Models/Components/EntitySkillResult.md
  - docs/Models/Components/EntitySkills.md
  - docs/Models/Components/EntitySkillsActiveEnum.md
  - docs/Models/Components/EntitySkillsActiveUnion.md
  - docs/Models/Components/EntitySkillsCreateRequestDto.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiency.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiencySourceValueUnion.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiencyValue.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiency.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencySourceValueUnion.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencyValue.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoSourceValueMaximumProficiency.md
  - docs/Models/Components/EntitySkillsCreateRequestDtoSourceValueMinimumProficiency.md
  - docs/Models/Components/EntitySkillsLanguage.md
  - docs/Models/Components/EntitySkillsLanguageSourceValueUnion.md
  - docs/Models/Components/EntitySkillsLanguageValue.md
  - docs/Models/Components/EntitySkillsMaximumProficiency.md
  - docs/Models/Components/EntitySkillsMaximumProficiencySourceValueUnion.md
  - docs/Models/Components/EntitySkillsMaximumProficiencyValue.md
  - docs/Models/Components/EntitySkillsMinimumProficiency.md
  - docs/Models/Components/EntitySkillsMinimumProficiencySourceValueUnion.md
  - docs/Models/Components/EntitySkillsMinimumProficiencyValue.md
  - docs/Models/Components/EntitySkillsPaginated.md
  - docs/Models/Components/EntitySkillsSourceValueLanguage.md
  - docs/Models/Components/EntitySkillsSourceValueMaximumProficiency.md
  - docs/Models/Components/EntitySkillsSourceValueMinimumProficiency.md
  - docs/Models/Components/Field.md
  - docs/Models/Components/FieldRequiredEnum.md
  - docs/Models/Components/FieldRequiredUnion.md
  - docs/Models/Components/FieldType.md
  - docs/Models/Components/File.md
  - docs/Models/Components/FileCategory.md
  - docs/Models/Components/FileCategorySourceValueUnion.md
  - docs/Models/Components/FileFileFormat.md
  - docs/Models/Components/FileFileFormatSourceValueUnion.md
  - docs/Models/Components/FileResult.md
  - docs/Models/Components/FileSourceValueCategory.md
  - docs/Models/Components/FileSourceValueFileFormat.md
  - docs/Models/Components/FileValue.md
  - docs/Models/Components/Files.md
  - docs/Models/Components/FilesFileFormat.md
  - docs/Models/Components/FilesHasChildrenEnum.md
  - docs/Models/Components/FilesHasChildrenUnion.md
  - docs/Models/Components/FilesHasContentEnum.md
  - docs/Models/Components/FilesHasContentUnion.md
  - docs/Models/Components/FilesPaginated.md
  - docs/Models/Components/FilesSourceValue.md
  - docs/Models/Components/FilesSourceValueUnion.md
  - docs/Models/Components/FilesValue.md
  - docs/Models/Components/FolderResult.md
  - docs/Models/Components/Folders.md
  - docs/Models/Components/FoldersHasChildrenEnum.md
  - docs/Models/Components/FoldersHasChildrenUnion.md
  - docs/Models/Components/FoldersHasContentEnum.md
  - docs/Models/Components/FoldersHasContentUnion.md
  - docs/Models/Components/FoldersPaginated.md
  - docs/Models/Components/HRISBenefit.md
  - docs/Models/Components/HRISBenefitBenefitType.md
  - docs/Models/Components/HRISBenefitResult.md
  - docs/Models/Components/HRISBenefitSourceValue.md
  - docs/Models/Components/HRISBenefitSourceValueUnion.md
  - docs/Models/Components/HRISBenefitValue.md
  - docs/Models/Components/HRISBenefitsPaginated.md
  - docs/Models/Components/HRISCostCenter.md
  - docs/Models/Components/HRISCostCenterPaginated.md
  - docs/Models/Components/HRISCostCenterResult.md
  - docs/Models/Components/HRISCostCenterSourceValue.md
  - docs/Models/Components/HRISCostCenterSourceValueUnion.md
  - docs/Models/Components/HRISCostCenterType.md
  - docs/Models/Components/HRISCostCenterValue.md
  - docs/Models/Components/HRISDepartment.md
  - docs/Models/Components/HRISDepartmentSourceValue.md
  - docs/Models/Components/HRISDepartmentSourceValueUnion.md
  - docs/Models/Components/HRISDepartmentType.md
  - docs/Models/Components/HRISDepartmentValue.md
  - docs/Models/Components/HRISDepartmentsPaginated.md
  - docs/Models/Components/HRISDepartmentsResult.md
  - docs/Models/Components/HRISDivision.md
  - docs/Models/Components/HRISDivisionSourceValue.md
  - docs/Models/Components/HRISDivisionSourceValueUnion.md
  - docs/Models/Components/HRISDivisionType.md
  - docs/Models/Components/HRISDivisionValue.md
  - docs/Models/Components/HRISDivisionsPaginated.md
  - docs/Models/Components/HRISDivisionsResult.md
  - docs/Models/Components/HRISGroup.md
  - docs/Models/Components/HRISGroupSourceValue.md
  - docs/Models/Components/HRISGroupSourceValueUnion.md
  - docs/Models/Components/HRISGroupType.md
  - docs/Models/Components/HRISGroupValue.md
  - docs/Models/Components/HRISGroupsPaginated.md
  - docs/Models/Components/HRISGroupsResult.md
  - docs/Models/Components/HRISLocation.md
  - docs/Models/Components/HRISLocationCountry.md
  - docs/Models/Components/HRISLocationCountrySourceValueUnion.md
  - docs/Models/Components/HRISLocationCountryValue.md
  - docs/Models/Components/HRISLocationLocationType.md
  - docs/Models/Components/HRISLocationLocationTypeSourceValueUnion.md
  - docs/Models/Components/HRISLocationLocationTypeValue.md
  - docs/Models/Components/HRISLocationResult.md
  - docs/Models/Components/HRISLocationSourceValueCountry.md
  - docs/Models/Components/HRISLocationSourceValueLocationType.md
  - docs/Models/Components/HRISLocationsPaginated.md
  - docs/Models/Components/HRISTeam.md
  - docs/Models/Components/HRISTeamSourceValue.md
  - docs/Models/Components/HRISTeamSourceValueUnion.md
  - docs/Models/Components/HRISTeamType.md
  - docs/Models/Components/HRISTeamValue.md
  - docs/Models/Components/HRISTeamsPaginated.md
  - docs/Models/Components/HRISTeamsResult.md
  - docs/Models/Components/HTTPMetadata.md
  - docs/Models/Components/HomeLocationLocationType.md
  - docs/Models/Components/HomeLocationLocationTypeSourceValueUnion.md
  - docs/Models/Components/HomeLocationLocationTypeValue.md
  - docs/Models/Components/HrisBatchDocumentUploadRequestDto.md
  - docs/Models/Components/HrisCreateEmployeeRequestDto.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoAvatar.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoDurationUnit.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmployment.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicity.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicitySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoEthnicityValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGender.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGenderSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGenderValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoGrade.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocation.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountrySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationState.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationStateSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumber.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountrySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountryValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayFrequency.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayFrequencySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayPeriod.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayPeriodSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPayPeriodValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguage.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEthnicity.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueGender.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationState.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueMaritalStatus.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePayFrequency.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePayPeriod.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePreferredLanguage.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationState.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkTime.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoType.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoTypeValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocation.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountry.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountrySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationState.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationStateSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationValue.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkTime.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkTimeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmployeeRequestDtoWorkTimeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDto.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoDurationUnit.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoGrade.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequency.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayPeriod.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayPeriodSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoPayPeriodValue.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentContractType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentType.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayFrequency.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayPeriod.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoSourceValueWorkTime.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTime.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeSourceValueUnion.md
  - docs/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDto.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDayEnum.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDayUnion.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoReason.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoSourceValueStatus.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoSourceValueType.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDayEnum.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDayUnion.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStatus.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStatusSourceValueUnion.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoStatusValue.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoType.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateTimeOffRequestDtoTypeValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDto.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoCategory.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoCategorySourceValueUnion.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocument.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormat.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormatSourceValueUnion.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBy.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBySourceValueUnion.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedByValue.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueCategory.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueFileFormat.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueIssuedBy.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueType.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoType.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeSourceValueUnion.md
  - docs/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeValue.md
  - docs/Models/Components/HrisDocumentApiModel.md
  - docs/Models/Components/HrisDocumentApiModelCategory.md
  - docs/Models/Components/HrisDocumentApiModelCategorySourceValueUnion.md
  - docs/Models/Components/HrisDocumentApiModelCategoryValue.md
  - docs/Models/Components/HrisDocumentApiModelFileFormat.md
  - docs/Models/Components/HrisDocumentApiModelFileFormatSourceValueUnion.md
  - docs/Models/Components/HrisDocumentApiModelFileFormatValue.md
  - docs/Models/Components/HrisDocumentApiModelSourceValueCategory.md
  - docs/Models/Components/HrisDocumentApiModelSourceValueFileFormat.md
  - docs/Models/Components/HrisDocumentApiModelSourceValueType.md
  - docs/Models/Components/HrisDocumentApiModelType.md
  - docs/Models/Components/HrisDocumentApiModelTypeSourceValueUnion.md
  - docs/Models/Components/HrisDocumentApiModelTypeValue.md
  - docs/Models/Components/HrisDocumentResult.md
  - docs/Models/Components/HrisDocumentsPaginated.md
  - docs/Models/Components/HrisDocumentsUploadRequestDto.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoCategory.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoCategoryValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoConfidential.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoConfidentialSourceValueUnion.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoFileFormat.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoFileFormatSourceValueUnion.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoFileFormatValue.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoSourceValueConfidential.md
  - docs/Models/Components/HrisDocumentsUploadRequestDtoSourceValueFileFormat.md
  - docs/Models/Components/HrisInviteEmployeeRequestDto.md
  - docs/Models/Components/HrisJob.md
  - docs/Models/Components/HrisJobResult.md
  - docs/Models/Components/HrisJobSourceValue.md
  - docs/Models/Components/HrisJobSourceValueUnion.md
  - docs/Models/Components/HrisJobStatus.md
  - docs/Models/Components/HrisJobValue.md
  - docs/Models/Components/HrisJobsPaginated.md
  - docs/Models/Components/HrisShift.md
  - docs/Models/Components/HrisShiftApprovalStatus.md
  - docs/Models/Components/HrisShiftApprovalStatusSourceValueUnion.md
  - docs/Models/Components/HrisShiftApprovalStatusValue.md
  - docs/Models/Components/HrisShiftResult.md
  - docs/Models/Components/HrisShiftResultApprovalStatus.md
  - docs/Models/Components/HrisShiftResultApprovalStatusSourceValueUnion.md
  - docs/Models/Components/HrisShiftResultApprovalStatusValue.md
  - docs/Models/Components/HrisShiftResultData.md
  - docs/Models/Components/HrisShiftResultSourceValueApprovalStatus.md
  - docs/Models/Components/HrisShiftResultSourceValueStatus.md
  - docs/Models/Components/HrisShiftResultStatus.md
  - docs/Models/Components/HrisShiftResultStatusSourceValueUnion.md
  - docs/Models/Components/HrisShiftResultStatusValue.md
  - docs/Models/Components/HrisShiftSourceValueApprovalStatus.md
  - docs/Models/Components/HrisShiftSourceValueStatus.md
  - docs/Models/Components/HrisShiftStatus.md
  - docs/Models/Components/HrisShiftStatusSourceValueUnion.md
  - docs/Models/Components/HrisShiftStatusValue.md
  - docs/Models/Components/HrisShiftsPaginated.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDto.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoAvatar.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoDurationUnit.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmployment.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicity.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicitySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoEthnicityValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGender.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGenderSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGenderValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoGrade.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocation.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountrySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationStateSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumber.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountrySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountryValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequency.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequencySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriod.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriodSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriodValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguage.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEthnicity.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueGender.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueMaritalStatus.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePayFrequency.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePayPeriod.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePreferredLanguage.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkTime.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoType.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoTypeValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocation.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountry.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountrySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationState.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationStateSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationValue.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkTime.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkTimeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmployeeRequestDtoWorkTimeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDto.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoDurationUnit.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoGrade.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequency.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencySourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencyValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriod.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriodSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriodValue.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentContractType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentType.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayFrequency.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayPeriod.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueWorkTime.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTime.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeSourceValueUnion.md
  - docs/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeValue.md
  - docs/Models/Components/IamGroup.md
  - docs/Models/Components/IamGroupResult.md
  - docs/Models/Components/IamGroupSourceValue.md
  - docs/Models/Components/IamGroupSourceValueUnion.md
  - docs/Models/Components/IamGroupType.md
  - docs/Models/Components/IamGroupValue.md
  - docs/Models/Components/IamGroupsPaginated.md
  - docs/Models/Components/IamMfaTypeEnum.md
  - docs/Models/Components/IamMfaTypeEnumSourceValue.md
  - docs/Models/Components/IamMfaTypeEnumSourceValueUnion.md
  - docs/Models/Components/IamMfaTypeEnumValue.md
  - docs/Models/Components/IamPermission.md
  - docs/Models/Components/IamPermissionSourceValue.md
  - docs/Models/Components/IamPermissionSourceValueUnion.md
  - docs/Models/Components/IamPermissionType.md
  - docs/Models/Components/IamPermissionValue.md
  - docs/Models/Components/IamPoliciesPaginated.md
  - docs/Models/Components/IamPolicy.md
  - docs/Models/Components/IamPolicyResult.md
  - docs/Models/Components/IamResource.md
  - docs/Models/Components/IamResourceSourceValue.md
  - docs/Models/Components/IamResourceSourceValueUnion.md
  - docs/Models/Components/IamResourceType.md
  - docs/Models/Components/IamResourceValue.md
  - docs/Models/Components/IamRole.md
  - docs/Models/Components/IamRoleResult.md
  - docs/Models/Components/IamRoleSourceValue.md
  - docs/Models/Components/IamRoleSourceValueUnion.md
  - docs/Models/Components/IamRoleType.md
  - docs/Models/Components/IamRoleValue.md
  - docs/Models/Components/IamRolesPaginated.md
  - docs/Models/Components/IamUpdateUserRequestDto.md
  - docs/Models/Components/IamUpdateUserRequestDtoIsBotUserEnum.md
  - docs/Models/Components/IamUpdateUserRequestDtoIsBotUserUnion.md
  - docs/Models/Components/IamUpdateUserRequestDtoSourceValue.md
  - docs/Models/Components/IamUpdateUserRequestDtoSourceValueUnion.md
  - docs/Models/Components/IamUpdateUserRequestDtoStatus.md
  - docs/Models/Components/IamUpdateUserRequestDtoValue.md
  - docs/Models/Components/IamUser.md
  - docs/Models/Components/IamUserAvatar.md
  - docs/Models/Components/IamUserCategory.md
  - docs/Models/Components/IamUserFileFormat.md
  - docs/Models/Components/IamUserIsBotUserEnum.md
  - docs/Models/Components/IamUserIsBotUserUnion.md
  - docs/Models/Components/IamUserResult.md
  - docs/Models/Components/IamUserSourceValueStatus.md
  - docs/Models/Components/IamUserStatus.md
  - docs/Models/Components/IamUserStatusSourceValueUnion.md
  - docs/Models/Components/IamUserStatusValue.md
  - docs/Models/Components/IamUsersPaginated.md
  - docs/Models/Components/Images.md
  - docs/Models/Components/InAppMessages.md
  - docs/Models/Components/InAppMessagesMessageContent.md
  - docs/Models/Components/InAppMessagesMessageType.md
  - docs/Models/Components/InAppMessagesSourceValue.md
  - docs/Models/Components/InAppMessagesSourceValueUnion.md
  - docs/Models/Components/InAppMessagesValue.md
  - docs/Models/Components/InAppTemplate.md
  - docs/Models/Components/InAppTemplateResult.md
  - docs/Models/Components/InAppTemplatesPaginated.md
  - docs/Models/Components/Interview.md
  - docs/Models/Components/InterviewInterviewStage.md
  - docs/Models/Components/InterviewInterviewStatus.md
  - docs/Models/Components/InterviewPart.md
  - docs/Models/Components/InterviewPartSourceValue.md
  - docs/Models/Components/InterviewPartSourceValueUnion.md
  - docs/Models/Components/InterviewPartType.md
  - docs/Models/Components/InterviewPartValue.md
  - docs/Models/Components/InterviewSourceValue.md
  - docs/Models/Components/InterviewSourceValueUnion.md
  - docs/Models/Components/InterviewStage.md
  - docs/Models/Components/InterviewStageResult.md
  - docs/Models/Components/InterviewStagesPaginated.md
  - docs/Models/Components/InterviewValue.md
  - docs/Models/Components/Interviewer.md
  - docs/Models/Components/InterviewsPaginated.md
  - docs/Models/Components/InterviewsResult.md
  - docs/Models/Components/InviteEmployeeResult.md
  - docs/Models/Components/IsPaid.md
  - docs/Models/Components/IsPaidEnum.md
  - docs/Models/Components/IsRoot.md
  - docs/Models/Components/IsRootEnum.md
  - docs/Models/Components/JobDescription.md
  - docs/Models/Components/JobPosting.md
  - docs/Models/Components/JobPostingCompensation.md
  - docs/Models/Components/JobPostingCompensationPayFrequency.md
  - docs/Models/Components/JobPostingCompensationPayFrequencySourceValueUnion.md
  - docs/Models/Components/JobPostingCompensationPayFrequencyValue.md
  - docs/Models/Components/JobPostingCompensationPayPeriod.md
  - docs/Models/Components/JobPostingCompensationPayPeriodSourceValueUnion.md
  - docs/Models/Components/JobPostingCompensationPayPeriodValue.md
  - docs/Models/Components/JobPostingCompensationSourceValuePayFrequency.md
  - docs/Models/Components/JobPostingCompensationSourceValuePayPeriod.md
  - docs/Models/Components/JobPostingCompensationSourceValueType.md
  - docs/Models/Components/JobPostingCompensationType.md
  - docs/Models/Components/JobPostingCompensationTypeSourceValueUnion.md
  - docs/Models/Components/JobPostingCompensationTypeValue.md
  - docs/Models/Components/JobPostingContent.md
  - docs/Models/Components/JobPostingContentSection.md
  - docs/Models/Components/JobPostingContentSectionSourceValue.md
  - docs/Models/Components/JobPostingContentSectionSourceValueUnion.md
  - docs/Models/Components/JobPostingContentSectionType.md
  - docs/Models/Components/JobPostingContentSectionValue.md
  - docs/Models/Components/JobPostingEmploymentContractType.md
  - docs/Models/Components/JobPostingEmploymentContractTypeSourceValueUnion.md
  - docs/Models/Components/JobPostingEmploymentContractTypeValue.md
  - docs/Models/Components/JobPostingEmploymentType.md
  - docs/Models/Components/JobPostingEmploymentTypeSourceValueUnion.md
  - docs/Models/Components/JobPostingEmploymentTypeValue.md
  - docs/Models/Components/JobPostingInternal.md
  - docs/Models/Components/JobPostingLocation.md
  - docs/Models/Components/JobPostingQuestionnaire.md
  - docs/Models/Components/JobPostingQuestionnaireInternalEnum.md
  - docs/Models/Components/JobPostingQuestionnaireInternalUnion.md
  - docs/Models/Components/JobPostingResult.md
  - docs/Models/Components/JobPostingSourceValueEmploymentContractType.md
  - docs/Models/Components/JobPostingSourceValueEmploymentType.md
  - docs/Models/Components/JobPostingSourceValueStatus.md
  - docs/Models/Components/JobPostingStatus.md
  - docs/Models/Components/JobPostingStatusSourceValueUnion.md
  - docs/Models/Components/JobPostingStatusValue.md
  - docs/Models/Components/JobPostingsPaginated.md
  - docs/Models/Components/JournalLine.md
  - docs/Models/Components/JournalLineCurrencyCode.md
  - docs/Models/Components/JournalLineCurrencyCodeSourceValueUnion.md
  - docs/Models/Components/JournalLineCurrencyCodeValue.md
  - docs/Models/Components/JournalLineSourceValueCurrencyCode.md
  - docs/Models/Components/Label.md
  - docs/Models/Components/LaborType.md
  - docs/Models/Components/LanguageEnum.md
  - docs/Models/Components/LanguageEnumSourceValue.md
  - docs/Models/Components/LanguageEnumSourceValueUnion.md
  - docs/Models/Components/LanguageEnumValue.md
  - docs/Models/Components/LinkedAccount.md
  - docs/Models/Components/LinkedAccountCredentials.md
  - docs/Models/Components/LinkedAccountMeta.md
  - docs/Models/Components/LinkedAccountMetaCategory.md
  - docs/Models/Components/LinkedAccountSetupInformation.md
  - docs/Models/Components/LinkedAccountType.md
  - docs/Models/Components/List.md
  - docs/Models/Components/ListItem.md
  - docs/Models/Components/ListResult.md
  - docs/Models/Components/ListSourceValue.md
  - docs/Models/Components/ListSourceValueUnion.md
  - docs/Models/Components/ListType.md
  - docs/Models/Components/ListValue.md
  - docs/Models/Components/ListsPaginated.md
  - docs/Models/Components/LmsBatchUpsertContentRequestDto.md
  - docs/Models/Components/LmsCreateAssignmentRequestDto.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoSourceValueUnion.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoStatus.md
  - docs/Models/Components/LmsCreateAssignmentRequestDtoValue.md
  - docs/Models/Components/LmsCreateCompletionRequestDto.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoResult.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoSourceValueUnion.md
  - docs/Models/Components/LmsCreateCompletionRequestDtoValue.md
  - docs/Models/Components/LmsCreateContentRequestDto.md
  - docs/Models/Components/LmsCreateContentRequestDtoActiveEnum.md
  - docs/Models/Components/LmsCreateContentRequestDtoActiveUnion.md
  - docs/Models/Components/LmsCreateContentRequestDtoContentType.md
  - docs/Models/Components/LmsCreateContentRequestDtoSourceValue.md
  - docs/Models/Components/LmsCreateContentRequestDtoSourceValueUnion.md
  - docs/Models/Components/LmsCreateContentRequestDtoValue.md
  - docs/Models/Components/LmsUpsertContentRequestDto.md
  - docs/Models/Components/LmsUpsertContentRequestDtoActiveEnum.md
  - docs/Models/Components/LmsUpsertContentRequestDtoActiveUnion.md
  - docs/Models/Components/LmsUpsertContentRequestDtoContentType.md
  - docs/Models/Components/LmsUpsertContentRequestDtoSourceValue.md
  - docs/Models/Components/LmsUpsertContentRequestDtoSourceValueUnion.md
  - docs/Models/Components/LmsUpsertContentRequestDtoValue.md
  - docs/Models/Components/LmsUser.md
  - docs/Models/Components/LmsUserActiveEnum.md
  - docs/Models/Components/LmsUserActiveUnion.md
  - docs/Models/Components/LocalizationModel.md
  - docs/Models/Components/LocalizationModelLanguage.md
  - docs/Models/Components/LocalizationModelSourceValue.md
  - docs/Models/Components/LocalizationModelSourceValueUnion.md
  - docs/Models/Components/LocalizationModelValue.md
  - docs/Models/Components/Location.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDto.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValue.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValueUnion.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoType.md
  - docs/Models/Components/MarketingCreateContentBlocksRequestDtoValue.md
  - docs/Models/Components/MarketingCreateEmailTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateInAppTemplateRequestDto.md
  - docs/Models/Components/MarketingCreatePushTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateSmsTemplateRequestDto.md
  - docs/Models/Components/MarketingCreateTemplateRequestDto.md
  - docs/Models/Components/Message.md
  - docs/Models/Components/MessageEmailMessageContents.md
  - docs/Models/Components/MessageMessageContent.md
  - docs/Models/Components/MessageMessageType.md
  - docs/Models/Components/MessagePushMessageContents.md
  - docs/Models/Components/MessageSmsMessageContents.md
  - docs/Models/Components/MessageSourceValue.md
  - docs/Models/Components/MessageSourceValueUnion.md
  - docs/Models/Components/MessageValue.md
  - docs/Models/Components/MessagingAttachment.md
  - docs/Models/Components/MessagingAttachmentResult.md
  - docs/Models/Components/MessagingAttachmentResultData.md
  - docs/Models/Components/MessagingAttachmentsPaginated.md
  - docs/Models/Components/MessagingConversation.md
  - docs/Models/Components/MessagingConversationPrivateEnum.md
  - docs/Models/Components/MessagingConversationPrivateUnion.md
  - docs/Models/Components/MessagingConversationResult.md
  - docs/Models/Components/MessagingConversationResultData.md
  - docs/Models/Components/MessagingConversationResultPrivateEnum.md
  - docs/Models/Components/MessagingConversationResultPrivateUnion.md
  - docs/Models/Components/MessagingConversationsPaginated.md
  - docs/Models/Components/MessagingCreateConversationRequestDto.md
  - docs/Models/Components/MessagingCreateConversationRequestDtoPrivateEnum.md
  - docs/Models/Components/MessagingCreateConversationRequestDtoPrivateUnion.md
  - docs/Models/Components/MessagingMessage.md
  - docs/Models/Components/MessagingMessageActiveEnum.md
  - docs/Models/Components/MessagingMessageActiveUnion.md
  - docs/Models/Components/MessagingMessageAuthor.md
  - docs/Models/Components/MessagingMessageContent.md
  - docs/Models/Components/MessagingMessageResult.md
  - docs/Models/Components/MessagingMessageResultActiveEnum.md
  - docs/Models/Components/MessagingMessageResultActiveUnion.md
  - docs/Models/Components/MessagingMessageResultAuthor.md
  - docs/Models/Components/MessagingMessageResultContent.md
  - docs/Models/Components/MessagingMessageResultData.md
  - docs/Models/Components/MessagingMessageSendRequestDto.md
  - docs/Models/Components/MessagingMessagesPaginated.md
  - docs/Models/Components/MessagingUser.md
  - docs/Models/Components/MessagingUserActiveEnum.md
  - docs/Models/Components/MessagingUserActiveUnion.md
  - docs/Models/Components/MessagingUserBotEnum.md
  - docs/Models/Components/MessagingUserBotUnion.md
  - docs/Models/Components/MessagingUserResult.md
  - docs/Models/Components/MessagingUserResultActiveEnum.md
  - docs/Models/Components/MessagingUserResultActiveUnion.md
  - docs/Models/Components/MessagingUserResultBotEnum.md
  - docs/Models/Components/MessagingUserResultBotUnion.md
  - docs/Models/Components/MessagingUserResultData.md
  - docs/Models/Components/MessagingUsersPaginated.md
  - docs/Models/Components/Method.md
  - docs/Models/Components/MoveApplicationResult.md
  - docs/Models/Components/NationalIdentityNumberApiModel.md
  - docs/Models/Components/NationalIdentityNumberApiModelCountry.md
  - docs/Models/Components/NationalIdentityNumberApiModelCountrySourceValueUnion.md
  - docs/Models/Components/NationalIdentityNumberApiModelCountryValue.md
  - docs/Models/Components/NationalIdentityNumberApiModelSourceValueCountry.md
  - docs/Models/Components/NationalIdentityNumberApiModelSourceValueType.md
  - docs/Models/Components/NationalIdentityNumberApiModelType.md
  - docs/Models/Components/NationalIdentityNumberApiModelTypeSourceValueUnion.md
  - docs/Models/Components/NationalIdentityNumberApiModelTypeValue.md
  - docs/Models/Components/Note.md
  - docs/Models/Components/NoteContentApiModel.md
  - docs/Models/Components/NoteResult.md
  - docs/Models/Components/NoteSourceValue.md
  - docs/Models/Components/NoteSourceValueUnion.md
  - docs/Models/Components/NoteValue.md
  - docs/Models/Components/NoteVisibility.md
  - docs/Models/Components/NotesPaginated.md
  - docs/Models/Components/Offer.md
  - docs/Models/Components/OfferHistory.md
  - docs/Models/Components/OfferOfferStatus.md
  - docs/Models/Components/OfferSourceValue.md
  - docs/Models/Components/OfferSourceValueUnion.md
  - docs/Models/Components/OfferValue.md
  - docs/Models/Components/OffersPaginated.md
  - docs/Models/Components/OffersResult.md
  - docs/Models/Components/OverallRecommendation.md
  - docs/Models/Components/Package.md
  - docs/Models/Components/ParentQuestion.md
  - docs/Models/Components/PatchAccountExternalDto.md
  - docs/Models/Components/PatchAccountExternalDtoCredentials.md
  - docs/Models/Components/PatchAccountExternalDtoMetadata.md
  - docs/Models/Components/PatchAccountExternalDtoSetupInformation.md
  - docs/Models/Components/PatchAccountExternalDtoType.md
  - docs/Models/Components/PhoneNumber.md
  - docs/Models/Components/PhoneNumberType.md
  - docs/Models/Components/PlatformLog.md
  - docs/Models/Components/PlatformLogsPaginated.md
  - docs/Models/Components/Position.md
  - docs/Models/Components/PositionResult.md
  - docs/Models/Components/PositionSourceValue.md
  - docs/Models/Components/PositionSourceValueUnion.md
  - docs/Models/Components/PositionStatus.md
  - docs/Models/Components/PositionValue.md
  - docs/Models/Components/PositionsPaginated.md
  - docs/Models/Components/ProviderError.md
  - docs/Models/Components/ProviderErrorApiModel.md
  - docs/Models/Components/ProviderErrorApiModelHeaders.md
  - docs/Models/Components/ProviderErrorApiModelRaw.md
  - docs/Models/Components/ProviderErrorHeaders.md
  - docs/Models/Components/ProviderErrorRaw.md
  - docs/Models/Components/ProxyRequestBody.md
  - docs/Models/Components/PushMessages.md
  - docs/Models/Components/PushMessagesMessageContent.md
  - docs/Models/Components/PushMessagesMessageType.md
  - docs/Models/Components/PushMessagesSourceValue.md
  - docs/Models/Components/PushMessagesSourceValueUnion.md
  - docs/Models/Components/PushMessagesValue.md
  - docs/Models/Components/PushTemplate.md
  - docs/Models/Components/PushTemplateResult.md
  - docs/Models/Components/PushTemplatesPaginated.md
  - docs/Models/Components/Question.md
  - docs/Models/Components/QuestionMultipleChoiceAnswers.md
  - docs/Models/Components/QuestionRequiredEnum.md
  - docs/Models/Components/QuestionRequiredUnion.md
  - docs/Models/Components/QuestionSourceValueType.md
  - docs/Models/Components/QuestionType.md
  - docs/Models/Components/QuestionTypeSourceValueUnion.md
  - docs/Models/Components/QuestionTypeValue.md
  - docs/Models/Components/Questionnaire.md
  - docs/Models/Components/RawResponse.md
  - docs/Models/Components/Reason.md
  - docs/Models/Components/Reference.md
  - docs/Models/Components/ReferenceActiveEnum.md
  - docs/Models/Components/ReferenceActiveUnion.md
  - docs/Models/Components/ReferencePaginated.md
  - docs/Models/Components/ReferenceResult.md
  - docs/Models/Components/RejectApplicationResult.md
  - docs/Models/Components/RejectedReason.md
  - docs/Models/Components/RejectedReasonResult.md
  - docs/Models/Components/RejectedReasonSourceValue.md
  - docs/Models/Components/RejectedReasonSourceValueUnion.md
  - docs/Models/Components/RejectedReasonType.md
  - docs/Models/Components/RejectedReasonValue.md
  - docs/Models/Components/RejectedReasonsPaginated.md
  - docs/Models/Components/Resources.md
  - docs/Models/Components/Response.md
  - docs/Models/Components/ResultLink.md
  - docs/Models/Components/Role.md
  - docs/Models/Components/RoleType.md
  - docs/Models/Components/ScheduleType.md
  - docs/Models/Components/ScheduleTypeSourceValueUnion.md
  - docs/Models/Components/ScheduleTypeValue.md
  - docs/Models/Components/ScheduledInterview.md
  - docs/Models/Components/ScheduledInterviewInterviewStage.md
  - docs/Models/Components/ScheduledInterviewInterviewStatus.md
  - docs/Models/Components/ScheduledInterviewSourceValue.md
  - docs/Models/Components/ScheduledInterviewSourceValueUnion.md
  - docs/Models/Components/ScheduledInterviewValue.md
  - docs/Models/Components/ScheduledInterviewsPaginated.md
  - docs/Models/Components/ScheduledInterviewsResult.md
  - docs/Models/Components/Scorecard.md
  - docs/Models/Components/ScorecardSection.md
  - docs/Models/Components/ScorecardsPaginated.md
  - docs/Models/Components/ScorecardsResult.md
  - docs/Models/Components/Secrets.md
  - docs/Models/Components/Security.md
  - docs/Models/Components/ShiftBreak.md
  - docs/Models/Components/SkillResult.md
  - docs/Models/Components/Skills.md
  - docs/Models/Components/SkillsActiveEnum.md
  - docs/Models/Components/SkillsActiveUnion.md
  - docs/Models/Components/SkillsHierarchy.md
  - docs/Models/Components/SkillsHierarchySourceValueUnion.md
  - docs/Models/Components/SkillsHierarchyValue.md
  - docs/Models/Components/SkillsLanguage.md
  - docs/Models/Components/SkillsLanguageSourceValueUnion.md
  - docs/Models/Components/SkillsLanguageValue.md
  - docs/Models/Components/SkillsLevel.md
  - docs/Models/Components/SkillsLevelSourceValueUnion.md
  - docs/Models/Components/SkillsLevelValue.md
  - docs/Models/Components/SkillsPaginated.md
  - docs/Models/Components/SkillsSourceValueHierarchy.md
  - docs/Models/Components/SkillsSourceValueLanguage.md
  - docs/Models/Components/SkillsSourceValueLevel.md
  - docs/Models/Components/SmsMessages.md
  - docs/Models/Components/SmsMessagesMessageContent.md
  - docs/Models/Components/SmsMessagesMessageType.md
  - docs/Models/Components/SmsMessagesSourceValue.md
  - docs/Models/Components/SmsMessagesSourceValueUnion.md
  - docs/Models/Components/SmsMessagesValue.md
  - docs/Models/Components/SmsTemplate.md
  - docs/Models/Components/SmsTemplateResult.md
  - docs/Models/Components/SmsTemplatesPaginated.md
  - docs/Models/Components/SocialLink.md
  - docs/Models/Components/SourceValueAccountType.md
  - docs/Models/Components/SourceValueAvatarCategory.md
  - docs/Models/Components/SourceValueAvatarFileFormat.md
  - docs/Models/Components/SourceValueBalanceUnit.md
  - docs/Models/Components/SourceValueConditionType.md
  - docs/Models/Components/SourceValueContractType.md
  - docs/Models/Components/SourceValueCostCenter.md
  - docs/Models/Components/SourceValueDepartment.md
  - docs/Models/Components/SourceValueDivision.md
  - docs/Models/Components/SourceValueHomeLocationLocationType.md
  - docs/Models/Components/SourceValueScheduleType.md
  - docs/Models/Components/SourceValueWorkLocationLocationType.md
  - docs/Models/Components/StatusEnum.md
  - docs/Models/Components/StatusReason.md
  - docs/Models/Components/StepLog.md
  - docs/Models/Components/StepLogPartial.md
  - docs/Models/Components/StepLogRequest.md
  - docs/Models/Components/StepLogResponse.md
  - docs/Models/Components/StepLogUrl.md
  - docs/Models/Components/StepLogsPaginated.md
  - docs/Models/Components/Task.md
  - docs/Models/Components/TaskCommentApiModel.md
  - docs/Models/Components/TaskResult.md
  - docs/Models/Components/TaskResultData.md
  - docs/Models/Components/TaskResultSourceValueStatus.md
  - docs/Models/Components/TaskResultSourceValueType.md
  - docs/Models/Components/TaskResultStatus.md
  - docs/Models/Components/TaskResultStatusSourceValueUnion.md
  - docs/Models/Components/TaskResultStatusValue.md
  - docs/Models/Components/TaskResultType.md
  - docs/Models/Components/TaskResultTypeSourceValueUnion.md
  - docs/Models/Components/TaskResultTypeValue.md
  - docs/Models/Components/TaskSourceValueStatus.md
  - docs/Models/Components/TaskSourceValueType.md
  - docs/Models/Components/TaskStatus.md
  - docs/Models/Components/TaskStatusSourceValueUnion.md
  - docs/Models/Components/TaskStatusValue.md
  - docs/Models/Components/TaskType.md
  - docs/Models/Components/TaskTypeSourceValueUnion.md
  - docs/Models/Components/TaskTypeValue.md
  - docs/Models/Components/TasksPaginated.md
  - docs/Models/Components/Template.md
  - docs/Models/Components/TemplateResult.md
  - docs/Models/Components/TemplatesPaginated.md
  - docs/Models/Components/TicketingAttachment.md
  - docs/Models/Components/TicketingAttachmentFileFormat.md
  - docs/Models/Components/TicketingAttachmentResult.md
  - docs/Models/Components/TicketingAttachmentResultData.md
  - docs/Models/Components/TicketingAttachmentResultFileFormat.md
  - docs/Models/Components/TicketingAttachmentResultSourceValue.md
  - docs/Models/Components/TicketingAttachmentResultSourceValueUnion.md
  - docs/Models/Components/TicketingAttachmentResultValue.md
  - docs/Models/Components/TicketingAttachmentSourceValue.md
  - docs/Models/Components/TicketingAttachmentSourceValueUnion.md
  - docs/Models/Components/TicketingAttachmentValue.md
  - docs/Models/Components/TicketingAttachmentsPaginated.md
  - docs/Models/Components/TicketingComment.md
  - docs/Models/Components/TicketingCommentInternalEnum.md
  - docs/Models/Components/TicketingCommentInternalUnion.md
  - docs/Models/Components/TicketingCommentResult.md
  - docs/Models/Components/TicketingCommentResultData.md
  - docs/Models/Components/TicketingCommentResultInternalEnum.md
  - docs/Models/Components/TicketingCommentResultInternalUnion.md
  - docs/Models/Components/TicketingCommentsPaginated.md
  - docs/Models/Components/TicketingComponent.md
  - docs/Models/Components/TicketingComponentResult.md
  - docs/Models/Components/TicketingComponentResultData.md
  - docs/Models/Components/TicketingComponentsPaginated.md
  - docs/Models/Components/TicketingContent.md
  - docs/Models/Components/TicketingProject.md
  - docs/Models/Components/TicketingProjectResult.md
  - docs/Models/Components/TicketingProjectResultData.md
  - docs/Models/Components/TicketingProjectsPaginated.md
  - docs/Models/Components/TicketingReadTicket.md
  - docs/Models/Components/TicketingReadTicketOrganization.md
  - docs/Models/Components/TicketingReadTicketPriority.md
  - docs/Models/Components/TicketingReadTicketPrioritySourceValueUnion.md
  - docs/Models/Components/TicketingReadTicketPriorityValue.md
  - docs/Models/Components/TicketingReadTicketSourceValuePriority.md
  - docs/Models/Components/TicketingReadTicketSourceValueStatus.md
  - docs/Models/Components/TicketingReadTicketStatus.md
  - docs/Models/Components/TicketingReadTicketStatusSourceValueUnion.md
  - docs/Models/Components/TicketingReadTicketStatusType.md
  - docs/Models/Components/TicketingReadTicketStatusValue.md
  - docs/Models/Components/TicketingReadTicketType.md
  - docs/Models/Components/TicketingTicketCreateRequestDto.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoPriority.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoSourceValue.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoSourceValueUnion.md
  - docs/Models/Components/TicketingTicketCreateRequestDtoValue.md
  - docs/Models/Components/TicketingTicketResult.md
  - docs/Models/Components/TicketingTicketResultData.md
  - docs/Models/Components/TicketingTicketResultOrganization.md
  - docs/Models/Components/TicketingTicketResultPriority.md
  - docs/Models/Components/TicketingTicketResultPrioritySourceValueUnion.md
  - docs/Models/Components/TicketingTicketResultPriorityValue.md
  - docs/Models/Components/TicketingTicketResultSourceValuePriority.md
  - docs/Models/Components/TicketingTicketResultSourceValueStatus.md
  - docs/Models/Components/TicketingTicketResultStatus.md
  - docs/Models/Components/TicketingTicketResultStatusSourceValueUnion.md
  - docs/Models/Components/TicketingTicketResultStatusType.md
  - docs/Models/Components/TicketingTicketResultStatusValue.md
  - docs/Models/Components/TicketingTicketResultType.md
  - docs/Models/Components/TicketingTicketStatus.md
  - docs/Models/Components/TicketingTicketStatusSourceValue.md
  - docs/Models/Components/TicketingTicketStatusSourceValueUnion.md
  - docs/Models/Components/TicketingTicketStatusType.md
  - docs/Models/Components/TicketingTicketStatusValue.md
  - docs/Models/Components/TicketingTicketStatusesPaginated.md
  - docs/Models/Components/TicketingTicketType.md
  - docs/Models/Components/TicketingTicketTypePaginated.md
  - docs/Models/Components/TicketingTicketTypeResult.md
  - docs/Models/Components/TicketingTicketTypeResultData.md
  - docs/Models/Components/TicketingTicketUpdateRequestDto.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoPriority.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoPrioritySourceValueUnion.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoPriorityValue.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoSourceValuePriority.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoSourceValueStatus.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatus.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatusSourceValueUnion.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoStatusValue.md
  - docs/Models/Components/TicketingTicketUpdateRequestDtoType.md
  - docs/Models/Components/TicketingTicketsPaginated.md
  - docs/Models/Components/TicketingUser.md
  - docs/Models/Components/TicketingUserActiveEnum.md
  - docs/Models/Components/TicketingUserActiveUnion.md
  - docs/Models/Components/TicketingUserResult.md
  - docs/Models/Components/TicketingUserResultActiveEnum.md
  - docs/Models/Components/TicketingUserResultActiveUnion.md
  - docs/Models/Components/TicketingUserResultData.md
  - docs/Models/Components/TicketingUserResultSourceValue.md
  - docs/Models/Components/TicketingUserResultSourceValueUnion.md
  - docs/Models/Components/TicketingUserResultType.md
  - docs/Models/Components/TicketingUserResultValue.md
  - docs/Models/Components/TicketingUserSourceValue.md
  - docs/Models/Components/TicketingUserSourceValueUnion.md
  - docs/Models/Components/TicketingUserType.md
  - docs/Models/Components/TicketingUserValue.md
  - docs/Models/Components/TicketingUsersPaginated.md
  - docs/Models/Components/TimeEntries.md
  - docs/Models/Components/TimeEntriesActiveEnum.md
  - docs/Models/Components/TimeEntriesActiveUnion.md
  - docs/Models/Components/TimeEntriesPaginated.md
  - docs/Models/Components/TimeEntriesResult.md
  - docs/Models/Components/TimeEntriesSourceValue.md
  - docs/Models/Components/TimeEntriesSourceValueUnion.md
  - docs/Models/Components/TimeEntriesStatus.md
  - docs/Models/Components/TimeEntriesValue.md
  - docs/Models/Components/TimeOff.md
  - docs/Models/Components/TimeOffBalanceResult.md
  - docs/Models/Components/TimeOffBalances.md
  - docs/Models/Components/TimeOffBalancesDurationUnit.md
  - docs/Models/Components/TimeOffBalancesDurationUnitSourceValueUnion.md
  - docs/Models/Components/TimeOffBalancesDurationUnitValue.md
  - docs/Models/Components/TimeOffBalancesPaginated.md
  - docs/Models/Components/TimeOffBalancesPolicy.md
  - docs/Models/Components/TimeOffBalancesSourceValueDurationUnit.md
  - docs/Models/Components/TimeOffBalancesSourceValueType.md
  - docs/Models/Components/TimeOffBalancesType.md
  - docs/Models/Components/TimeOffBalancesTypeSourceValueUnion.md
  - docs/Models/Components/TimeOffBalancesTypeValue.md
  - docs/Models/Components/TimeOffDurationUnit.md
  - docs/Models/Components/TimeOffDurationUnitSourceValueUnion.md
  - docs/Models/Components/TimeOffDurationUnitValue.md
  - docs/Models/Components/TimeOffEndHalfDayEnum.md
  - docs/Models/Components/TimeOffEndHalfDayUnion.md
  - docs/Models/Components/TimeOffPaginated.md
  - docs/Models/Components/TimeOffPolicies.md
  - docs/Models/Components/TimeOffPoliciesDurationUnit.md
  - docs/Models/Components/TimeOffPoliciesDurationUnitSourceValueUnion.md
  - docs/Models/Components/TimeOffPoliciesDurationUnitValue.md
  - docs/Models/Components/TimeOffPoliciesPaginated.md
  - docs/Models/Components/TimeOffPoliciesSourceValueDurationUnit.md
  - docs/Models/Components/TimeOffPoliciesSourceValueType.md
  - docs/Models/Components/TimeOffPoliciesType.md
  - docs/Models/Components/TimeOffPoliciesTypeSourceValueUnion.md
  - docs/Models/Components/TimeOffPoliciesTypeValue.md
  - docs/Models/Components/TimeOffPolicy.md
  - docs/Models/Components/TimeOffPolicyResult.md
  - docs/Models/Components/TimeOffPolicyType.md
  - docs/Models/Components/TimeOffPolicyTypeSourceValueUnion.md
  - docs/Models/Components/TimeOffPolicyTypeValue.md
  - docs/Models/Components/TimeOffReason.md
  - docs/Models/Components/TimeOffResult.md
  - docs/Models/Components/TimeOffSourceValueDurationUnit.md
  - docs/Models/Components/TimeOffSourceValuePolicyType.md
  - docs/Models/Components/TimeOffSourceValueStatus.md
  - docs/Models/Components/TimeOffSourceValueType.md
  - docs/Models/Components/TimeOffStartHalfDayEnum.md
  - docs/Models/Components/TimeOffStartHalfDayUnion.md
  - docs/Models/Components/TimeOffStatus.md
  - docs/Models/Components/TimeOffStatusSourceValueUnion.md
  - docs/Models/Components/TimeOffStatusValue.md
  - docs/Models/Components/TimeOffType.md
  - docs/Models/Components/TimeOffTypeSourceValueUnion.md
  - docs/Models/Components/TimeOffTypeValue.md
  - docs/Models/Components/UnifiedLogResult.md
  - docs/Models/Components/UnifiedLogs.md
  - docs/Models/Components/UnifiedLogsPaginated.md
  - docs/Models/Components/UnifiedLogsPartial.md
  - docs/Models/Components/UnifiedLogsRequest.md
  - docs/Models/Components/UnifiedLogsResponse.md
  - docs/Models/Components/UnifiedLogsUrl.md
  - docs/Models/Components/UnifiedUploadRequestDto.md
  - docs/Models/Components/UnifiedUploadRequestDtoCategory.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidential.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidentialSourceValueUnion.md
  - docs/Models/Components/UnifiedUploadRequestDtoConfidentialValue.md
  - docs/Models/Components/UnifiedUploadRequestDtoFileFormat.md
  - docs/Models/Components/UnifiedUploadRequestDtoFileFormatSourceValueUnion.md
  - docs/Models/Components/UnifiedUploadRequestDtoFileFormatValue.md
  - docs/Models/Components/UnifiedUploadRequestDtoSourceValueConfidential.md
  - docs/Models/Components/UnifiedUploadRequestDtoSourceValueFileFormat.md
  - docs/Models/Components/UnifiedWarningApiModel.md
  - docs/Models/Components/UpdatePackage.md
  - docs/Models/Components/UpdateResult.md
  - docs/Models/Components/UpdateTaskRequestDto.md
  - docs/Models/Components/UpdateTaskRequestDtoSourceValue.md
  - docs/Models/Components/UpdateTaskRequestDtoSourceValueUnion.md
  - docs/Models/Components/UpdateTaskRequestDtoStatus.md
  - docs/Models/Components/UpdateTaskRequestDtoValue.md
  - docs/Models/Components/UpsertResult.md
  - docs/Models/Components/UpsertResultDataExternalReferenceModel.md
  - docs/Models/Components/UserResult.md
  - docs/Models/Components/UsersPaginated.md
  - docs/Models/Components/WorkEligibility.md
  - docs/Models/Components/WorkEligibilityCategory.md
  - docs/Models/Components/WorkEligibilityCategorySourceValueUnion.md
  - docs/Models/Components/WorkEligibilityDocument.md
  - docs/Models/Components/WorkEligibilityDocumentValue.md
  - docs/Models/Components/WorkEligibilityFileFormat.md
  - docs/Models/Components/WorkEligibilityFileFormatSourceValueUnion.md
  - docs/Models/Components/WorkEligibilityIssuedBy.md
  - docs/Models/Components/WorkEligibilityIssuedBySourceValueUnion.md
  - docs/Models/Components/WorkEligibilityIssuedByValue.md
  - docs/Models/Components/WorkEligibilityPaginated.md
  - docs/Models/Components/WorkEligibilityResult.md
  - docs/Models/Components/WorkEligibilitySourceValueCategory.md
  - docs/Models/Components/WorkEligibilitySourceValueFileFormat.md
  - docs/Models/Components/WorkEligibilitySourceValueIssuedBy.md
  - docs/Models/Components/WorkEligibilitySourceValueType.md
  - docs/Models/Components/WorkEligibilityType.md
  - docs/Models/Components/WorkEligibilityTypeSourceValueUnion.md
  - docs/Models/Components/WorkEligibilityTypeValue.md
  - docs/Models/Components/WorkLocationLocationType.md
  - docs/Models/Components/WorkLocationLocationTypeSourceValueUnion.md
  - docs/Models/Components/WorkLocationLocationTypeValue.md
  - docs/Models/Components/WriteResultApiModel.md
  - docs/Models/Errors/BadGatewayResponseException.md
  - docs/Models/Errors/BadRequestResponseException.md
  - docs/Models/Errors/ConflictResponseException.md
  - docs/Models/Errors/ForbiddenResponseException.md
  - docs/Models/Errors/InternalServerErrorResponse.md
  - docs/Models/Errors/NotFoundResponseException.md
  - docs/Models/Errors/NotImplementedResponseException.md
  - docs/Models/Errors/PreconditionFailedResponseException.md
  - docs/Models/Errors/RequestTimedOutResponseException.md
  - docs/Models/Errors/TooManyRequestsResponseException.md
  - docs/Models/Errors/UnauthorizedResponseException.md
  - docs/Models/Errors/UnprocessableEntityResponseException.md
  - docs/Models/Requests/AccountingBatchCreateCompanyJournalsRequest.md
  - docs/Models/Requests/AccountingBatchCreateCompanyJournalsResponse.md
  - docs/Models/Requests/AccountingCreateCompanyJournalRequest.md
  - docs/Models/Requests/AccountingCreateCompanyJournalResponse.md
  - docs/Models/Requests/AccountingGetCompanyAccountRequest.md
  - docs/Models/Requests/AccountingGetCompanyAccountResponse.md
  - docs/Models/Requests/AccountingGetCompanyJournalRequest.md
  - docs/Models/Requests/AccountingGetCompanyJournalResponse.md
  - docs/Models/Requests/AccountingGetCompanyRequest.md
  - docs/Models/Requests/AccountingGetCompanyResponse.md
  - docs/Models/Requests/AccountingGetCompanyTaxRateRequest.md
  - docs/Models/Requests/AccountingGetCompanyTaxRateResponse.md
  - docs/Models/Requests/AccountingListCompaniesFilter.md
  - docs/Models/Requests/AccountingListCompaniesRequest.md
  - docs/Models/Requests/AccountingListCompaniesResponse.md
  - docs/Models/Requests/AccountingListCompanyAccountsFilter.md
  - docs/Models/Requests/AccountingListCompanyAccountsRequest.md
  - docs/Models/Requests/AccountingListCompanyAccountsResponse.md
  - docs/Models/Requests/AccountingListCompanyJournalsFilter.md
  - docs/Models/Requests/AccountingListCompanyJournalsRequest.md
  - docs/Models/Requests/AccountingListCompanyJournalsResponse.md
  - docs/Models/Requests/AccountingListCompanyTaxRatesFilter.md
  - docs/Models/Requests/AccountingListCompanyTaxRatesRequest.md
  - docs/Models/Requests/AccountingListCompanyTaxRatesResponse.md
  - docs/Models/Requests/AtsCreateApplicationNoteRequest.md
  - docs/Models/Requests/AtsCreateApplicationNoteResponse.md
  - docs/Models/Requests/AtsCreateApplicationRequest.md
  - docs/Models/Requests/AtsCreateApplicationResponse.md
  - docs/Models/Requests/AtsCreateBackgroundCheckPackageRequest.md
  - docs/Models/Requests/AtsCreateBackgroundCheckPackageResponse.md
  - docs/Models/Requests/AtsCreateCandidateNoteRequest.md
  - docs/Models/Requests/AtsCreateCandidateNoteResponse.md
  - docs/Models/Requests/AtsCreateCandidateRequest.md
  - docs/Models/Requests/AtsCreateCandidateResponse.md
  - docs/Models/Requests/AtsCreateJobRequest.md
  - docs/Models/Requests/AtsCreateJobResponse.md
  - docs/Models/Requests/AtsCreateOfferRequest.md
  - docs/Models/Requests/AtsCreateOfferResponse.md
  - docs/Models/Requests/AtsDeleteBackgroundCheckPackageRequest.md
  - docs/Models/Requests/AtsDeleteBackgroundCheckPackageResponse.md
  - docs/Models/Requests/AtsDownloadApplicationDocumentRequest.md
  - docs/Models/Requests/AtsDownloadApplicationDocumentResponse.md
  - docs/Models/Requests/AtsGetApplicationCustomFieldDefinitionFilter.md
  - docs/Models/Requests/AtsGetApplicationCustomFieldDefinitionRequest.md
  - docs/Models/Requests/AtsGetApplicationCustomFieldDefinitionResponse.md
  - docs/Models/Requests/AtsGetApplicationDocumentCategoryRequest.md
  - docs/Models/Requests/AtsGetApplicationDocumentCategoryResponse.md
  - docs/Models/Requests/AtsGetApplicationDocumentRequest.md
  - docs/Models/Requests/AtsGetApplicationDocumentResponse.md
  - docs/Models/Requests/AtsGetApplicationNoteRequest.md
  - docs/Models/Requests/AtsGetApplicationNoteResponse.md
  - docs/Models/Requests/AtsGetApplicationOfferRequest.md
  - docs/Models/Requests/AtsGetApplicationOfferResponse.md
  - docs/Models/Requests/AtsGetApplicationRequest.md
  - docs/Models/Requests/AtsGetApplicationResponse.md
  - docs/Models/Requests/AtsGetApplicationScheduledInterviewRequest.md
  - docs/Models/Requests/AtsGetApplicationScheduledInterviewResponse.md
  - docs/Models/Requests/AtsGetApplicationScorecardRequest.md
  - docs/Models/Requests/AtsGetApplicationScorecardResponse.md
  - docs/Models/Requests/AtsGetAssessmentsPackageRequest.md
  - docs/Models/Requests/AtsGetAssessmentsPackageResponse.md
  - docs/Models/Requests/AtsGetBackgroundCheckPackageRequest.md
  - docs/Models/Requests/AtsGetBackgroundCheckPackageResponse.md
  - docs/Models/Requests/AtsGetCandidateCustomFieldDefinitionFilter.md
  - docs/Models/Requests/AtsGetCandidateCustomFieldDefinitionRequest.md
  - docs/Models/Requests/AtsGetCandidateCustomFieldDefinitionResponse.md
  - docs/Models/Requests/AtsGetCandidateNoteRequest.md
  - docs/Models/Requests/AtsGetCandidateNoteResponse.md
  - docs/Models/Requests/AtsGetCandidateRequest.md
  - docs/Models/Requests/AtsGetCandidateResponse.md
  - docs/Models/Requests/AtsGetDepartmentRequest.md
  - docs/Models/Requests/AtsGetDepartmentResponse.md
  - docs/Models/Requests/AtsGetInterviewRequest.md
  - docs/Models/Requests/AtsGetInterviewResponse.md
  - docs/Models/Requests/AtsGetInterviewStageRequest.md
  - docs/Models/Requests/AtsGetInterviewStageResponse.md
  - docs/Models/Requests/AtsGetJobApplicationStageRequest.md
  - docs/Models/Requests/AtsGetJobApplicationStageResponse.md
  - docs/Models/Requests/AtsGetJobCustomFieldDefinitionFilter.md
  - docs/Models/Requests/AtsGetJobCustomFieldDefinitionRequest.md
  - docs/Models/Requests/AtsGetJobCustomFieldDefinitionResponse.md
  - docs/Models/Requests/AtsGetJobPostingRequest.md
  - docs/Models/Requests/AtsGetJobPostingResponse.md
  - docs/Models/Requests/AtsGetJobRequest.md
  - docs/Models/Requests/AtsGetJobResponse.md
  - docs/Models/Requests/AtsGetListRequest.md
  - docs/Models/Requests/AtsGetListResponse.md
  - docs/Models/Requests/AtsGetLocationRequest.md
  - docs/Models/Requests/AtsGetLocationResponse.md
  - docs/Models/Requests/AtsGetOfferRequest.md
  - docs/Models/Requests/AtsGetOfferResponse.md
  - docs/Models/Requests/AtsGetRejectedReasonRequest.md
  - docs/Models/Requests/AtsGetRejectedReasonResponse.md
  - docs/Models/Requests/AtsGetUserRequest.md
  - docs/Models/Requests/AtsGetUserResponse.md
  - docs/Models/Requests/AtsListApplicationChangesFilter.md
  - docs/Models/Requests/AtsListApplicationChangesRequest.md
  - docs/Models/Requests/AtsListApplicationChangesResponse.md
  - docs/Models/Requests/AtsListApplicationCustomFieldDefinitionsFilter.md
  - docs/Models/Requests/AtsListApplicationCustomFieldDefinitionsRequest.md
  - docs/Models/Requests/AtsListApplicationCustomFieldDefinitionsResponse.md
  - docs/Models/Requests/AtsListApplicationDocumentCategoriesFilter.md
  - docs/Models/Requests/AtsListApplicationDocumentCategoriesRequest.md
  - docs/Models/Requests/AtsListApplicationDocumentCategoriesResponse.md
  - docs/Models/Requests/AtsListApplicationDocumentsFilter.md
  - docs/Models/Requests/AtsListApplicationDocumentsRequest.md
  - docs/Models/Requests/AtsListApplicationDocumentsResponse.md
  - docs/Models/Requests/AtsListApplicationNotesFilter.md
  - docs/Models/Requests/AtsListApplicationNotesRequest.md
  - docs/Models/Requests/AtsListApplicationNotesResponse.md
  - docs/Models/Requests/AtsListApplicationScorecardsFilter.md
  - docs/Models/Requests/AtsListApplicationScorecardsRequest.md
  - docs/Models/Requests/AtsListApplicationScorecardsResponse.md
  - docs/Models/Requests/AtsListApplicationsFilter.md
  - docs/Models/Requests/AtsListApplicationsOffersFilter.md
  - docs/Models/Requests/AtsListApplicationsOffersRequest.md
  - docs/Models/Requests/AtsListApplicationsOffersResponse.md
  - docs/Models/Requests/AtsListApplicationsRequest.md
  - docs/Models/Requests/AtsListApplicationsResponse.md
  - docs/Models/Requests/AtsListApplicationsScheduledInterviewsFilter.md
  - docs/Models/Requests/AtsListApplicationsScheduledInterviewsRequest.md
  - docs/Models/Requests/AtsListApplicationsScheduledInterviewsResponse.md
  - docs/Models/Requests/AtsListAssessmentsPackagesFilter.md
  - docs/Models/Requests/AtsListAssessmentsPackagesRequest.md
  - docs/Models/Requests/AtsListAssessmentsPackagesResponse.md
  - docs/Models/Requests/AtsListBackgroundCheckPackagesFilter.md
  - docs/Models/Requests/AtsListBackgroundCheckPackagesRequest.md
  - docs/Models/Requests/AtsListBackgroundCheckPackagesResponse.md
  - docs/Models/Requests/AtsListCandidateCustomFieldDefinitionsFilter.md
  - docs/Models/Requests/AtsListCandidateCustomFieldDefinitionsRequest.md
  - docs/Models/Requests/AtsListCandidateCustomFieldDefinitionsResponse.md
  - docs/Models/Requests/AtsListCandidateNotesFilter.md
  - docs/Models/Requests/AtsListCandidateNotesRequest.md
  - docs/Models/Requests/AtsListCandidateNotesResponse.md
  - docs/Models/Requests/AtsListCandidatesFilter.md
  - docs/Models/Requests/AtsListCandidatesRequest.md
  - docs/Models/Requests/AtsListCandidatesResponse.md
  - docs/Models/Requests/AtsListDepartmentsFilter.md
  - docs/Models/Requests/AtsListDepartmentsRequest.md
  - docs/Models/Requests/AtsListDepartmentsResponse.md
  - docs/Models/Requests/AtsListInterviewStagesFilter.md
  - docs/Models/Requests/AtsListInterviewStagesRequest.md
  - docs/Models/Requests/AtsListInterviewStagesResponse.md
  - docs/Models/Requests/AtsListInterviewsFilter.md
  - docs/Models/Requests/AtsListInterviewsRequest.md
  - docs/Models/Requests/AtsListInterviewsResponse.md
  - docs/Models/Requests/AtsListJobApplicationStagesFilter.md
  - docs/Models/Requests/AtsListJobApplicationStagesRequest.md
  - docs/Models/Requests/AtsListJobApplicationStagesResponse.md
  - docs/Models/Requests/AtsListJobCustomFieldDefinitionsFilter.md
  - docs/Models/Requests/AtsListJobCustomFieldDefinitionsRequest.md
  - docs/Models/Requests/AtsListJobCustomFieldDefinitionsResponse.md
  - docs/Models/Requests/AtsListJobPostingsFilter.md
  - docs/Models/Requests/AtsListJobPostingsRequest.md
  - docs/Models/Requests/AtsListJobPostingsResponse.md
  - docs/Models/Requests/AtsListJobsFilter.md
  - docs/Models/Requests/AtsListJobsRequest.md
  - docs/Models/Requests/AtsListJobsResponse.md
  - docs/Models/Requests/AtsListJobsStatus.md
  - docs/Models/Requests/AtsListListsFilter.md
  - docs/Models/Requests/AtsListListsRequest.md
  - docs/Models/Requests/AtsListListsResponse.md
  - docs/Models/Requests/AtsListLocationsFilter.md
  - docs/Models/Requests/AtsListLocationsRequest.md
  - docs/Models/Requests/AtsListLocationsResponse.md
  - docs/Models/Requests/AtsListOffersFilter.md
  - docs/Models/Requests/AtsListOffersRequest.md
  - docs/Models/Requests/AtsListOffersResponse.md
  - docs/Models/Requests/AtsListRejectedReasonsFilter.md
  - docs/Models/Requests/AtsListRejectedReasonsRequest.md
  - docs/Models/Requests/AtsListRejectedReasonsResponse.md
  - docs/Models/Requests/AtsListUsersFilter.md
  - docs/Models/Requests/AtsListUsersRequest.md
  - docs/Models/Requests/AtsListUsersResponse.md
  - docs/Models/Requests/AtsMoveApplicationRequest.md
  - docs/Models/Requests/AtsMoveApplicationResponse.md
  - docs/Models/Requests/AtsOrderAssessmentsRequestRequest.md
  - docs/Models/Requests/AtsOrderAssessmentsRequestResponse.md
  - docs/Models/Requests/AtsOrderBackgroundCheckRequestRequest.md
  - docs/Models/Requests/AtsOrderBackgroundCheckRequestResponse.md
  - docs/Models/Requests/AtsRejectApplicationRequest.md
  - docs/Models/Requests/AtsRejectApplicationResponse.md
  - docs/Models/Requests/AtsUpdateApplicationNoteRequest.md
  - docs/Models/Requests/AtsUpdateApplicationNoteResponse.md
  - docs/Models/Requests/AtsUpdateApplicationRequest.md
  - docs/Models/Requests/AtsUpdateApplicationResponse.md
  - docs/Models/Requests/AtsUpdateAssessmentsResultRequest.md
  - docs/Models/Requests/AtsUpdateAssessmentsResultResponse.md
  - docs/Models/Requests/AtsUpdateBackgroundCheckPackageRequest.md
  - docs/Models/Requests/AtsUpdateBackgroundCheckPackageResponse.md
  - docs/Models/Requests/AtsUpdateBackgroundCheckResultRequest.md
  - docs/Models/Requests/AtsUpdateBackgroundCheckResultResponse.md
  - docs/Models/Requests/AtsUpdateCandidateRequest.md
  - docs/Models/Requests/AtsUpdateCandidateResponse.md
  - docs/Models/Requests/AtsUpdateJobRequest.md
  - docs/Models/Requests/AtsUpdateJobResponse.md
  - docs/Models/Requests/AtsUploadApplicationDocumentRequest.md
  - docs/Models/Requests/AtsUploadApplicationDocumentResponse.md
  - docs/Models/Requests/ChangeType.md
  - docs/Models/Requests/CrmCreateContactRequest.md
  - docs/Models/Requests/CrmCreateContactResponse.md
  - docs/Models/Requests/CrmGetAccountRequest.md
  - docs/Models/Requests/CrmGetAccountResponse.md
  - docs/Models/Requests/CrmGetContactCustomFieldDefinitionFilter.md
  - docs/Models/Requests/CrmGetContactCustomFieldDefinitionRequest.md
  - docs/Models/Requests/CrmGetContactCustomFieldDefinitionResponse.md
  - docs/Models/Requests/CrmGetContactRequest.md
  - docs/Models/Requests/CrmGetContactResponse.md
  - docs/Models/Requests/CrmGetListRequest.md
  - docs/Models/Requests/CrmGetListResponse.md
  - docs/Models/Requests/CrmListAccountsFilter.md
  - docs/Models/Requests/CrmListAccountsRequest.md
  - docs/Models/Requests/CrmListAccountsResponse.md
  - docs/Models/Requests/CrmListContactCustomFieldDefinitionsFilter.md
  - docs/Models/Requests/CrmListContactCustomFieldDefinitionsRequest.md
  - docs/Models/Requests/CrmListContactCustomFieldDefinitionsResponse.md
  - docs/Models/Requests/CrmListContactsFilter.md
  - docs/Models/Requests/CrmListContactsRequest.md
  - docs/Models/Requests/CrmListContactsResponse.md
  - docs/Models/Requests/CrmListListsFilter.md
  - docs/Models/Requests/CrmListListsRequest.md
  - docs/Models/Requests/CrmListListsResponse.md
  - docs/Models/Requests/CrmUpdateContactRequest.md
  - docs/Models/Requests/CrmUpdateContactResponse.md
  - docs/Models/Requests/DocumentsDownloadFileRequest.md
  - docs/Models/Requests/DocumentsDownloadFileResponse.md
  - docs/Models/Requests/DocumentsGetDriveRequest.md
  - docs/Models/Requests/DocumentsGetDriveResponse.md
  - docs/Models/Requests/DocumentsGetFileRequest.md
  - docs/Models/Requests/DocumentsGetFileResponse.md
  - docs/Models/Requests/DocumentsGetFolderRequest.md
  - docs/Models/Requests/DocumentsGetFolderResponse.md
  - docs/Models/Requests/DocumentsListDrivesFilter.md
  - docs/Models/Requests/DocumentsListDrivesRequest.md
  - docs/Models/Requests/DocumentsListDrivesResponse.md
  - docs/Models/Requests/DocumentsListFilesFilter.md
  - docs/Models/Requests/DocumentsListFilesRequest.md
  - docs/Models/Requests/DocumentsListFilesResponse.md
  - docs/Models/Requests/DocumentsListFoldersFilter.md
  - docs/Models/Requests/DocumentsListFoldersRequest.md
  - docs/Models/Requests/DocumentsListFoldersResponse.md
  - docs/Models/Requests/DocumentsUploadFileRequest.md
  - docs/Models/Requests/DocumentsUploadFileResponse.md
  - docs/Models/Requests/HrisBatchUploadEmployeeDocumentRequest.md
  - docs/Models/Requests/HrisBatchUploadEmployeeDocumentResponse.md
  - docs/Models/Requests/HrisCancelEmployeeTimeOffRequestRequest.md
  - docs/Models/Requests/HrisCancelEmployeeTimeOffRequestResponse.md
  - docs/Models/Requests/HrisCreateEmployeeEmploymentRequest.md
  - docs/Models/Requests/HrisCreateEmployeeEmploymentResponse.md
  - docs/Models/Requests/HrisCreateEmployeeRequest.md
  - docs/Models/Requests/HrisCreateEmployeeResponse.md
  - docs/Models/Requests/HrisCreateEmployeeSkillRequest.md
  - docs/Models/Requests/HrisCreateEmployeeSkillResponse.md
  - docs/Models/Requests/HrisCreateEmployeeTimeOffRequestRequest.md
  - docs/Models/Requests/HrisCreateEmployeeTimeOffRequestResponse.md
  - docs/Models/Requests/HrisCreateEmployeeWorkEligibilityRequestRequest.md
  - docs/Models/Requests/HrisCreateEmployeeWorkEligibilityRequestResponse.md
  - docs/Models/Requests/HrisDownloadEmployeeDocumentRequest.md
  - docs/Models/Requests/HrisDownloadEmployeeDocumentResponse.md
  - docs/Models/Requests/HrisGetBenefitRequest.md
  - docs/Models/Requests/HrisGetBenefitResponse.md
  - docs/Models/Requests/HrisGetCompanyGroupRequest.md
  - docs/Models/Requests/HrisGetCompanyGroupResponse.md
  - docs/Models/Requests/HrisGetCompanyRequest.md
  - docs/Models/Requests/HrisGetCompanyResponse.md
  - docs/Models/Requests/HrisGetCostCenterGroupRequest.md
  - docs/Models/Requests/HrisGetCostCenterGroupResponse.md
  - docs/Models/Requests/HrisGetDepartmentGroupRequest.md
  - docs/Models/Requests/HrisGetDepartmentGroupResponse.md
  - docs/Models/Requests/HrisGetDivisionGroupRequest.md
  - docs/Models/Requests/HrisGetDivisionGroupResponse.md
  - docs/Models/Requests/HrisGetEmployeeCustomFieldDefinitionFilter.md
  - docs/Models/Requests/HrisGetEmployeeCustomFieldDefinitionRequest.md
  - docs/Models/Requests/HrisGetEmployeeCustomFieldDefinitionResponse.md
  - docs/Models/Requests/HrisGetEmployeeDocumentCategoryRequest.md
  - docs/Models/Requests/HrisGetEmployeeDocumentCategoryResponse.md
  - docs/Models/Requests/HrisGetEmployeeDocumentRequest.md
  - docs/Models/Requests/HrisGetEmployeeDocumentResponse.md
  - docs/Models/Requests/HrisGetEmployeeEmploymentRequest.md
  - docs/Models/Requests/HrisGetEmployeeEmploymentResponse.md
  - docs/Models/Requests/HrisGetEmployeeRequest.md
  - docs/Models/Requests/HrisGetEmployeeResponse.md
  - docs/Models/Requests/HrisGetEmployeeSkillRequest.md
  - docs/Models/Requests/HrisGetEmployeeSkillResponse.md
  - docs/Models/Requests/HrisGetEmployeeTaskRequest.md
  - docs/Models/Requests/HrisGetEmployeeTaskResponse.md
  - docs/Models/Requests/HrisGetEmployeeTimeOffBalanceRequest.md
  - docs/Models/Requests/HrisGetEmployeeTimeOffBalanceResponse.md
  - docs/Models/Requests/HrisGetEmployeesTimeOffRequestRequest.md
  - docs/Models/Requests/HrisGetEmployeesTimeOffRequestResponse.md
  - docs/Models/Requests/HrisGetEmployeesWorkEligibilityRequest.md
  - docs/Models/Requests/HrisGetEmployeesWorkEligibilityResponse.md
  - docs/Models/Requests/HrisGetEmploymentRequest.md
  - docs/Models/Requests/HrisGetEmploymentResponse.md
  - docs/Models/Requests/HrisGetGroupRequest.md
  - docs/Models/Requests/HrisGetGroupResponse.md
  - docs/Models/Requests/HrisGetJobRequest.md
  - docs/Models/Requests/HrisGetJobResponse.md
  - docs/Models/Requests/HrisGetLocationRequest.md
  - docs/Models/Requests/HrisGetLocationResponse.md
  - docs/Models/Requests/HrisGetPositionRequest.md
  - docs/Models/Requests/HrisGetPositionResponse.md
  - docs/Models/Requests/HrisGetShiftRequest.md
  - docs/Models/Requests/HrisGetShiftResponse.md
  - docs/Models/Requests/HrisGetTaskRequest.md
  - docs/Models/Requests/HrisGetTaskResponse.md
  - docs/Models/Requests/HrisGetTeamGroupRequest.md
  - docs/Models/Requests/HrisGetTeamGroupResponse.md
  - docs/Models/Requests/HrisGetTimeEntriesRequest.md
  - docs/Models/Requests/HrisGetTimeEntriesResponse.md
  - docs/Models/Requests/HrisGetTimeOffPolicyRequest.md
  - docs/Models/Requests/HrisGetTimeOffPolicyResponse.md
  - docs/Models/Requests/HrisGetTimeOffRequestRequest.md
  - docs/Models/Requests/HrisGetTimeOffRequestResponse.md
  - docs/Models/Requests/HrisGetTimeOffTypeRequest.md
  - docs/Models/Requests/HrisGetTimeOffTypeResponse.md
  - docs/Models/Requests/HrisInviteEmployeeRequest.md
  - docs/Models/Requests/HrisInviteEmployeeResponse.md
  - docs/Models/Requests/HrisListBenefitsFilter.md
  - docs/Models/Requests/HrisListBenefitsRequest.md
  - docs/Models/Requests/HrisListBenefitsResponse.md
  - docs/Models/Requests/HrisListCompaniesFilter.md
  - docs/Models/Requests/HrisListCompaniesGroupsFilter.md
  - docs/Models/Requests/HrisListCompaniesGroupsRequest.md
  - docs/Models/Requests/HrisListCompaniesGroupsResponse.md
  - docs/Models/Requests/HrisListCompaniesRequest.md
  - docs/Models/Requests/HrisListCompaniesResponse.md
  - docs/Models/Requests/HrisListCostCenterGroupsFilter.md
  - docs/Models/Requests/HrisListCostCenterGroupsRequest.md
  - docs/Models/Requests/HrisListCostCenterGroupsResponse.md
  - docs/Models/Requests/HrisListDepartmentGroupsFilter.md
  - docs/Models/Requests/HrisListDepartmentGroupsRequest.md
  - docs/Models/Requests/HrisListDepartmentGroupsResponse.md
  - docs/Models/Requests/HrisListDivisionGroupsFilter.md
  - docs/Models/Requests/HrisListDivisionGroupsRequest.md
  - docs/Models/Requests/HrisListDivisionGroupsResponse.md
  - docs/Models/Requests/HrisListEmployeeCategoriesFilter.md
  - docs/Models/Requests/HrisListEmployeeCategoriesRequest.md
  - docs/Models/Requests/HrisListEmployeeCategoriesResponse.md
  - docs/Models/Requests/HrisListEmployeeCustomFieldDefinitionsFilter.md
  - docs/Models/Requests/HrisListEmployeeCustomFieldDefinitionsRequest.md
  - docs/Models/Requests/HrisListEmployeeCustomFieldDefinitionsResponse.md
  - docs/Models/Requests/HrisListEmployeeDocumentsFilter.md
  - docs/Models/Requests/HrisListEmployeeDocumentsRequest.md
  - docs/Models/Requests/HrisListEmployeeDocumentsResponse.md
  - docs/Models/Requests/HrisListEmployeeEmploymentsFilter.md
  - docs/Models/Requests/HrisListEmployeeEmploymentsRequest.md
  - docs/Models/Requests/HrisListEmployeeEmploymentsResponse.md
  - docs/Models/Requests/HrisListEmployeeSkillsFilter.md
  - docs/Models/Requests/HrisListEmployeeSkillsRequest.md
  - docs/Models/Requests/HrisListEmployeeSkillsResponse.md
  - docs/Models/Requests/HrisListEmployeeTasksFilter.md
  - docs/Models/Requests/HrisListEmployeeTasksRequest.md
  - docs/Models/Requests/HrisListEmployeeTasksResponse.md
  - docs/Models/Requests/HrisListEmployeeTimeOffBalancesFilter.md
  - docs/Models/Requests/HrisListEmployeeTimeOffBalancesRequest.md
  - docs/Models/Requests/HrisListEmployeeTimeOffBalancesResponse.md
  - docs/Models/Requests/HrisListEmployeeTimeOffPoliciesFilter.md
  - docs/Models/Requests/HrisListEmployeeTimeOffPoliciesRequest.md
  - docs/Models/Requests/HrisListEmployeeTimeOffPoliciesResponse.md
  - docs/Models/Requests/HrisListEmployeeTimeOffPoliciesType.md
  - docs/Models/Requests/HrisListEmployeeTimeOffRequestsFilter.md
  - docs/Models/Requests/HrisListEmployeeTimeOffRequestsRequest.md
  - docs/Models/Requests/HrisListEmployeeTimeOffRequestsResponse.md
  - docs/Models/Requests/HrisListEmployeeWorkEligibilityFilter.md
  - docs/Models/Requests/HrisListEmployeeWorkEligibilityRequest.md
  - docs/Models/Requests/HrisListEmployeeWorkEligibilityResponse.md
  - docs/Models/Requests/HrisListEmployeesFilter.md
  - docs/Models/Requests/HrisListEmployeesRequest.md
  - docs/Models/Requests/HrisListEmployeesResponse.md
  - docs/Models/Requests/HrisListEmploymentsFilter.md
  - docs/Models/Requests/HrisListEmploymentsRequest.md
  - docs/Models/Requests/HrisListEmploymentsResponse.md
  - docs/Models/Requests/HrisListGroupsFilter.md
  - docs/Models/Requests/HrisListGroupsRequest.md
  - docs/Models/Requests/HrisListGroupsResponse.md
  - docs/Models/Requests/HrisListJobsFilter.md
  - docs/Models/Requests/HrisListJobsRequest.md
  - docs/Models/Requests/HrisListJobsResponse.md
  - docs/Models/Requests/HrisListLocationsFilter.md
  - docs/Models/Requests/HrisListLocationsRequest.md
  - docs/Models/Requests/HrisListLocationsResponse.md
  - docs/Models/Requests/HrisListPositionsFilter.md
  - docs/Models/Requests/HrisListPositionsRequest.md
  - docs/Models/Requests/HrisListPositionsResponse.md
  - docs/Models/Requests/HrisListPositionsStatus.md
  - docs/Models/Requests/HrisListShiftsFilter.md
  - docs/Models/Requests/HrisListShiftsRequest.md
  - docs/Models/Requests/HrisListShiftsResponse.md
  - docs/Models/Requests/HrisListShiftsStatus.md
  - docs/Models/Requests/HrisListTasksFilter.md
  - docs/Models/Requests/HrisListTasksRequest.md
  - docs/Models/Requests/HrisListTasksResponse.md
  - docs/Models/Requests/HrisListTeamGroupsFilter.md
  - docs/Models/Requests/HrisListTeamGroupsRequest.md
  - docs/Models/Requests/HrisListTeamGroupsResponse.md
  - docs/Models/Requests/HrisListTimeEntriesFilter.md
  - docs/Models/Requests/HrisListTimeEntriesRequest.md
  - docs/Models/Requests/HrisListTimeEntriesResponse.md
  - docs/Models/Requests/HrisListTimeOffPoliciesFilter.md
  - docs/Models/Requests/HrisListTimeOffPoliciesRequest.md
  - docs/Models/Requests/HrisListTimeOffPoliciesResponse.md
  - docs/Models/Requests/HrisListTimeOffPoliciesType.md
  - docs/Models/Requests/HrisListTimeOffRequestsFilter.md
  - docs/Models/Requests/HrisListTimeOffRequestsRequest.md
  - docs/Models/Requests/HrisListTimeOffRequestsResponse.md
  - docs/Models/Requests/HrisListTimeOffTypesFilter.md
  - docs/Models/Requests/HrisListTimeOffTypesRequest.md
  - docs/Models/Requests/HrisListTimeOffTypesResponse.md
  - docs/Models/Requests/HrisUpdateEmployeeEmploymentRequest.md
  - docs/Models/Requests/HrisUpdateEmployeeEmploymentResponse.md
  - docs/Models/Requests/HrisUpdateEmployeeRequest.md
  - docs/Models/Requests/HrisUpdateEmployeeResponse.md
  - docs/Models/Requests/HrisUpdateEmployeeTaskRequest.md
  - docs/Models/Requests/HrisUpdateEmployeeTaskResponse.md
  - docs/Models/Requests/HrisUpdateEmployeeTimeOffRequestRequest.md
  - docs/Models/Requests/HrisUpdateEmployeeTimeOffRequestResponse.md
  - docs/Models/Requests/HrisUpdateEmployeeWorkEligibilityRequestRequest.md
  - docs/Models/Requests/HrisUpdateEmployeeWorkEligibilityRequestResponse.md
  - docs/Models/Requests/HrisUploadEmployeeDocumentRequest.md
  - docs/Models/Requests/HrisUploadEmployeeDocumentResponse.md
  - docs/Models/Requests/IamDeleteUserRequest.md
  - docs/Models/Requests/IamDeleteUserResponse.md
  - docs/Models/Requests/IamGetGroupRequest.md
  - docs/Models/Requests/IamGetGroupResponse.md
  - docs/Models/Requests/IamGetPolicyRequest.md
  - docs/Models/Requests/IamGetPolicyResponse.md
  - docs/Models/Requests/IamGetRoleRequest.md
  - docs/Models/Requests/IamGetRoleResponse.md
  - docs/Models/Requests/IamGetUserRequest.md
  - docs/Models/Requests/IamGetUserResponse.md
  - docs/Models/Requests/IamListGroupsFilter.md
  - docs/Models/Requests/IamListGroupsRequest.md
  - docs/Models/Requests/IamListGroupsResponse.md
  - docs/Models/Requests/IamListPoliciesFilter.md
  - docs/Models/Requests/IamListPoliciesRequest.md
  - docs/Models/Requests/IamListPoliciesResponse.md
  - docs/Models/Requests/IamListRolesFilter.md
  - docs/Models/Requests/IamListRolesRequest.md
  - docs/Models/Requests/IamListRolesResponse.md
  - docs/Models/Requests/IamListUsersFilter.md
  - docs/Models/Requests/IamListUsersRequest.md
  - docs/Models/Requests/IamListUsersResponse.md
  - docs/Models/Requests/IamUpdateUserRequest.md
  - docs/Models/Requests/IamUpdateUserResponse.md
  - docs/Models/Requests/JobStatus.md
  - docs/Models/Requests/LmsBatchUpsertContentRequest.md
  - docs/Models/Requests/LmsBatchUpsertContentResponse.md
  - docs/Models/Requests/LmsCreateUserAssignmentRequest.md
  - docs/Models/Requests/LmsCreateUserAssignmentResponse.md
  - docs/Models/Requests/LmsCreateUserCompletionRequest.md
  - docs/Models/Requests/LmsCreateUserCompletionResponse.md
  - docs/Models/Requests/LmsDeleteUserCompletionRequest.md
  - docs/Models/Requests/LmsDeleteUserCompletionResponse.md
  - docs/Models/Requests/LmsGetAssignmentRequest.md
  - docs/Models/Requests/LmsGetAssignmentResponse.md
  - docs/Models/Requests/LmsGetCategoryRequest.md
  - docs/Models/Requests/LmsGetCategoryResponse.md
  - docs/Models/Requests/LmsGetCompletionRequest.md
  - docs/Models/Requests/LmsGetCompletionResponse.md
  - docs/Models/Requests/LmsGetContentRequest.md
  - docs/Models/Requests/LmsGetContentResponse.md
  - docs/Models/Requests/LmsGetCourseRequest.md
  - docs/Models/Requests/LmsGetCourseResponse.md
  - docs/Models/Requests/LmsGetSkillRequest.md
  - docs/Models/Requests/LmsGetSkillResponse.md
  - docs/Models/Requests/LmsGetUserAssignmentRequest.md
  - docs/Models/Requests/LmsGetUserAssignmentResponse.md
  - docs/Models/Requests/LmsGetUserCompletionRequest.md
  - docs/Models/Requests/LmsGetUserCompletionResponse.md
  - docs/Models/Requests/LmsGetUserRequest.md
  - docs/Models/Requests/LmsGetUserResponse.md
  - docs/Models/Requests/LmsListAssignmentsFilter.md
  - docs/Models/Requests/LmsListAssignmentsRequest.md
  - docs/Models/Requests/LmsListAssignmentsResponse.md
  - docs/Models/Requests/LmsListAssignmentsStatus.md
  - docs/Models/Requests/LmsListCategoriesFilter.md
  - docs/Models/Requests/LmsListCategoriesRequest.md
  - docs/Models/Requests/LmsListCategoriesResponse.md
  - docs/Models/Requests/LmsListCompletionsFilter.md
  - docs/Models/Requests/LmsListCompletionsRequest.md
  - docs/Models/Requests/LmsListCompletionsResponse.md
  - docs/Models/Requests/LmsListContentActive.md
  - docs/Models/Requests/LmsListContentFilter.md
  - docs/Models/Requests/LmsListContentRequest.md
  - docs/Models/Requests/LmsListContentResponse.md
  - docs/Models/Requests/LmsListCoursesActive.md
  - docs/Models/Requests/LmsListCoursesFilter.md
  - docs/Models/Requests/LmsListCoursesRequest.md
  - docs/Models/Requests/LmsListCoursesResponse.md
  - docs/Models/Requests/LmsListSkillsFilter.md
  - docs/Models/Requests/LmsListSkillsRequest.md
  - docs/Models/Requests/LmsListSkillsResponse.md
  - docs/Models/Requests/LmsListUserAssignmentsFilter.md
  - docs/Models/Requests/LmsListUserAssignmentsRequest.md
  - docs/Models/Requests/LmsListUserAssignmentsResponse.md
  - docs/Models/Requests/LmsListUserAssignmentsStatus.md
  - docs/Models/Requests/LmsListUserCompletionsFilter.md
  - docs/Models/Requests/LmsListUserCompletionsRequest.md
  - docs/Models/Requests/LmsListUserCompletionsResponse.md
  - docs/Models/Requests/LmsListUsersFilter.md
  - docs/Models/Requests/LmsListUsersRequest.md
  - docs/Models/Requests/LmsListUsersResponse.md
  - docs/Models/Requests/LmsUpdateContentRequest.md
  - docs/Models/Requests/LmsUpdateContentResponse.md
  - docs/Models/Requests/LmsUpsertContentRequest.md
  - docs/Models/Requests/LmsUpsertContentResponse.md
  - docs/Models/Requests/MarketingCreateContentBlockRequest.md
  - docs/Models/Requests/MarketingCreateContentBlockResponse.md
  - docs/Models/Requests/MarketingCreateEmailTemplateRequest.md
  - docs/Models/Requests/MarketingCreateEmailTemplateResponse.md
  - docs/Models/Requests/MarketingCreateInAppTemplateRequest.md
  - docs/Models/Requests/MarketingCreateInAppTemplateResponse.md
  - docs/Models/Requests/MarketingCreateOmniChannelTemplateRequest.md
  - docs/Models/Requests/MarketingCreateOmniChannelTemplateResponse.md
  - docs/Models/Requests/MarketingCreatePushTemplateRequest.md
  - docs/Models/Requests/MarketingCreatePushTemplateResponse.md
  - docs/Models/Requests/MarketingCreateSmsTemplateRequest.md
  - docs/Models/Requests/MarketingCreateSmsTemplateResponse.md
  - docs/Models/Requests/MarketingGetCampaignRequest.md
  - docs/Models/Requests/MarketingGetCampaignResponse.md
  - docs/Models/Requests/MarketingGetContentBlockRequest.md
  - docs/Models/Requests/MarketingGetContentBlockResponse.md
  - docs/Models/Requests/MarketingGetEmailTemplateRequest.md
  - docs/Models/Requests/MarketingGetEmailTemplateResponse.md
  - docs/Models/Requests/MarketingGetInAppTemplateRequest.md
  - docs/Models/Requests/MarketingGetInAppTemplateResponse.md
  - docs/Models/Requests/MarketingGetOmniChannelTemplateRequest.md
  - docs/Models/Requests/MarketingGetOmniChannelTemplateResponse.md
  - docs/Models/Requests/MarketingGetPushTemplateRequest.md
  - docs/Models/Requests/MarketingGetPushTemplateResponse.md
  - docs/Models/Requests/MarketingGetSmsTemplateRequest.md
  - docs/Models/Requests/MarketingGetSmsTemplateResponse.md
  - docs/Models/Requests/MarketingListCampaignsFilter.md
  - docs/Models/Requests/MarketingListCampaignsRequest.md
  - docs/Models/Requests/MarketingListCampaignsResponse.md
  - docs/Models/Requests/MarketingListContentBlocksFilter.md
  - docs/Models/Requests/MarketingListContentBlocksRequest.md
  - docs/Models/Requests/MarketingListContentBlocksResponse.md
  - docs/Models/Requests/MarketingListEmailTemplatesFilter.md
  - docs/Models/Requests/MarketingListEmailTemplatesRequest.md
  - docs/Models/Requests/MarketingListEmailTemplatesResponse.md
  - docs/Models/Requests/MarketingListInAppTemplatesFilter.md
  - docs/Models/Requests/MarketingListInAppTemplatesRequest.md
  - docs/Models/Requests/MarketingListInAppTemplatesResponse.md
  - docs/Models/Requests/MarketingListOmniChannelTemplatesFilter.md
  - docs/Models/Requests/MarketingListOmniChannelTemplatesRequest.md
  - docs/Models/Requests/MarketingListOmniChannelTemplatesResponse.md
  - docs/Models/Requests/MarketingListPushTemplatesFilter.md
  - docs/Models/Requests/MarketingListPushTemplatesRequest.md
  - docs/Models/Requests/MarketingListPushTemplatesResponse.md
  - docs/Models/Requests/MarketingListSmsTemplatesFilter.md
  - docs/Models/Requests/MarketingListSmsTemplatesRequest.md
  - docs/Models/Requests/MarketingListSmsTemplatesResponse.md
  - docs/Models/Requests/MarketingUpdateContentBlockRequest.md
  - docs/Models/Requests/MarketingUpdateContentBlockResponse.md
  - docs/Models/Requests/MarketingUpdateEmailTemplateRequest.md
  - docs/Models/Requests/MarketingUpdateEmailTemplateResponse.md
  - docs/Models/Requests/MarketingUpdateInAppTemplateRequest.md
  - docs/Models/Requests/MarketingUpdateInAppTemplateResponse.md
  - docs/Models/Requests/MarketingUpdateOmniChannelTemplateRequest.md
  - docs/Models/Requests/MarketingUpdateOmniChannelTemplateResponse.md
  - docs/Models/Requests/MarketingUpdatePushTemplateRequest.md
  - docs/Models/Requests/MarketingUpdatePushTemplateResponse.md
  - docs/Models/Requests/MarketingUpdateSmsTemplateRequest.md
  - docs/Models/Requests/MarketingUpdateSmsTemplateResponse.md
  - docs/Models/Requests/MessagingCreateConversationRequest.md
  - docs/Models/Requests/MessagingCreateConversationResponse.md
  - docs/Models/Requests/MessagingDownloadMessagingAttachmentRequest.md
  - docs/Models/Requests/MessagingDownloadMessagingAttachmentResponse.md
  - docs/Models/Requests/MessagingGetAttachmentRequest.md
  - docs/Models/Requests/MessagingGetAttachmentResponse.md
  - docs/Models/Requests/MessagingGetConversationRequest.md
  - docs/Models/Requests/MessagingGetConversationResponse.md
  - docs/Models/Requests/MessagingGetMessageFilter.md
  - docs/Models/Requests/MessagingGetMessageRequest.md
  - docs/Models/Requests/MessagingGetMessageResponse.md
  - docs/Models/Requests/MessagingGetUserRequest.md
  - docs/Models/Requests/MessagingGetUserResponse.md
  - docs/Models/Requests/MessagingListAttachmentsFilter.md
  - docs/Models/Requests/MessagingListAttachmentsRequest.md
  - docs/Models/Requests/MessagingListAttachmentsResponse.md
  - docs/Models/Requests/MessagingListConversationMessagesFilter.md
  - docs/Models/Requests/MessagingListConversationMessagesRequest.md
  - docs/Models/Requests/MessagingListConversationMessagesResponse.md
  - docs/Models/Requests/MessagingListConversationsFilter.md
  - docs/Models/Requests/MessagingListConversationsRequest.md
  - docs/Models/Requests/MessagingListConversationsResponse.md
  - docs/Models/Requests/MessagingListUsersFilter.md
  - docs/Models/Requests/MessagingListUsersRequest.md
  - docs/Models/Requests/MessagingListUsersResponse.md
  - docs/Models/Requests/MessagingSendMessageRequest.md
  - docs/Models/Requests/MessagingSendMessageResponse.md
  - docs/Models/Requests/StackoneAuthenticateConnectSessionResponse.md
  - docs/Models/Requests/StackoneCreateConnectSessionResponse.md
  - docs/Models/Requests/StackoneDeleteAccountRequest.md
  - docs/Models/Requests/StackoneDeleteAccountResponse.md
  - docs/Models/Requests/StackoneGetAccountMetaInfoRequest.md
  - docs/Models/Requests/StackoneGetAccountMetaInfoResponse.md
  - docs/Models/Requests/StackoneGetAccountRequest.md
  - docs/Models/Requests/StackoneGetAccountResponse.md
  - docs/Models/Requests/StackoneGetConnectorMetaRequest.md
  - docs/Models/Requests/StackoneGetConnectorMetaResponse.md
  - docs/Models/Requests/StackoneGetLogInclude.md
  - docs/Models/Requests/StackoneGetLogRequest.md
  - docs/Models/Requests/StackoneGetLogResponse.md
  - docs/Models/Requests/StackoneListConnectorsMetaRequest.md
  - docs/Models/Requests/StackoneListConnectorsMetaResponse.md
  - docs/Models/Requests/StackoneListLinkedAccountsRequest.md
  - docs/Models/Requests/StackoneListLinkedAccountsResponse.md
  - docs/Models/Requests/StackoneListLogsFilter.md
  - docs/Models/Requests/StackoneListLogsFilterOrderBy.md
  - docs/Models/Requests/StackoneListLogsFilterOrderDirection.md
  - docs/Models/Requests/StackoneListLogsInclude.md
  - docs/Models/Requests/StackoneListLogsOrderBy.md
  - docs/Models/Requests/StackoneListLogsOrderDirection.md
  - docs/Models/Requests/StackoneListLogsRequest.md
  - docs/Models/Requests/StackoneListLogsResponse.md
  - docs/Models/Requests/StackoneListPlatformLogsFilter.md
  - docs/Models/Requests/StackoneListPlatformLogsFilterOrderBy.md
  - docs/Models/Requests/StackoneListPlatformLogsFilterOrderDirection.md
  - docs/Models/Requests/StackoneListPlatformLogsOrderBy.md
  - docs/Models/Requests/StackoneListPlatformLogsOrderDirection.md
  - docs/Models/Requests/StackoneListPlatformLogsRequest.md
  - docs/Models/Requests/StackoneListPlatformLogsResponse.md
  - docs/Models/Requests/StackoneListStepLogsFilter.md
  - docs/Models/Requests/StackoneListStepLogsOrderBy.md
  - docs/Models/Requests/StackoneListStepLogsOrderDirection.md
  - docs/Models/Requests/StackoneListStepLogsRequest.md
  - docs/Models/Requests/StackoneListStepLogsResponse.md
  - docs/Models/Requests/StackoneProxyRequestRequest.md
  - docs/Models/Requests/StackoneProxyRequestResponse.md
  - docs/Models/Requests/StackoneUpdateAccountRequest.md
  - docs/Models/Requests/StackoneUpdateAccountResponse.md
  - docs/Models/Requests/TicketingCreateTicketRequest.md
  - docs/Models/Requests/TicketingCreateTicketResponse.md
  - docs/Models/Requests/TicketingDownloadTicketingAttachmentRequest.md
  - docs/Models/Requests/TicketingDownloadTicketingAttachmentResponse.md
  - docs/Models/Requests/TicketingGetAttachmentRequest.md
  - docs/Models/Requests/TicketingGetAttachmentResponse.md
  - docs/Models/Requests/TicketingGetCommentRequest.md
  - docs/Models/Requests/TicketingGetCommentResponse.md
  - docs/Models/Requests/TicketingGetProjectComponentRequest.md
  - docs/Models/Requests/TicketingGetProjectComponentResponse.md
  - docs/Models/Requests/TicketingGetProjectRequest.md
  - docs/Models/Requests/TicketingGetProjectResponse.md
  - docs/Models/Requests/TicketingGetTicketRequest.md
  - docs/Models/Requests/TicketingGetTicketResponse.md
  - docs/Models/Requests/TicketingGetTicketTypeRequest.md
  - docs/Models/Requests/TicketingGetTicketTypeResponse.md
  - docs/Models/Requests/TicketingGetUserRequest.md
  - docs/Models/Requests/TicketingGetUserResponse.md
  - docs/Models/Requests/TicketingListAttachmentsFilter.md
  - docs/Models/Requests/TicketingListAttachmentsRequest.md
  - docs/Models/Requests/TicketingListAttachmentsResponse.md
  - docs/Models/Requests/TicketingListCommentsFilter.md
  - docs/Models/Requests/TicketingListCommentsRequest.md
  - docs/Models/Requests/TicketingListCommentsResponse.md
  - docs/Models/Requests/TicketingListProjectComponentsFilter.md
  - docs/Models/Requests/TicketingListProjectComponentsRequest.md
  - docs/Models/Requests/TicketingListProjectComponentsResponse.md
  - docs/Models/Requests/TicketingListProjectTicketTypesFilter.md
  - docs/Models/Requests/TicketingListProjectTicketTypesRequest.md
  - docs/Models/Requests/TicketingListProjectTicketTypesResponse.md
  - docs/Models/Requests/TicketingListProjectsFilter.md
  - docs/Models/Requests/TicketingListProjectsRequest.md
  - docs/Models/Requests/TicketingListProjectsResponse.md
  - docs/Models/Requests/TicketingListTicketStatusesFilter.md
  - docs/Models/Requests/TicketingListTicketStatusesRequest.md
  - docs/Models/Requests/TicketingListTicketStatusesResponse.md
  - docs/Models/Requests/TicketingListTicketTypesFilter.md
  - docs/Models/Requests/TicketingListTicketTypesRequest.md
  - docs/Models/Requests/TicketingListTicketTypesResponse.md
  - docs/Models/Requests/TicketingListTicketsFilter.md
  - docs/Models/Requests/TicketingListTicketsRequest.md
  - docs/Models/Requests/TicketingListTicketsResponse.md
  - docs/Models/Requests/TicketingListUsersFilter.md
  - docs/Models/Requests/TicketingListUsersRequest.md
  - docs/Models/Requests/TicketingListUsersResponse.md
  - docs/Models/Requests/TicketingUpdateTicketRequest.md
  - docs/Models/Requests/TicketingUpdateTicketResponse.md
  - docs/sdks/accounting/README.md
  - docs/sdks/accounts/README.md
  - docs/sdks/applicationcategories/README.md
  - docs/sdks/applications/README.md
  - docs/sdks/applicationsdocuments/README.md
  - docs/sdks/assessments/README.md
  - docs/sdks/assessmentspackages/README.md
  - docs/sdks/assignments/README.md
  - docs/sdks/ats/README.md
  - docs/sdks/atsapplications/README.md
  - docs/sdks/atsbackgroundchecks/README.md
  - docs/sdks/atscustomfielddefinitions/README.md
  - docs/sdks/atsdepartments/README.md
  - docs/sdks/atsinterviews/README.md
  - docs/sdks/atsjobs/README.md
  - docs/sdks/atslists/README.md
  - docs/sdks/atslocations/README.md
  - docs/sdks/atsusers/README.md
  - docs/sdks/attachments/README.md
  - docs/sdks/backgroundchecks/README.md
  - docs/sdks/backgroundcheckspackages/README.md
  - docs/sdks/benefits/README.md
  - docs/sdks/campaigns/README.md
  - docs/sdks/candidates/README.md
  - docs/sdks/candidatescustomfielddefinitions/README.md
  - docs/sdks/categories/README.md
  - docs/sdks/comments/README.md
  - docs/sdks/companies/README.md
  - docs/sdks/completions/README.md
  - docs/sdks/connectors/README.md
  - docs/sdks/connectsessions/README.md
  - docs/sdks/contacts/README.md
  - docs/sdks/content/README.md
  - docs/sdks/contentblocks/README.md
  - docs/sdks/costcenters/README.md
  - docs/sdks/courses/README.md
  - docs/sdks/crm/README.md
  - docs/sdks/crmlists/README.md
  - docs/sdks/customfielddefinitionscontacts/README.md
  - docs/sdks/divisions/README.md
  - docs/sdks/documents/README.md
  - docs/sdks/documentsdrives/README.md
  - docs/sdks/drives/README.md
  - docs/sdks/employeecategories/README.md
  - docs/sdks/employees/README.md
  - docs/sdks/employeesdocuments/README.md
  - docs/sdks/employeesemployments/README.md
  - docs/sdks/employeesskills/README.md
  - docs/sdks/employeestasks/README.md
  - docs/sdks/employments/README.md
  - docs/sdks/files/README.md
  - docs/sdks/folders/README.md
  - docs/sdks/groupscompanies/README.md
  - docs/sdks/hris/README.md
  - docs/sdks/hrisdepartments/README.md
  - docs/sdks/hrisgroups/README.md
  - docs/sdks/hrisjobs/README.md
  - docs/sdks/hrislocations/README.md
  - docs/sdks/iam/README.md
  - docs/sdks/iamgroups/README.md
  - docs/sdks/iamusers/README.md
  - docs/sdks/inapp/README.md
  - docs/sdks/interviews/README.md
  - docs/sdks/interviewstages/README.md
  - docs/sdks/jobpostings/README.md
  - docs/sdks/lms/README.md
  - docs/sdks/lmsskills/README.md
  - docs/sdks/lmsusers/README.md
  - docs/sdks/marketing/README.md
  - docs/sdks/messaging/README.md
  - docs/sdks/notes/README.md
  - docs/sdks/offers/README.md
  - docs/sdks/policies/README.md
  - docs/sdks/proxy/README.md
  - docs/sdks/rejectedreasons/README.md
  - docs/sdks/requestlogs/README.md
  - docs/sdks/shifts/README.md
  - docs/sdks/sms/README.md
  - docs/sdks/stackonehqclient/README.md
  - docs/sdks/tasks/README.md
  - docs/sdks/templates/README.md
  - docs/sdks/ticketing/README.md
  - docs/sdks/ticketingusers/README.md
  - docs/sdks/tickets/README.md
  - docs/sdks/ticketscomments/README.md
  - docs/sdks/timeoff/README.md
  - docs/sdks/timeofftypes/README.md
  - docs/sdks/usersassignments/README.md
  - docs/sdks/workeligibility/README.md
  - global.json
  - src/StackOneHQ/Client/Accounting.cs
  - src/StackOneHQ/Client/Accounts.cs
  - src/StackOneHQ/Client/ApplicationCategories.cs
  - src/StackOneHQ/Client/Applications.cs
  - src/StackOneHQ/Client/ApplicationsDocuments.cs
  - src/StackOneHQ/Client/Assessments.cs
  - src/StackOneHQ/Client/AssessmentsPackages.cs
  - src/StackOneHQ/Client/Assignments.cs
  - src/StackOneHQ/Client/Ats.cs
  - src/StackOneHQ/Client/AtsApplications.cs
  - src/StackOneHQ/Client/AtsBackgroundChecks.cs
  - src/StackOneHQ/Client/AtsCustomFieldDefinitions.cs
  - src/StackOneHQ/Client/AtsDepartments.cs
  - src/StackOneHQ/Client/AtsDocuments.cs
  - src/StackOneHQ/Client/AtsInterviews.cs
  - src/StackOneHQ/Client/AtsJobs.cs
  - src/StackOneHQ/Client/AtsLists.cs
  - src/StackOneHQ/Client/AtsLocations.cs
  - src/StackOneHQ/Client/AtsUsers.cs
  - src/StackOneHQ/Client/Attachments.cs
  - src/StackOneHQ/Client/BackgroundChecks.cs
  - src/StackOneHQ/Client/BackgroundChecksPackages.cs
  - src/StackOneHQ/Client/Benefits.cs
  - src/StackOneHQ/Client/Campaigns.cs
  - src/StackOneHQ/Client/Candidates.cs
  - src/StackOneHQ/Client/CandidatesCustomFieldDefinitions.cs
  - src/StackOneHQ/Client/Categories.cs
  - src/StackOneHQ/Client/Comments.cs
  - src/StackOneHQ/Client/Companies.cs
  - src/StackOneHQ/Client/Completions.cs
  - src/StackOneHQ/Client/ConnectSessions.cs
  - src/StackOneHQ/Client/Connectors.cs
  - src/StackOneHQ/Client/Contacts.cs
  - src/StackOneHQ/Client/Content.cs
  - src/StackOneHQ/Client/ContentBlocks.cs
  - src/StackOneHQ/Client/CostCenters.cs
  - src/StackOneHQ/Client/Courses.cs
  - src/StackOneHQ/Client/Crm.cs
  - src/StackOneHQ/Client/CrmCustomFieldDefinitions.cs
  - src/StackOneHQ/Client/CrmLists.cs
  - src/StackOneHQ/Client/CustomFieldDefinitionsContacts.cs
  - src/StackOneHQ/Client/Divisions.cs
  - src/StackOneHQ/Client/Documents.cs
  - src/StackOneHQ/Client/DocumentsDrives.cs
  - src/StackOneHQ/Client/Drives.cs
  - src/StackOneHQ/Client/EmployeeCategories.cs
  - src/StackOneHQ/Client/Employees.cs
  - src/StackOneHQ/Client/EmployeesDocuments.cs
  - src/StackOneHQ/Client/EmployeesEmployments.cs
  - src/StackOneHQ/Client/EmployeesSkills.cs
  - src/StackOneHQ/Client/EmployeesTasks.cs
  - src/StackOneHQ/Client/Employments.cs
  - src/StackOneHQ/Client/Files.cs
  - src/StackOneHQ/Client/Folders.cs
  - src/StackOneHQ/Client/GroupsCompanies.cs
  - src/StackOneHQ/Client/Hooks/HookTypes.cs
  - src/StackOneHQ/Client/Hooks/SDKHooks.cs
  - src/StackOneHQ/Client/Hris.cs
  - src/StackOneHQ/Client/HrisDepartments.cs
  - src/StackOneHQ/Client/HrisDocuments.cs
  - src/StackOneHQ/Client/HrisGroups.cs
  - src/StackOneHQ/Client/HrisJobs.cs
  - src/StackOneHQ/Client/HrisLocations.cs
  - src/StackOneHQ/Client/Iam.cs
  - src/StackOneHQ/Client/IamGroups.cs
  - src/StackOneHQ/Client/IamUsers.cs
  - src/StackOneHQ/Client/InApp.cs
  - src/StackOneHQ/Client/InterviewStages.cs
  - src/StackOneHQ/Client/Interviews.cs
  - src/StackOneHQ/Client/JobPostings.cs
  - src/StackOneHQ/Client/Lms.cs
  - src/StackOneHQ/Client/LmsSkills.cs
  - src/StackOneHQ/Client/LmsUsers.cs
  - src/StackOneHQ/Client/Marketing.cs
  - src/StackOneHQ/Client/Messaging.cs
  - src/StackOneHQ/Client/Models/Components/ATSLocation.cs
  - src/StackOneHQ/Client/Models/Components/ATSLocationResult.cs
  - src/StackOneHQ/Client/Models/Components/ATSLocationsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Account.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddress.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressCountry.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressLocationType.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressLocationTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressLocationTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressSourceValueCountry.cs
  - src/StackOneHQ/Client/Models/Components/AccountAddressSourceValueLocationType.cs
  - src/StackOneHQ/Client/Models/Components/AccountResult.cs
  - src/StackOneHQ/Client/Models/Components/AccountType.cs
  - src/StackOneHQ/Client/Models/Components/AccountTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccount.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResult.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultData.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultType.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountResultValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountType.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingAccountsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompaniesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompany.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyBaseCurrency.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResult.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResultBaseCurrency.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResultData.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResultSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyResultValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanySourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingCompanyValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournal.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalBatchCreateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalCreateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalCreateRequestDtoCurrencyCode.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalCreateRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalCreateRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalCreateRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResult.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResultData.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResultSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResultStatus.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalResultValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalStatus.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalValue.cs
  - src/StackOneHQ/Client/Models/Components/AccountingJournalsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRate.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateResult.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateResultActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateResultActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRateResultData.cs
  - src/StackOneHQ/Client/Models/Components/AccountingTaxRatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AccountsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Actor.cs
  - src/StackOneHQ/Client/Models/Components/AdditionalData.cs
  - src/StackOneHQ/Client/Models/Components/AdditionalDataValue.cs
  - src/StackOneHQ/Client/Models/Components/Answer.cs
  - src/StackOneHQ/Client/Models/Components/AnswerSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AnswerSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AnswerType.cs
  - src/StackOneHQ/Client/Models/Components/AnswerValue.cs
  - src/StackOneHQ/Client/Models/Components/Application.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationAttachment.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationAttachmentContentType.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationAttachmentSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationAttachmentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationAttachmentValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationCandidate.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChanges.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesDataModel.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesDataModelApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesDataModelSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesDataModelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesDataModelValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationChangesValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationInterviewStage.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationResult.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationSource.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationStage.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationStageResult.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationStagesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationValue.cs
  - src/StackOneHQ/Client/Models/Components/ApplicationsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Archived.cs
  - src/StackOneHQ/Client/Models/Components/ArchivedEnum.cs
  - src/StackOneHQ/Client/Models/Components/AssessmentPackage.cs
  - src/StackOneHQ/Client/Models/Components/AssessmentPackagePaginated.cs
  - src/StackOneHQ/Client/Models/Components/AssessmentPackageResult.cs
  - src/StackOneHQ/Client/Models/Components/Assignment.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentLearningObjectType.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentLearningObjectTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentLearningObjectTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentResult.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentResult1.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentResultValue.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentSourceValueLearningObjectType.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentSourceValueResult.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentStatus.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/AssignmentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoCandidate.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoSource.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateApplicationRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplication.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoCandidate.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoJob.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoPackage.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoRequester.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckOrderRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateBackgroundCheckPackagesRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplication.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoCandidate.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoJob.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoPackage.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoRequester.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateCandidatesAssessmentsRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDtoConfidential.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDtoJobStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateJobRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateNotesRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateNotesRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateNotesRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateNotesRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateNotesRequestDtoVisibility.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateOfferRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateOfferRequestDtoOfferStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateOfferRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateOfferRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsCreateOfferRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModel.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelCategory.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelFileFormatValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelSourceValueCategory.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelType.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentApiModelTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentResult.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoCategory.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoCategoryValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoConfidential.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoConfidentialSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoConfidentialValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoFileFormatValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoSourceValueConfidential.cs
  - src/StackOneHQ/Client/Models/Components/AtsDocumentsUploadRequestDtoSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/AtsJob.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobConfidential.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobHiringTeam.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobJobStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobResult.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsJobsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/AtsMoveApplicationRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsRejectApplicationRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDtoApplicationStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDtoSource.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateApplicationRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckPackagesRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoCandidate.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoResult.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoScore.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateBackgroundCheckResultRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoCandidate.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoResult.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoScore.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateCandidatesAssessmentsResultsRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDtoConfidential.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDtoJobStatus.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateJobRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateNotesRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateNotesRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateNotesRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateNotesRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/AtsUpdateNotesRequestDtoVisibility.cs
  - src/StackOneHQ/Client/Models/Components/Attachment.cs
  - src/StackOneHQ/Client/Models/Components/AttachmentContentType.cs
  - src/StackOneHQ/Client/Models/Components/AttachmentSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/AttachmentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AttachmentValue.cs
  - src/StackOneHQ/Client/Models/Components/AuthorModel.cs
  - src/StackOneHQ/Client/Models/Components/AvatarCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AvatarFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/AvatarValue.cs
  - src/StackOneHQ/Client/Models/Components/BackgroundCheckPackage.cs
  - src/StackOneHQ/Client/Models/Components/BackgroundCheckPackagePaginated.cs
  - src/StackOneHQ/Client/Models/Components/BackgroundCheckPackageResult.cs
  - src/StackOneHQ/Client/Models/Components/BadRequestResponseData.cs
  - src/StackOneHQ/Client/Models/Components/BadRequestResponseHeaders.cs
  - src/StackOneHQ/Client/Models/Components/BalanceUnit.cs
  - src/StackOneHQ/Client/Models/Components/BalanceUnitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/BalanceUnitValue.cs
  - src/StackOneHQ/Client/Models/Components/BatchResultApiModel.cs
  - src/StackOneHQ/Client/Models/Components/Body.cs
  - src/StackOneHQ/Client/Models/Components/Campaign.cs
  - src/StackOneHQ/Client/Models/Components/CampaignResult.cs
  - src/StackOneHQ/Client/Models/Components/CampaignSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/CampaignStatus.cs
  - src/StackOneHQ/Client/Models/Components/CampaignStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CampaignStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/CampaignsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Candidate.cs
  - src/StackOneHQ/Client/Models/Components/CandidateEmail.cs
  - src/StackOneHQ/Client/Models/Components/CandidateResult.cs
  - src/StackOneHQ/Client/Models/Components/CandidatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/CategoriesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Category.cs
  - src/StackOneHQ/Client/Models/Components/CategoryActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/CategoryActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/CategoryHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CategoryHierarchySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CategoryHierarchyValue.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLevel.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLevelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CategoryLevelValue.cs
  - src/StackOneHQ/Client/Models/Components/CategoryResult.cs
  - src/StackOneHQ/Client/Models/Components/CategorySourceValueHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CategorySourceValueLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CategorySourceValueLevel.cs
  - src/StackOneHQ/Client/Models/Components/ChangeType.cs
  - src/StackOneHQ/Client/Models/Components/ChannelsEnum.cs
  - src/StackOneHQ/Client/Models/Components/ChannelsEnumSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ChannelsEnumSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ChannelsEnumValue.cs
  - src/StackOneHQ/Client/Models/Components/CompaniesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Company.cs
  - src/StackOneHQ/Client/Models/Components/CompanyResult.cs
  - src/StackOneHQ/Client/Models/Components/Completion.cs
  - src/StackOneHQ/Client/Models/Components/CompletionLearningObjectType.cs
  - src/StackOneHQ/Client/Models/Components/CompletionLearningObjectTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CompletionLearningObjectTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/CompletionResult.cs
  - src/StackOneHQ/Client/Models/Components/CompletionResult1.cs
  - src/StackOneHQ/Client/Models/Components/CompletionResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CompletionResultValue.cs
  - src/StackOneHQ/Client/Models/Components/CompletionSourceValueLearningObjectType.cs
  - src/StackOneHQ/Client/Models/Components/CompletionSourceValueResult.cs
  - src/StackOneHQ/Client/Models/Components/CompletionsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ConditionType.cs
  - src/StackOneHQ/Client/Models/Components/ConditionTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ConditionTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSession.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionAuthenticate.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionCategory.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionCreate.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionCreateCategory.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionCreateMetadata.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionCreateType.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionMetadata.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionTokenAuthLink.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionTokenAuthLinkCategory.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionTokenAuthLinkMetadata.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionTokenAuthLinkType.cs
  - src/StackOneHQ/Client/Models/Components/ConnectSessionType.cs
  - src/StackOneHQ/Client/Models/Components/ConnectorsMeta.cs
  - src/StackOneHQ/Client/Models/Components/ConnectorsMetaCategory.cs
  - src/StackOneHQ/Client/Models/Components/Contact.cs
  - src/StackOneHQ/Client/Models/Components/ContactResult.cs
  - src/StackOneHQ/Client/Models/Components/ContactsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Content.cs
  - src/StackOneHQ/Client/Models/Components/ContentActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/ContentActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlock.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockResult.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockStatus.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockType.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlockTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/ContentBlocksPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ContentContentType.cs
  - src/StackOneHQ/Client/Models/Components/ContentPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ContentResult.cs
  - src/StackOneHQ/Client/Models/Components/ContentSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ContentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ContentValue.cs
  - src/StackOneHQ/Client/Models/Components/ContractType.cs
  - src/StackOneHQ/Client/Models/Components/ContractTypeContractType.cs
  - src/StackOneHQ/Client/Models/Components/ContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/CostCenter.cs
  - src/StackOneHQ/Client/Models/Components/CostCenterSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CostCenterType.cs
  - src/StackOneHQ/Client/Models/Components/CostCenterValue.cs
  - src/StackOneHQ/Client/Models/Components/CostCenters.cs
  - src/StackOneHQ/Client/Models/Components/CountryCodeEnum.cs
  - src/StackOneHQ/Client/Models/Components/CountryCodeEnumSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/CountryCodeEnumSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CountryCodeEnumValue.cs
  - src/StackOneHQ/Client/Models/Components/Course.cs
  - src/StackOneHQ/Client/Models/Components/CourseActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/CourseActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/CoursePaginated.cs
  - src/StackOneHQ/Client/Models/Components/CourseResult.cs
  - src/StackOneHQ/Client/Models/Components/CreateAnswer.cs
  - src/StackOneHQ/Client/Models/Components/CreateAnswerSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateAnswerSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateAnswerType.cs
  - src/StackOneHQ/Client/Models/Components/CreateAnswerValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateAssessmentOrderResult.cs
  - src/StackOneHQ/Client/Models/Components/CreateBackgroundCheckOrderResult.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelHierarchySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelHierarchyValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLevel.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLevelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelLevelValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelSourceValueHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelSourceValueLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CreateCategoriesApiModelSourceValueLevel.cs
  - src/StackOneHQ/Client/Models/Components/CreateCostCenterApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelGrade.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateEmploymentApiModelWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateHRISBenefit.cs
  - src/StackOneHQ/Client/Models/Components/CreateHRISBenefitBenefitType.cs
  - src/StackOneHQ/Client/Models/Components/CreateHRISBenefitSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateHRISBenefitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateHRISBenefitValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateJournalLine.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessage.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageEmailMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageMessageType.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessagePushMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageSmsMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateMessageValue.cs
  - src/StackOneHQ/Client/Models/Components/CreatePackage.cs
  - src/StackOneHQ/Client/Models/Components/CreateQuestionnaire.cs
  - src/StackOneHQ/Client/Models/Components/CreateResult.cs
  - src/StackOneHQ/Client/Models/Components/CreateResultDataApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelHierarchySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelHierarchyValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLevel.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLevelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelLevelValue.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelSourceValueHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelSourceValueLanguage.cs
  - src/StackOneHQ/Client/Models/Components/CreateSkillsApiModelSourceValueLevel.cs
  - src/StackOneHQ/Client/Models/Components/CrmCreateContactRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinition.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionResultApiModel.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionType.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionValue.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldDefinitionsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldOption.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldOptionValue.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldOptionValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CustomFields.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldsValue.cs
  - src/StackOneHQ/Client/Models/Components/CustomFieldsValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/CustomMappingError.cs
  - src/StackOneHQ/Client/Models/Components/DeleteResult.cs
  - src/StackOneHQ/Client/Models/Components/Department.cs
  - src/StackOneHQ/Client/Models/Components/DepartmentResult.cs
  - src/StackOneHQ/Client/Models/Components/DepartmentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/DepartmentType.cs
  - src/StackOneHQ/Client/Models/Components/DepartmentValue.cs
  - src/StackOneHQ/Client/Models/Components/DepartmentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Description.cs
  - src/StackOneHQ/Client/Models/Components/Division.cs
  - src/StackOneHQ/Client/Models/Components/DivisionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/DivisionType.cs
  - src/StackOneHQ/Client/Models/Components/DivisionValue.cs
  - src/StackOneHQ/Client/Models/Components/DownloadApiModel.cs
  - src/StackOneHQ/Client/Models/Components/DownloadHeadersApiModel.cs
  - src/StackOneHQ/Client/Models/Components/Draft.cs
  - src/StackOneHQ/Client/Models/Components/DraftEnum.cs
  - src/StackOneHQ/Client/Models/Components/DriveResult.cs
  - src/StackOneHQ/Client/Models/Components/Drives.cs
  - src/StackOneHQ/Client/Models/Components/DrivesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessages.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessagesMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessagesMessageType.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessagesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessagesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmailMessagesValue.cs
  - src/StackOneHQ/Client/Models/Components/EmailTemplate.cs
  - src/StackOneHQ/Client/Models/Components/EmailTemplateResult.cs
  - src/StackOneHQ/Client/Models/Components/EmailTemplatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Employee.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeAvatar.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeCompany.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEthnicitySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeEthnicityValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeGender.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeGenderSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeGenderValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeHomeLocation.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeHomeLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeHomeLocationCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeMaritalStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeMaritalStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeNationalIdentityNumber.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeNationalIdentityNumberCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeNationalIdentityNumberCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeePreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/EmployeePreferredLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeePreferredLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeResult.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueGender.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValuePreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeSourceValueWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeType.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeWorkLocation.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeWorkLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmployeeWorkLocationCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/EmployeesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Employment.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentDepartment.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentGrade.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentJob.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentManagerApiModel.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentManagerApiModelSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentManagerApiModelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentManagerApiModelValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentResult.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentTypeType.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/EmploymentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillResult.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkills.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMaximumProficiencyValue.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoMinimumProficiencyValue.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoSourceValueMaximumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsCreateRequestDtoSourceValueMinimumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsLanguage.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMaximumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMaximumProficiencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMaximumProficiencyValue.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMinimumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMinimumProficiencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsMinimumProficiencyValue.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsSourceValueLanguage.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsSourceValueMaximumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/EntitySkillsSourceValueMinimumProficiency.cs
  - src/StackOneHQ/Client/Models/Components/Field.cs
  - src/StackOneHQ/Client/Models/Components/FieldRequiredEnum.cs
  - src/StackOneHQ/Client/Models/Components/FieldRequiredUnion.cs
  - src/StackOneHQ/Client/Models/Components/FieldType.cs
  - src/StackOneHQ/Client/Models/Components/File.cs
  - src/StackOneHQ/Client/Models/Components/FileCategory.cs
  - src/StackOneHQ/Client/Models/Components/FileCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/FileFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/FileFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/FileResult.cs
  - src/StackOneHQ/Client/Models/Components/FileSourceValueCategory.cs
  - src/StackOneHQ/Client/Models/Components/FileSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/FileValue.cs
  - src/StackOneHQ/Client/Models/Components/Files.cs
  - src/StackOneHQ/Client/Models/Components/FilesFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/FilesHasChildrenEnum.cs
  - src/StackOneHQ/Client/Models/Components/FilesHasChildrenUnion.cs
  - src/StackOneHQ/Client/Models/Components/FilesHasContentEnum.cs
  - src/StackOneHQ/Client/Models/Components/FilesHasContentUnion.cs
  - src/StackOneHQ/Client/Models/Components/FilesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/FilesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/FilesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/FilesValue.cs
  - src/StackOneHQ/Client/Models/Components/FolderResult.cs
  - src/StackOneHQ/Client/Models/Components/Folders.cs
  - src/StackOneHQ/Client/Models/Components/FoldersHasChildrenEnum.cs
  - src/StackOneHQ/Client/Models/Components/FoldersHasChildrenUnion.cs
  - src/StackOneHQ/Client/Models/Components/FoldersHasContentEnum.cs
  - src/StackOneHQ/Client/Models/Components/FoldersHasContentUnion.cs
  - src/StackOneHQ/Client/Models/Components/FoldersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefit.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitBenefitType.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISBenefitsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenter.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterType.cs
  - src/StackOneHQ/Client/Models/Components/HRISCostCenterValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartment.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentType.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISDepartmentsResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivision.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionType.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISDivisionsResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroup.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupType.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISGroupsResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocation.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationLocationType.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationLocationTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationLocationTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationResult.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationSourceValueCountry.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationSourceValueLocationType.cs
  - src/StackOneHQ/Client/Models/Components/HRISLocationsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeam.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamType.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamValue.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HRISTeamsResult.cs
  - src/StackOneHQ/Client/Models/Components/HTTPMetadata.cs
  - src/StackOneHQ/Client/Models/Components/HomeLocationLocationType.cs
  - src/StackOneHQ/Client/Models/Components/HomeLocationLocationTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HomeLocationLocationTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisBatchDocumentUploadRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoAvatar.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmployment.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEthnicitySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoEthnicityValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoGender.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoGenderSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoGenderValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoGrade.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocation.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationStateSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoHomeLocationValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoMaritalStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumber.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoNationalIdentityNumberCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoPreferredLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueGender.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueHomeLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValuePreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocation.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationStateSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkLocationValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmployeeRequestDtoWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoGrade.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateEmploymentRequestDtoWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDayEnum.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoEndHalfDayUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoReason.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDayEnum.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoStartHalfDayUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateTimeOffRequestDtoTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoCategory.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoDocument.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoDocumentValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBy.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedBySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoIssuedByValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueCategory.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueIssuedBy.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisCreateWorkEligibilityRequestDtoTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModel.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelCategory.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelCategoryValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelFileFormatValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelSourceValueCategory.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelType.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentApiModelTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentResult.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoCategory.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoCategoryValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoConfidential.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoConfidentialSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoConfidentialValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoFileFormatValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoSourceValueConfidential.cs
  - src/StackOneHQ/Client/Models/Components/HrisDocumentsUploadRequestDtoSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/HrisInviteEmployeeRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisJob.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobResult.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisJobsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HrisShift.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftApprovalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftApprovalStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftApprovalStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResult.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultApprovalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultApprovalStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultApprovalStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultData.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultSourceValueApprovalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftResultStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftSourceValueApprovalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisShiftsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoAvatar.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmployment.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEthnicitySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoEthnicityValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoGender.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoGenderSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoGenderValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoGrade.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocation.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationStateSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoHomeLocationValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoMaritalStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumber.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoNationalIdentityNumberCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoPreferredLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueEthnicity.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueGender.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueHomeLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueMaritalStatus.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueNationalIdentityNumberCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValuePreferredLanguage.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocation.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountry.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationState.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationStateSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkLocationValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmployeeRequestDtoWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoGrade.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoSourceValueWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoWorkTime.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/HrisUpdateEmploymentRequestDtoWorkTimeValue.cs
  - src/StackOneHQ/Client/Models/Components/IamGroup.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupResult.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupType.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupValue.cs
  - src/StackOneHQ/Client/Models/Components/IamGroupsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/IamMfaTypeEnum.cs
  - src/StackOneHQ/Client/Models/Components/IamMfaTypeEnumSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamMfaTypeEnumSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamMfaTypeEnumValue.cs
  - src/StackOneHQ/Client/Models/Components/IamPermission.cs
  - src/StackOneHQ/Client/Models/Components/IamPermissionSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamPermissionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamPermissionType.cs
  - src/StackOneHQ/Client/Models/Components/IamPermissionValue.cs
  - src/StackOneHQ/Client/Models/Components/IamPoliciesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/IamPolicy.cs
  - src/StackOneHQ/Client/Models/Components/IamPolicyResult.cs
  - src/StackOneHQ/Client/Models/Components/IamResource.cs
  - src/StackOneHQ/Client/Models/Components/IamResourceSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamResourceSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamResourceType.cs
  - src/StackOneHQ/Client/Models/Components/IamResourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamRole.cs
  - src/StackOneHQ/Client/Models/Components/IamRoleResult.cs
  - src/StackOneHQ/Client/Models/Components/IamRoleSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamRoleSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamRoleType.cs
  - src/StackOneHQ/Client/Models/Components/IamRoleValue.cs
  - src/StackOneHQ/Client/Models/Components/IamRolesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoIsBotUserEnum.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoIsBotUserUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoStatus.cs
  - src/StackOneHQ/Client/Models/Components/IamUpdateUserRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/IamUser.cs
  - src/StackOneHQ/Client/Models/Components/IamUserAvatar.cs
  - src/StackOneHQ/Client/Models/Components/IamUserCategory.cs
  - src/StackOneHQ/Client/Models/Components/IamUserFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/IamUserIsBotUserEnum.cs
  - src/StackOneHQ/Client/Models/Components/IamUserIsBotUserUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamUserResult.cs
  - src/StackOneHQ/Client/Models/Components/IamUserSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/IamUserStatus.cs
  - src/StackOneHQ/Client/Models/Components/IamUserStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/IamUserStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/IamUsersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Images.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessages.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessagesMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessagesMessageType.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessagesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessagesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/InAppMessagesValue.cs
  - src/StackOneHQ/Client/Models/Components/InAppTemplate.cs
  - src/StackOneHQ/Client/Models/Components/InAppTemplateResult.cs
  - src/StackOneHQ/Client/Models/Components/InAppTemplatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Interview.cs
  - src/StackOneHQ/Client/Models/Components/InterviewInterviewStage.cs
  - src/StackOneHQ/Client/Models/Components/InterviewInterviewStatus.cs
  - src/StackOneHQ/Client/Models/Components/InterviewPart.cs
  - src/StackOneHQ/Client/Models/Components/InterviewPartSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/InterviewPartSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/InterviewPartType.cs
  - src/StackOneHQ/Client/Models/Components/InterviewPartValue.cs
  - src/StackOneHQ/Client/Models/Components/InterviewSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/InterviewSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/InterviewStage.cs
  - src/StackOneHQ/Client/Models/Components/InterviewStageResult.cs
  - src/StackOneHQ/Client/Models/Components/InterviewStagesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/InterviewValue.cs
  - src/StackOneHQ/Client/Models/Components/Interviewer.cs
  - src/StackOneHQ/Client/Models/Components/InterviewsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/InterviewsResult.cs
  - src/StackOneHQ/Client/Models/Components/InviteEmployeeResult.cs
  - src/StackOneHQ/Client/Models/Components/IsPaid.cs
  - src/StackOneHQ/Client/Models/Components/IsPaidEnum.cs
  - src/StackOneHQ/Client/Models/Components/IsRoot.cs
  - src/StackOneHQ/Client/Models/Components/IsRootEnum.cs
  - src/StackOneHQ/Client/Models/Components/JobDescription.cs
  - src/StackOneHQ/Client/Models/Components/JobPosting.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensation.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayFrequencySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayFrequencyValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayPeriodSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationPayPeriodValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationSourceValuePayFrequency.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationSourceValuePayPeriod.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingCompensationTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContent.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContentSection.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContentSectionSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContentSectionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContentSectionType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingContentSectionValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentContractTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentContractTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingEmploymentTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingInternal.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingLocation.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingQuestionnaire.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingQuestionnaireInternalEnum.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingQuestionnaireInternalUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingResult.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingSourceValueEmploymentContractType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingSourceValueEmploymentType.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingStatus.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/JobPostingsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/JournalLine.cs
  - src/StackOneHQ/Client/Models/Components/JournalLineCurrencyCode.cs
  - src/StackOneHQ/Client/Models/Components/JournalLineCurrencyCodeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/JournalLineCurrencyCodeValue.cs
  - src/StackOneHQ/Client/Models/Components/JournalLineSourceValueCurrencyCode.cs
  - src/StackOneHQ/Client/Models/Components/Label.cs
  - src/StackOneHQ/Client/Models/Components/LaborType.cs
  - src/StackOneHQ/Client/Models/Components/LanguageEnum.cs
  - src/StackOneHQ/Client/Models/Components/LanguageEnumSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LanguageEnumSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LanguageEnumValue.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccount.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccountCredentials.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccountMeta.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccountMetaCategory.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccountSetupInformation.cs
  - src/StackOneHQ/Client/Models/Components/LinkedAccountType.cs
  - src/StackOneHQ/Client/Models/Components/List.cs
  - src/StackOneHQ/Client/Models/Components/ListItem.cs
  - src/StackOneHQ/Client/Models/Components/ListResult.cs
  - src/StackOneHQ/Client/Models/Components/ListSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ListSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ListType.cs
  - src/StackOneHQ/Client/Models/Components/ListValue.cs
  - src/StackOneHQ/Client/Models/Components/ListsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/LmsBatchUpsertContentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateAssignmentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateAssignmentRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateAssignmentRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateAssignmentRequestDtoStatus.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateAssignmentRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateCompletionRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateCompletionRequestDtoResult.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateCompletionRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateCompletionRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateCompletionRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoContentType.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsCreateContentRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoContentType.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LmsUpsertContentRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/LmsUser.cs
  - src/StackOneHQ/Client/Models/Components/LmsUserActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/LmsUserActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/LocalizationModel.cs
  - src/StackOneHQ/Client/Models/Components/LocalizationModelLanguage.cs
  - src/StackOneHQ/Client/Models/Components/LocalizationModelSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/LocalizationModelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/LocalizationModelValue.cs
  - src/StackOneHQ/Client/Models/Components/Location.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateContentBlocksRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateContentBlocksRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateContentBlocksRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateContentBlocksRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateEmailTemplateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateInAppTemplateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreatePushTemplateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateSmsTemplateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MarketingCreateTemplateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/Message.cs
  - src/StackOneHQ/Client/Models/Components/MessageEmailMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/MessageMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/MessageMessageType.cs
  - src/StackOneHQ/Client/Models/Components/MessagePushMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/MessageSmsMessageContents.cs
  - src/StackOneHQ/Client/Models/Components/MessageSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/MessageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessageValue.cs
  - src/StackOneHQ/Client/Models/Components/MessagingAttachment.cs
  - src/StackOneHQ/Client/Models/Components/MessagingAttachmentResult.cs
  - src/StackOneHQ/Client/Models/Components/MessagingAttachmentResultData.cs
  - src/StackOneHQ/Client/Models/Components/MessagingAttachmentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversation.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationPrivateEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationPrivateUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationResult.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationResultData.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationResultPrivateEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationResultPrivateUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingConversationsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/MessagingCreateConversationRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MessagingCreateConversationRequestDtoPrivateEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingCreateConversationRequestDtoPrivateUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessage.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageAuthor.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResult.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResultActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResultActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResultAuthor.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResultContent.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageResultData.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessageSendRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/MessagingMessagesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUser.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserBotEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserBotUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResult.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResultActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResultActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResultBotEnum.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResultBotUnion.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUserResultData.cs
  - src/StackOneHQ/Client/Models/Components/MessagingUsersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Method.cs
  - src/StackOneHQ/Client/Models/Components/MoveApplicationResult.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModel.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelCountry.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelCountrySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelCountryValue.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelSourceValueCountry.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelType.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/NationalIdentityNumberApiModelTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/Note.cs
  - src/StackOneHQ/Client/Models/Components/NoteContentApiModel.cs
  - src/StackOneHQ/Client/Models/Components/NoteResult.cs
  - src/StackOneHQ/Client/Models/Components/NoteSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/NoteSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/NoteValue.cs
  - src/StackOneHQ/Client/Models/Components/NoteVisibility.cs
  - src/StackOneHQ/Client/Models/Components/NotesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Offer.cs
  - src/StackOneHQ/Client/Models/Components/OfferHistory.cs
  - src/StackOneHQ/Client/Models/Components/OfferOfferStatus.cs
  - src/StackOneHQ/Client/Models/Components/OfferSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/OfferSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/OfferValue.cs
  - src/StackOneHQ/Client/Models/Components/OffersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/OffersResult.cs
  - src/StackOneHQ/Client/Models/Components/OverallRecommendation.cs
  - src/StackOneHQ/Client/Models/Components/Package.cs
  - src/StackOneHQ/Client/Models/Components/ParentQuestion.cs
  - src/StackOneHQ/Client/Models/Components/PatchAccountExternalDto.cs
  - src/StackOneHQ/Client/Models/Components/PatchAccountExternalDtoCredentials.cs
  - src/StackOneHQ/Client/Models/Components/PatchAccountExternalDtoMetadata.cs
  - src/StackOneHQ/Client/Models/Components/PatchAccountExternalDtoSetupInformation.cs
  - src/StackOneHQ/Client/Models/Components/PatchAccountExternalDtoType.cs
  - src/StackOneHQ/Client/Models/Components/PhoneNumber.cs
  - src/StackOneHQ/Client/Models/Components/PhoneNumberType.cs
  - src/StackOneHQ/Client/Models/Components/PlatformLog.cs
  - src/StackOneHQ/Client/Models/Components/PlatformLogsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Position.cs
  - src/StackOneHQ/Client/Models/Components/PositionResult.cs
  - src/StackOneHQ/Client/Models/Components/PositionSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/PositionSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/PositionStatus.cs
  - src/StackOneHQ/Client/Models/Components/PositionValue.cs
  - src/StackOneHQ/Client/Models/Components/PositionsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ProviderError.cs
  - src/StackOneHQ/Client/Models/Components/ProviderErrorApiModel.cs
  - src/StackOneHQ/Client/Models/Components/ProviderErrorApiModelHeaders.cs
  - src/StackOneHQ/Client/Models/Components/ProviderErrorApiModelRaw.cs
  - src/StackOneHQ/Client/Models/Components/ProviderErrorHeaders.cs
  - src/StackOneHQ/Client/Models/Components/ProviderErrorRaw.cs
  - src/StackOneHQ/Client/Models/Components/ProxyRequestBody.cs
  - src/StackOneHQ/Client/Models/Components/PushMessages.cs
  - src/StackOneHQ/Client/Models/Components/PushMessagesMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/PushMessagesMessageType.cs
  - src/StackOneHQ/Client/Models/Components/PushMessagesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/PushMessagesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/PushMessagesValue.cs
  - src/StackOneHQ/Client/Models/Components/PushTemplate.cs
  - src/StackOneHQ/Client/Models/Components/PushTemplateResult.cs
  - src/StackOneHQ/Client/Models/Components/PushTemplatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Question.cs
  - src/StackOneHQ/Client/Models/Components/QuestionMultipleChoiceAnswers.cs
  - src/StackOneHQ/Client/Models/Components/QuestionRequiredEnum.cs
  - src/StackOneHQ/Client/Models/Components/QuestionRequiredUnion.cs
  - src/StackOneHQ/Client/Models/Components/QuestionSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/QuestionType.cs
  - src/StackOneHQ/Client/Models/Components/QuestionTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/QuestionTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/Questionnaire.cs
  - src/StackOneHQ/Client/Models/Components/RawResponse.cs
  - src/StackOneHQ/Client/Models/Components/Reason.cs
  - src/StackOneHQ/Client/Models/Components/Reference.cs
  - src/StackOneHQ/Client/Models/Components/ReferenceActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/ReferenceActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/ReferencePaginated.cs
  - src/StackOneHQ/Client/Models/Components/ReferenceResult.cs
  - src/StackOneHQ/Client/Models/Components/RejectApplicationResult.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReason.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonResult.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonType.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonValue.cs
  - src/StackOneHQ/Client/Models/Components/RejectedReasonsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Resources.cs
  - src/StackOneHQ/Client/Models/Components/Response.cs
  - src/StackOneHQ/Client/Models/Components/ResultLink.cs
  - src/StackOneHQ/Client/Models/Components/Role.cs
  - src/StackOneHQ/Client/Models/Components/RoleType.cs
  - src/StackOneHQ/Client/Models/Components/ScheduleType.cs
  - src/StackOneHQ/Client/Models/Components/ScheduleTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ScheduleTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterview.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewInterviewStage.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewInterviewStatus.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewValue.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ScheduledInterviewsResult.cs
  - src/StackOneHQ/Client/Models/Components/Scorecard.cs
  - src/StackOneHQ/Client/Models/Components/ScorecardSection.cs
  - src/StackOneHQ/Client/Models/Components/ScorecardsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/ScorecardsResult.cs
  - src/StackOneHQ/Client/Models/Components/Secrets.cs
  - src/StackOneHQ/Client/Models/Components/Security.cs
  - src/StackOneHQ/Client/Models/Components/ShiftBreak.cs
  - src/StackOneHQ/Client/Models/Components/SkillResult.cs
  - src/StackOneHQ/Client/Models/Components/Skills.cs
  - src/StackOneHQ/Client/Models/Components/SkillsActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/SkillsActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/SkillsHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/SkillsHierarchySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/SkillsHierarchyValue.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLanguage.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLanguageSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLanguageValue.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLevel.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLevelSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/SkillsLevelValue.cs
  - src/StackOneHQ/Client/Models/Components/SkillsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/SkillsSourceValueHierarchy.cs
  - src/StackOneHQ/Client/Models/Components/SkillsSourceValueLanguage.cs
  - src/StackOneHQ/Client/Models/Components/SkillsSourceValueLevel.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessages.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessagesMessageContent.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessagesMessageType.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessagesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessagesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/SmsMessagesValue.cs
  - src/StackOneHQ/Client/Models/Components/SmsTemplate.cs
  - src/StackOneHQ/Client/Models/Components/SmsTemplateResult.cs
  - src/StackOneHQ/Client/Models/Components/SmsTemplatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/SocialLink.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueAccountType.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueAvatarCategory.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueAvatarFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueBalanceUnit.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueConditionType.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueContractType.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueCostCenter.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueDepartment.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueDivision.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueHomeLocationLocationType.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueScheduleType.cs
  - src/StackOneHQ/Client/Models/Components/SourceValueWorkLocationLocationType.cs
  - src/StackOneHQ/Client/Models/Components/StatusEnum.cs
  - src/StackOneHQ/Client/Models/Components/StatusReason.cs
  - src/StackOneHQ/Client/Models/Components/StepLog.cs
  - src/StackOneHQ/Client/Models/Components/StepLogPartial.cs
  - src/StackOneHQ/Client/Models/Components/StepLogRequest.cs
  - src/StackOneHQ/Client/Models/Components/StepLogResponse.cs
  - src/StackOneHQ/Client/Models/Components/StepLogUrl.cs
  - src/StackOneHQ/Client/Models/Components/StepLogsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Task.cs
  - src/StackOneHQ/Client/Models/Components/TaskCommentApiModel.cs
  - src/StackOneHQ/Client/Models/Components/TaskResult.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultData.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultStatus.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultType.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TaskResultTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/TaskSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TaskSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/TaskStatus.cs
  - src/StackOneHQ/Client/Models/Components/TaskStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TaskStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TaskType.cs
  - src/StackOneHQ/Client/Models/Components/TaskTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TaskTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/TasksPaginated.cs
  - src/StackOneHQ/Client/Models/Components/Template.cs
  - src/StackOneHQ/Client/Models/Components/TemplateResult.cs
  - src/StackOneHQ/Client/Models/Components/TemplatesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachment.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResultFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResultSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentResultValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingAttachmentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingComment.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentInternalEnum.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentInternalUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentResultInternalEnum.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentResultInternalUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingCommentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingComponent.cs
  - src/StackOneHQ/Client/Models/Components/TicketingComponentResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingComponentResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingComponentsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingContent.cs
  - src/StackOneHQ/Client/Models/Components/TicketingProject.cs
  - src/StackOneHQ/Client/Models/Components/TicketingProjectResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingProjectResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingProjectsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicket.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketOrganization.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketPriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketPrioritySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketPriorityValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketSourceValuePriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketStatusType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingReadTicketType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketCreateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketCreateRequestDtoPriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketCreateRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketCreateRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketCreateRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultOrganization.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultPriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultPrioritySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultPriorityValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultSourceValuePriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultStatusType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketResultType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatusSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatusType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketStatusesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketTypePaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketTypeResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketTypeResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoPriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoPrioritySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoPriorityValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoSourceValuePriority.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoStatus.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketUpdateRequestDtoType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingTicketsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUser.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResult.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultData.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserResultValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserType.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUserValue.cs
  - src/StackOneHQ/Client/Models/Components/TicketingUsersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntries.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesActiveEnum.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesActiveUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesResult.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesStatus.cs
  - src/StackOneHQ/Client/Models/Components/TimeEntriesValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOff.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalanceResult.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalances.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesDurationUnitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesDurationUnitValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesPolicy.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesSourceValueDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffBalancesTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffDurationUnitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffDurationUnitValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffEndHalfDayEnum.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffEndHalfDayUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicies.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesDurationUnitSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesDurationUnitValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesPaginated.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesSourceValueDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPoliciesTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicy.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicyResult.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicyType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicyTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffPolicyTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffReason.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffResult.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffSourceValueDurationUnit.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffSourceValuePolicyType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffSourceValueStatus.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffSourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffStartHalfDayEnum.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffStartHalfDayUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffStatus.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffStatusSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffStatusValue.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffType.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/TimeOffTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogResult.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogs.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogsPaginated.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogsPartial.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogsRequest.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogsResponse.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedLogsUrl.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoCategory.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoConfidential.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoConfidentialSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoConfidentialValue.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoFileFormatValue.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoSourceValueConfidential.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedUploadRequestDtoSourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/UnifiedWarningApiModel.cs
  - src/StackOneHQ/Client/Models/Components/UpdatePackage.cs
  - src/StackOneHQ/Client/Models/Components/UpdateResult.cs
  - src/StackOneHQ/Client/Models/Components/UpdateTaskRequestDto.cs
  - src/StackOneHQ/Client/Models/Components/UpdateTaskRequestDtoSourceValue.cs
  - src/StackOneHQ/Client/Models/Components/UpdateTaskRequestDtoSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/UpdateTaskRequestDtoStatus.cs
  - src/StackOneHQ/Client/Models/Components/UpdateTaskRequestDtoValue.cs
  - src/StackOneHQ/Client/Models/Components/UpsertResult.cs
  - src/StackOneHQ/Client/Models/Components/UpsertResultDataExternalReferenceModel.cs
  - src/StackOneHQ/Client/Models/Components/UserResult.cs
  - src/StackOneHQ/Client/Models/Components/UsersPaginated.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibility.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityCategory.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityCategorySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityDocument.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityDocumentValue.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityFileFormatSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityIssuedBy.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityIssuedBySourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityIssuedByValue.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityPaginated.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityResult.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilitySourceValueCategory.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilitySourceValueFileFormat.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilitySourceValueIssuedBy.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilitySourceValueType.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityType.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/WorkEligibilityTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/WorkLocationLocationType.cs
  - src/StackOneHQ/Client/Models/Components/WorkLocationLocationTypeSourceValueUnion.cs
  - src/StackOneHQ/Client/Models/Components/WorkLocationLocationTypeValue.cs
  - src/StackOneHQ/Client/Models/Components/WriteResultApiModel.cs
  - src/StackOneHQ/Client/Models/Errors/APIException.cs
  - src/StackOneHQ/Client/Models/Errors/BadGatewayResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/BadRequestResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/ConflictResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/ForbiddenResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/InternalServerErrorResponse.cs
  - src/StackOneHQ/Client/Models/Errors/NotFoundResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/NotImplementedResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/PreconditionFailedResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/RequestTimedOutResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/TooManyRequestsResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/UnauthorizedResponseException.cs
  - src/StackOneHQ/Client/Models/Errors/UnprocessableEntityResponseException.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingBatchCreateCompanyJournalsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingBatchCreateCompanyJournalsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingCreateCompanyJournalRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingCreateCompanyJournalResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyAccountRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyAccountResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyJournalRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyJournalResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyTaxRateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingGetCompanyTaxRateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompaniesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompaniesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompaniesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyAccountsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyAccountsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyAccountsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyJournalsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyJournalsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyJournalsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyTaxRatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyTaxRatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AccountingListCompanyTaxRatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateApplicationNoteRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateApplicationNoteResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateApplicationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateApplicationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateBackgroundCheckPackageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateBackgroundCheckPackageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateCandidateNoteRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateCandidateNoteResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateCandidateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateCandidateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateJobRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateJobResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateOfferRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsCreateOfferResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsDeleteBackgroundCheckPackageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsDeleteBackgroundCheckPackageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsDownloadApplicationDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsDownloadApplicationDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationCustomFieldDefinitionFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationCustomFieldDefinitionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationCustomFieldDefinitionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationDocumentCategoryRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationDocumentCategoryResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationNoteRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationNoteResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationOfferRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationOfferResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationScheduledInterviewRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationScheduledInterviewResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationScorecardRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetApplicationScorecardResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetAssessmentsPackageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetAssessmentsPackageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetBackgroundCheckPackageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetBackgroundCheckPackageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateCustomFieldDefinitionFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateCustomFieldDefinitionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateCustomFieldDefinitionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateNoteRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateNoteResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetCandidateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetDepartmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetDepartmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetInterviewRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetInterviewResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetInterviewStageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetInterviewStageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobApplicationStageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobApplicationStageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobCustomFieldDefinitionFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobCustomFieldDefinitionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobCustomFieldDefinitionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobPostingRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobPostingResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetJobResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetListRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetListResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetLocationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetLocationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetOfferRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetOfferResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetRejectedReasonRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetRejectedReasonResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsGetUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationChangesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationChangesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationChangesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationCustomFieldDefinitionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationCustomFieldDefinitionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationCustomFieldDefinitionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentCategoriesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentCategoriesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentCategoriesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationDocumentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationNotesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationNotesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationNotesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationScorecardsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationScorecardsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationScorecardsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsOffersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsOffersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsOffersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsScheduledInterviewsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsScheduledInterviewsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListApplicationsScheduledInterviewsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListAssessmentsPackagesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListAssessmentsPackagesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListAssessmentsPackagesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListBackgroundCheckPackagesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListBackgroundCheckPackagesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListBackgroundCheckPackagesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateCustomFieldDefinitionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateCustomFieldDefinitionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateCustomFieldDefinitionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateNotesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateNotesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidateNotesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListCandidatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListDepartmentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListDepartmentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListDepartmentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewStagesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewStagesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewStagesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListInterviewsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobApplicationStagesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobApplicationStagesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobApplicationStagesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobCustomFieldDefinitionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobCustomFieldDefinitionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobCustomFieldDefinitionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobPostingsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobPostingsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobPostingsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListJobsStatus.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListListsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListListsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListListsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListLocationsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListLocationsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListLocationsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListOffersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListOffersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListOffersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListRejectedReasonsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListRejectedReasonsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListRejectedReasonsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListUsersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListUsersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsListUsersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsMoveApplicationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsMoveApplicationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsOrderAssessmentsRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsOrderAssessmentsRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsOrderBackgroundCheckRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsOrderBackgroundCheckRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsRejectApplicationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsRejectApplicationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateApplicationNoteRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateApplicationNoteResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateApplicationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateApplicationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateAssessmentsResultRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateAssessmentsResultResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateBackgroundCheckPackageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateBackgroundCheckPackageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateBackgroundCheckResultRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateBackgroundCheckResultResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateCandidateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateCandidateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateJobRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUpdateJobResponse.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUploadApplicationDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/AtsUploadApplicationDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/ChangeType.cs
  - src/StackOneHQ/Client/Models/Requests/CrmCreateContactRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmCreateContactResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetAccountRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetAccountResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetContactCustomFieldDefinitionFilter.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetContactCustomFieldDefinitionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetContactCustomFieldDefinitionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetContactRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetContactResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetListRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmGetListResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListAccountsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListAccountsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListAccountsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactCustomFieldDefinitionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactCustomFieldDefinitionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactCustomFieldDefinitionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListContactsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListListsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListListsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmListListsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/CrmUpdateContactRequest.cs
  - src/StackOneHQ/Client/Models/Requests/CrmUpdateContactResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsDownloadFileRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsDownloadFileResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetDriveRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetDriveResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetFileRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetFileResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetFolderRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsGetFolderResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListDrivesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListDrivesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListDrivesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFilesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFilesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFilesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFoldersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFoldersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsListFoldersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsUploadFileRequest.cs
  - src/StackOneHQ/Client/Models/Requests/DocumentsUploadFileResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisBatchUploadEmployeeDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisBatchUploadEmployeeDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCancelEmployeeTimeOffRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCancelEmployeeTimeOffRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeEmploymentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeEmploymentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeSkillRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeSkillResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeTimeOffRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeTimeOffRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeWorkEligibilityRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisCreateEmployeeWorkEligibilityRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisDownloadEmployeeDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisDownloadEmployeeDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetBenefitRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetBenefitResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCompanyGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCompanyGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCompanyRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCompanyResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCostCenterGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetCostCenterGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetDepartmentGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetDepartmentGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetDivisionGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetDivisionGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeCustomFieldDefinitionFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeCustomFieldDefinitionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeCustomFieldDefinitionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeDocumentCategoryRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeDocumentCategoryResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeEmploymentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeEmploymentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeSkillRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeSkillResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeTaskRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeTaskResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeTimeOffBalanceRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeeTimeOffBalanceResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeesTimeOffRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeesTimeOffRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeesWorkEligibilityRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmployeesWorkEligibilityResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmploymentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetEmploymentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetJobRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetJobResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetLocationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetLocationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetPositionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetPositionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetShiftRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetShiftResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTaskRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTaskResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTeamGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTeamGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeEntriesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeEntriesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffPolicyRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffPolicyResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffTypeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisGetTimeOffTypeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisInviteEmployeeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisInviteEmployeeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListBenefitsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListBenefitsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListBenefitsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCompaniesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCostCenterGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCostCenterGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListCostCenterGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDepartmentGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDepartmentGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDepartmentGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDivisionGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDivisionGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListDivisionGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCategoriesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCategoriesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCategoriesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCustomFieldDefinitionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCustomFieldDefinitionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeCustomFieldDefinitionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeDocumentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeDocumentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeDocumentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeEmploymentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeEmploymentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeEmploymentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeSkillsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeSkillsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeSkillsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTasksFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTasksRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTasksResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffBalancesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffBalancesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffBalancesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffPoliciesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffPoliciesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffPoliciesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffPoliciesType.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffRequestsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffRequestsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeTimeOffRequestsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeWorkEligibilityFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeWorkEligibilityRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeeWorkEligibilityResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmployeesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmploymentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmploymentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListEmploymentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListJobsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListJobsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListJobsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListLocationsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListLocationsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListLocationsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListPositionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListPositionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListPositionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListPositionsStatus.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListShiftsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListShiftsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListShiftsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListShiftsStatus.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTasksFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTasksRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTasksResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTeamGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTeamGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTeamGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeEntriesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeEntriesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeEntriesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffPoliciesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffPoliciesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffPoliciesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffPoliciesType.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffRequestsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffRequestsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffRequestsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffTypesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffTypesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisListTimeOffTypesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeEmploymentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeEmploymentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeTaskRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeTaskResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeTimeOffRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeTimeOffRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeWorkEligibilityRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUpdateEmployeeWorkEligibilityRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUploadEmployeeDocumentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/HrisUploadEmployeeDocumentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamDeleteUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamDeleteUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetGroupRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetGroupResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetPolicyRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetPolicyResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetRoleRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetRoleResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamGetUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamListGroupsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/IamListGroupsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamListGroupsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamListPoliciesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/IamListPoliciesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamListPoliciesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamListRolesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/IamListRolesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamListRolesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamListUsersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/IamListUsersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamListUsersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/IamUpdateUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/IamUpdateUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/JobStatus.cs
  - src/StackOneHQ/Client/Models/Requests/LmsBatchUpsertContentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsBatchUpsertContentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsCreateUserAssignmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsCreateUserAssignmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsCreateUserCompletionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsCreateUserCompletionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsDeleteUserCompletionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsDeleteUserCompletionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetAssignmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetAssignmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCategoryRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCategoryResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCompletionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCompletionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetContentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetContentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCourseRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetCourseResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetSkillRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetSkillResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserAssignmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserAssignmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserCompletionRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserCompletionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsGetUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListAssignmentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListAssignmentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListAssignmentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListAssignmentsStatus.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCategoriesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCategoriesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCategoriesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCompletionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCompletionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCompletionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListContentActive.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListContentFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListContentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListContentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCoursesActive.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCoursesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCoursesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListCoursesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListSkillsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListSkillsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListSkillsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserAssignmentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserAssignmentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserAssignmentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserAssignmentsStatus.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserCompletionsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserCompletionsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUserCompletionsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUsersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUsersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsListUsersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsUpdateContentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsUpdateContentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/LmsUpsertContentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/LmsUpsertContentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateContentBlockRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateContentBlockResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateEmailTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateEmailTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateInAppTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateInAppTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateOmniChannelTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateOmniChannelTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreatePushTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreatePushTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateSmsTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingCreateSmsTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetCampaignRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetCampaignResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetContentBlockRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetContentBlockResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetEmailTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetEmailTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetInAppTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetInAppTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetOmniChannelTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetOmniChannelTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetPushTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetPushTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetSmsTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingGetSmsTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListCampaignsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListCampaignsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListCampaignsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListContentBlocksFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListContentBlocksRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListContentBlocksResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListEmailTemplatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListEmailTemplatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListEmailTemplatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListInAppTemplatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListInAppTemplatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListInAppTemplatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListOmniChannelTemplatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListOmniChannelTemplatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListOmniChannelTemplatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListPushTemplatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListPushTemplatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListPushTemplatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListSmsTemplatesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListSmsTemplatesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingListSmsTemplatesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateContentBlockRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateContentBlockResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateEmailTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateEmailTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateInAppTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateInAppTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateOmniChannelTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateOmniChannelTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdatePushTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdatePushTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateSmsTemplateRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MarketingUpdateSmsTemplateResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingCreateConversationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingCreateConversationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingDownloadMessagingAttachmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingDownloadMessagingAttachmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetAttachmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetAttachmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetConversationRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetConversationResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetMessageFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetMessageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetMessageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingGetUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListAttachmentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListAttachmentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListAttachmentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationMessagesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationMessagesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationMessagesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListConversationsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListUsersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListUsersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingListUsersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingSendMessageRequest.cs
  - src/StackOneHQ/Client/Models/Requests/MessagingSendMessageResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneAuthenticateConnectSessionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneCreateConnectSessionResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneDeleteAccountRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneDeleteAccountResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetAccountMetaInfoRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetAccountMetaInfoResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetAccountRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetAccountResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetConnectorMetaRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetConnectorMetaResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetLogInclude.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetLogRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneGetLogResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListConnectorsMetaRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListConnectorsMetaResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLinkedAccountsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLinkedAccountsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsFilterOrderBy.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsFilterOrderDirection.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsInclude.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsOrderBy.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsOrderDirection.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListLogsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsFilterOrderBy.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsFilterOrderDirection.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsOrderBy.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsOrderDirection.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListPlatformLogsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListStepLogsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListStepLogsOrderBy.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListStepLogsOrderDirection.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListStepLogsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneListStepLogsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneProxyRequestRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneProxyRequestResponse.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneUpdateAccountRequest.cs
  - src/StackOneHQ/Client/Models/Requests/StackoneUpdateAccountResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingCreateTicketRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingCreateTicketResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingDownloadTicketingAttachmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingDownloadTicketingAttachmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetAttachmentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetAttachmentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetCommentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetCommentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetProjectComponentRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetProjectComponentResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetProjectRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetProjectResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetTicketRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetTicketResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetTicketTypeRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetTicketTypeResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetUserRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingGetUserResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListAttachmentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListAttachmentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListAttachmentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListCommentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListCommentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListCommentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectComponentsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectComponentsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectComponentsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectTicketTypesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectTicketTypesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectTicketTypesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListProjectsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketStatusesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketStatusesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketStatusesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketTypesFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketTypesRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketTypesResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketsFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketsRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListTicketsResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListUsersFilter.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListUsersRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingListUsersResponse.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingUpdateTicketRequest.cs
  - src/StackOneHQ/Client/Models/Requests/TicketingUpdateTicketResponse.cs
  - src/StackOneHQ/Client/Notes.cs
  - src/StackOneHQ/Client/Offers.cs
  - src/StackOneHQ/Client/Policies.cs
  - src/StackOneHQ/Client/Proxy.cs
  - src/StackOneHQ/Client/RejectedReasons.cs
  - src/StackOneHQ/Client/RequestLogs.cs
  - src/StackOneHQ/Client/SDKConfig.cs
  - src/StackOneHQ/Client/Shifts.cs
  - src/StackOneHQ/Client/Sms.cs
  - src/StackOneHQ/Client/StackOneHQ.Client.csproj
  - src/StackOneHQ/Client/StackOneHQClient.cs
  - src/StackOneHQ/Client/Tasks.cs
  - src/StackOneHQ/Client/Templates.cs
  - src/StackOneHQ/Client/Ticketing.cs
  - src/StackOneHQ/Client/TicketingUsers.cs
  - src/StackOneHQ/Client/Tickets.cs
  - src/StackOneHQ/Client/TicketsComments.cs
  - src/StackOneHQ/Client/TimeOff.cs
  - src/StackOneHQ/Client/TimeOffTypes.cs
  - src/StackOneHQ/Client/UsersAssignments.cs
  - src/StackOneHQ/Client/Utils/AnyDeserializer.cs
  - src/StackOneHQ/Client/Utils/BigIntStrConverter.cs
  - src/StackOneHQ/Client/Utils/DecimalStrConverter.cs
  - src/StackOneHQ/Client/Utils/EnumConverter.cs
  - src/StackOneHQ/Client/Utils/FlexibleObjectDeserializer.cs
  - src/StackOneHQ/Client/Utils/HeaderSerializer.cs
  - src/StackOneHQ/Client/Utils/IsoDateTimeSerializer.cs
  - src/StackOneHQ/Client/Utils/OpenEnumConverter.cs
  - src/StackOneHQ/Client/Utils/RequestBodySerializer.cs
  - src/StackOneHQ/Client/Utils/ResponseBodyDeserializer.cs
  - src/StackOneHQ/Client/Utils/Retries/BackoffStrategy.cs
  - src/StackOneHQ/Client/Utils/Retries/Retries.cs
  - src/StackOneHQ/Client/Utils/Retries/RetryConfig.cs
  - src/StackOneHQ/Client/Utils/SecurityMetadata.cs
  - src/StackOneHQ/Client/Utils/SpeakeasyHttpClient.cs
  - src/StackOneHQ/Client/Utils/SpeakeasyMetadata.cs
  - src/StackOneHQ/Client/Utils/URLBuilder.cs
  - src/StackOneHQ/Client/Utils/Utilities.cs
  - src/StackOneHQ/Client/WorkEligibility.cs
examples:
  stackone_create_connect_session:
    speakeasy-default-stackone-create-connect-session:
      requestBody:
        application/json: {"categories": ["ats", "hris", "ticketing", "crm", "iam", "marketing", "lms", "iam", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "expires_in": 1800, "multiple": false, "type": "production"}
      responses:
        "201":
          application/json: {"id": 203.83, "organization_id": 9266.53, "project_id": "<id>", "categories": ["ats", "hris", "hris-legacy", "crm", "iam", "marketing", "lms", "crm", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2023-01-24T01:30:32.862Z", "external_trigger_token": "f0bc3d88-2178-5423-8c81-b81d6c9da824", "type": "test", "token": "<value>", "auth_link_url": "https://difficult-avalanche.info"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_authenticate_connect_session:
    speakeasy-default-stackone-authenticate-connect-session:
      requestBody:
        application/json: {"token": "<value>"}
      responses:
        "201":
          application/json: {"id": 8422.01, "organization_id": 9188.03, "project_id": "<id>", "categories": ["ats", "hris", "accounting", "crm", "iam", "marketing", "lms", "stackone", "documents", "ticketing", "screening", "messaging", "accounting"], "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2024-10-01T04:59:29.242Z", "external_trigger_token": "f0bc3d88-2178-5423-8c81-b81d6c9da824", "type": "test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_linked_accounts:
    speakeasy-default-stackone-list-linked-accounts:
      parameters:
        query:
          page_size: 25
      responses:
        "200":
          application/json: [{"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2023-08-25T20:12:56.347Z", "updated_at": "2024-12-09T07:01:05.023Z", "type": "unmapped_value"}]
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_account:
    speakeasy-default-stackone-get-account:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-10-31T21:03:50.339Z", "updated_at": "2024-08-19T21:52:53.834Z", "type": "production"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_update_account:
    speakeasy-default-stackone-update-account:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"type": "test"}
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-10-09T05:20:37.883Z", "updated_at": "2023-12-15T05:46:29.205Z", "type": "unmapped_value"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_delete_account:
    speakeasy-default-stackone-delete-account:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "provider": "<value>", "status": "error", "origin_owner_id": "<id>", "origin_owner_name": "<value>", "created_at": "2025-02-08T13:24:15.952Z", "updated_at": "2023-10-15T07:09:50.321Z", "type": "test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_account_meta_info:
    speakeasy-default-stackone-get-account-meta-info:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"provider": "<value>", "category": "screening", "models": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_step_logs:
    speakeasy-default-stackone-list-step-logs:
      parameters:
        query:
          order_by: "eventDatetime"
          order_direction: "asc"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "http_methods": "GET,POST", "providers": "ashby,greenhouse", "services": "hris,ats", "resources": "employees,users", "child_resources": "documents,time-off", "sub_resources": "documents,employees", "actions": "download,upload", "status_codes": "200,400", "success": true}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_log:
    speakeasy-default-stackone-get-log:
      parameters:
        path:
          id: "<id>"
        query:
          include: "step_logs"
      responses:
        "200":
          application/json: {"data": {"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "request": {"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "method": "get", "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "url": {"url": "https://example.com/api/v1/resource", "hostname": "example.com", "path": "/api/v1/resource", "query_params": {"page": 1, "limit": 10}}}, "response": {"status_code": 200, "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "custom_mapping_errors": [{"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "message": "Invalid value", "targetField": "first_name"}], "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}, "source_ip": "192.168.1.1", "step_requests": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "request": {"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "method": "get", "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "url": {"url": "https://example.com/api/v1/resource", "hostname": "example.com", "path": "/api/v1/resource", "query_params": {"page": 1, "limit": 10}}}, "response": {"status_code": 200, "headers": {"content-type": "application/json", "authorization": "Bearer token"}, "custom_mapping_errors": [{"id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "message": "Invalid value", "targetField": "first_name"}], "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_logs:
    speakeasy-default-stackone-list-logs:
      parameters:
        query:
          order_by: "duration"
          order_direction: "asc"
          include: "step_logs"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "source_types": "DASHBOARD,SYNTHETIC_WEBHOOK", "http_methods": "GET,POST", "providers": "ashby,greenhouse", "services": "hris,ats", "resources": "employees,users", "child_resources": "documents,time-off", "sub_resources": "documents,employees", "actions": "download,upload", "status_codes": "200,400", "success": true, "order_by": "duration", "order_direction": "asc"}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "step_requests": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "provider": "planday", "service": "hris", "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "is_worker": false, "id": "adbf752f-6457-4ddd-89b3-98ae2252b83b"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_connectors_meta:
    speakeasy-default-stackone-list-connectors-meta:
      parameters:
        query:
          include: "field_path,unmapped_fields,resources,inactive,webhooks,static_fields"
      responses:
        "200":
          application/json: [{"provider": "hibob", "provider_name": "Hibob", "category": "hris", "active": true, "models": {"employees": {"create": {"apiPath": "/unified/hris/employees/:id", "input": {"defaultFields": [{"name": "first_name", "type": "string"}]}, "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}, "time_off": {"get": {"apiPath": "/unified/hris/employees/:id/time_off/:id", "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}}, "resources": {"images": {"logo_url": "https://app.stackone.com/assets/logos/hibob.png", "original_logo_horizontal_url": "https://app.stackone.com/assets/logos/original/hibob_horizontal.png"}}}]
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_get_connector_meta:
    speakeasy-default-stackone-get-connector-meta:
      parameters:
        path:
          provider: "<value>"
        query:
          include: "field_path,unmapped_fields,resources,inactive,webhooks,static_fields"
      responses:
        "200":
          application/json: {"provider": "hibob", "provider_name": "Hibob", "category": "hris", "active": true, "models": {"employees": {"create": {"apiPath": "/unified/hris/employees/:id", "input": {"defaultFields": [{"name": "first_name", "type": "string"}]}, "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}, "time_off": {"get": {"apiPath": "/unified/hris/employees/:id/time_off/:id", "output": {"defaultFields": [{"name": "id", "type": "string"}]}}}}, "resources": {"images": {"logo_url": "https://app.stackone.com/assets/logos/hibob.png", "original_logo_horizontal_url": "https://app.stackone.com/assets/logos/original/hibob_horizontal.png"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_proxy_request:
    speakeasy-default-stackone-proxy-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"url": "https://api.sample-integration.com/v1", "method": "get", "path": "/employees/directory", "headers": {"Content-Type": "application/json"}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_companies:
    speakeasy-default-hris-list-companies:
      parameters:
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_company:
    speakeasy-default-hris-get-company:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_custom_field_definitions:
    speakeasy-default-hris-list-employee-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_custom_field_definition:
    speakeasy-default-hris-get-employee-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employees:
    speakeasy-default-hris-list-employees:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_id,remote_job_id,job_title,job_description,department_id,remote_department_id,department,cost_centers,company,manager_id,remote_manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,company_id,remote_company_id,preferred_language,citizenships,home_location,work_location,employments,custom_fields,created_at,updated_at,benefits,employee_number,national_identity_number,national_identity_numbers,skills"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "company,employments,work_location,home_location,groups,skills"
          include: "avatar_url,avatar,custom_fields,job_description,benefits"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}], "remote_manager_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "tenure": 2, "work_anniversary": "2021-01-01T00:00:00Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "company": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}, "employments": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "skills": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee:
    speakeasy-default-hris-create-employee:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "department_id": "3093", "team_id": "2913", "department": "Physics", "manager_id": "67890", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "start_date": "2021-01-01T00:00:00.000Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "employment": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "work_location": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "R&D", "distribution_percentage": 100}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee:
    speakeasy-default-hris-get-employee:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_id,remote_job_id,job_title,job_description,department_id,remote_department_id,department,cost_centers,company,manager_id,remote_manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_contract_type,employment_status,termination_date,company_name,company_id,remote_company_id,preferred_language,citizenships,home_location,work_location,employments,custom_fields,created_at,updated_at,benefits,employee_number,national_identity_number,national_identity_numbers,skills"
          expand: "company,employments,work_location,home_location,groups,skills"
          include: "avatar_url,avatar,custom_fields,job_description,benefits"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}], "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "tenure": 2, "work_anniversary": "2021-01-01T00:00:00Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": null, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "company": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}, "employments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": null, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": null, "owner_id": "5356", "parent_id": "7577"}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}], "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "skills": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee:
    speakeasy-default-hris-update-employee:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Isaac", "last_name": "Newton", "name": "Isaac Newton", "display_name": "Sir Isaac Newton", "avatar_url": "https://example.com/avatar.png", "personal_email": "isaac.newton@example.com", "personal_phone_number": "+1234567890", "work_email": "newton@example.com", "work_phone_number": "+1234567890", "job_title": "Physicist", "department_id": "3093", "team_id": "2913", "department": "Physics", "manager_id": "67890", "gender": {}, "preferred_language": {"value": "eng"}, "ethnicity": {}, "date_of_birth": "1990-01-01T00:00:00.000Z", "birthday": "2021-01-01T00:00:00Z", "marital_status": {}, "avatar": {}, "hire_date": "2021-01-01T00:00:00.000Z", "start_date": "2021-01-01T00:00:00.000Z", "employment_status": {}, "termination_date": "2021-01-01T00:00:00Z", "company_id": "1234567890", "citizenships": [{"value": "US"}], "employment": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "benefits": null, "employee_number": "125", "national_identity_numbers": [{"value": "123456789", "type": {"value": "ssn"}, "country": {"value": "US"}}], "home_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "work_location": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "zip_code": "NG33 5NR", "country": {"value": "US"}, "passthrough": {"other_known_names": "John Doe"}, "state": {}}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_invite_employee:
    speakeasy-default-hris-invite-employee:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record invited successfully", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_requests:
    speakeasy-default-hris-list-employee-time-off-requests:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "created_date": "2021-01-01T01:01:01.000Z", "updated_date": "2021-01-01T01:01:01.000Z", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_time_off_request:
    speakeasy-default-hris-create-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"approver_id": "1687-4", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "time_off_policy_id": "cx280928933", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "comment": "Taking a day off for personal reasons", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employees_time_off_request:
    speakeasy-default-hris-get-employees-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "created_date": "2021-01-01T01:01:01.000Z", "updated_date": "2021-01-01T01:01:01.000Z", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_cancel_employee_time_off_request:
    speakeasy-default-hris-cancel-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_time_off_request:
    speakeasy-default-hris-update-employee-time-off-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"approver_id": "1687-4", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "time_off_policy_id": "cx280928933", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "comment": "Taking a day off for personal reasons", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_batch_upload_employee_document:
    speakeasy-default-hris-batch-upload-employee-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": [{"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}]}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_upload_employee_document:
    speakeasy-default-hris-upload-employee-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_download_employee_document:
    speakeasy-default-hris-download-employee-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/octet-stream: "0xD8a7d4EC38"
          application/gzip: "0xD8a7d4EC38"
          application/msword: "0x2fCA5f2BdE"
          application/pdf: "0x2787fbBA5B"
          application/rtf: "0x5E636dB592"
          application/vnd.ms-excel: "0x228e85F828"
          application/vnd.ms-outlook: "0x84d5f5DF5D"
          application/vnd.ms-powerpoint: "0xeE5DDaEf5F"
          application/vnd.oasis.opendocument.presentation: "0xBdC3e9094d"
          application/vnd.oasis.opendocument.spreadsheet: "0xC5bf4ae9Fb"
          application/vnd.oasis.opendocument.text: "0xEFAAA5FEf6"
          application/vnd.openxmlformats-officedocument.presentationml.presentation: "0xc37c3f3042"
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: "0xAccb6bF5c7"
          application/vnd.openxmlformats-officedocument.wordprocessingml.document: "0x53dBaA0D24"
          application/x-7z-compressed: "0x15cFE0D1c1"
          application/x-rar-compressed: "0xDE9DA3f1fc"
          application/xml: "0xEcAbE4Fde3"
          application/zip: "0xbCdBCdD9Db"
          audio/mp4: "0xB88ef7DE3B"
          audio/mpeg: "0xC55c419fAe"
          audio/wav: "0xAf65FAf186"
          image/bmp: "0x96192FD83b"
          image/gif: "0x00C0A53c9f"
          image/heic: "0xF49E299baF"
          image/jpeg: "0x42b05E3DA1"
          image/png: "0x3f00EfB460"
          image/tiff: "0x97fa658Df0"
          image/webp: "0x214CFC4E3a"
          message/rfc822: "0xb925d00B7a"
          text/csv: "0x112a9BeaEd"
          text/html: "0xD5EFfB35Ae"
          text/rtf: "0xbFc3Ef110B"
          video/avi: "0xa2BCDcA8E9"
          video/mp4: "0x8E5A2bAdFC"
          video/quicktime: "0xBa3f9432a1"
          video/webm: "0x673DfC4bc6"
          text/plain: "<value>"
          application/json: {"headers": {"content-disposition": "attachment; filename=\"example.pdf\"", "content-type": "application/pdf", "content-length": 1024, "content-range": "bytes 0-1023/2048", "content-encoding": "gzip", "transfer-encoding": "chunked"}, "data": "0xeDAC87fBe2"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_documents:
    speakeasy-default-hris-list-employee-documents:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,path,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_document:
    speakeasy-default-hris-get-employee-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,path,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_categories:
    speakeasy-default-hris-list-employee-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_document_category:
    speakeasy-default-hris-get-employee-document-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_work_eligibility:
    speakeasy-default-hris-list-employee-work-eligibility:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,sub_type,document,valid_from,valid_to,issued_by,number"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "sub_type": "H1B", "document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "issued_by": {"value": "US"}, "number": "1234567890"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_work_eligibility_request:
    speakeasy-default-hris-create-employee-work-eligibility-request:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": null}, "issued_by": {"value": "US"}, "number": "1234567890", "sub_type": "H1B", "type": {}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employees_work_eligibility:
    speakeasy-default-hris-get-employees-work-eligibility:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,type,sub_type,document,valid_from,valid_to,issued_by,number"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "sub_type": "H1B", "document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "issued_by": {"value": "US"}, "number": "1234567890"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_work_eligibility_request:
    speakeasy-default-hris-update-employee-work-eligibility-request:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"document": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}, "issued_by": {"value": "US"}, "number": "1234567890", "sub_type": "H1B", "type": {}, "valid_from": "2021-01-01T00:00:00.000Z", "valid_to": "2021-01-01T00:00:00.000Z", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_balances:
    speakeasy-default-hris-list-employee-time-off-balances:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,policy_id,remote_policy_id,policy,current_balance,initial_balance,balance_unit,balance_start_date,balance_expiry_date,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_time_off_balance:
    speakeasy-default-hris-get-employee-time-off-balance:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,policy_id,remote_policy_id,policy,current_balance,initial_balance,balance_unit,balance_start_date,balance_expiry_date,updated_at"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "policy_id": "cx280928937", "remote_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "current_balance": 8, "initial_balance": 8, "balance_unit": {"value": "hours"}, "balance_start_date": "2021-01-01T01:01:01.000Z", "balance_expiry_date": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employments:
    speakeasy-default-hris-list-employments:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,type,contract_type,manager"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employment:
    speakeasy-default-hris-get-employment:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,type,contract_type,manager"
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": null, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": null}, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": null, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": null, "owner_id": "5356", "parent_id": "7577"}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_employments:
    speakeasy-default-hris-list-employee-employments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,type,contract_type,manager"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_employment:
    speakeasy-default-hris-create-employee-employment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "job_id": "5290", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_employment:
    speakeasy-default-hris-get-employee-employment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,end_date,employment_type,employment_contract_type,change_reason,grade,work_time,payroll_code,fte,created_at,updated_at,start_date,active,department,team,cost_center,cost_centers,division,job,type,contract_type,manager"
          expand: "groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "fte": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "active": true, "department": null, "cost_centers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}], "division": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "description": {"text": "Testing the laws of motion"}, "owner_id": "5356", "parent_id": "7577"}, "type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Permanent", "type": {}}, "contract_type": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Full-Time", "contract_type": {}}, "manager": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "role": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "label": "Admin", "role_type": {"value": "admin"}}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_employment:
    speakeasy-default-hris-update-employee-employment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "job_title": "Software Engineer", "pay_rate": "40.00", "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "pay_currency": "USD", "effective_date": "2021-01-01T01:01:01.000Z", "end_date": "2021-01-01T01:01:01.000Z", "grade": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "description": "Mid-level employee demonstrating proficiency and autonomy."}, "work_time": {"duration": "P0Y0M0DT8H0M0S", "duration_unit": {"value": "month"}}, "payroll_code": "PC1", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_groups:
    speakeasy-default-hris-list-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_department_groups:
    speakeasy-default-hris-list-department-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_cost_center_groups:
    speakeasy-default-hris-list-cost-center-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,distribution_percentage,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_team_groups:
    speakeasy-default-hris-list-team-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_division_groups:
    speakeasy-default-hris-list-division-groups:
      parameters:
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_companies_groups:
    speakeasy-default-hris-list-companies-groups:
      parameters:
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_group:
    speakeasy-default-hris-get-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_department_group:
    speakeasy-default-hris-get-department-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "department"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_cost_center_group:
    speakeasy-default-hris-get-cost-center-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,distribution_percentage,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "distribution_percentage": 85, "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_team_group:
    speakeasy-default-hris-get-team-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "team"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_division_group:
    speakeasy-default-hris-get-division-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,parent_ids,remote_parent_ids,owner_ids,remote_owner_ids,company_id,remote_company_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Engineering", "parent_ids": ["cxIQNjUyNDM0", "cxIQNjQzNzI0MQ"], "remote_parent_ids": ["652434", "6437241"], "owner_ids": ["cxIQNjUyEDM0", "cxIQNjQzNzA0MQ"], "remote_owner_ids": ["475364", "4327652"], "company_id": "1234567890", "remote_company_id": "1234567890", "type": {"value": "division"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_company_group:
    speakeasy-default-hris-get-company-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,full_name,display_name,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "StackOne Technologies PLC", "full_name": "American Express Company", "display_name": "StackOne", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_jobs:
    speakeasy-default-hris-list-jobs:
      parameters:
        query:
          fields: "id,remote_id,code,title,description,status,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_job:
    speakeasy-default-hris-get-job:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,code,title,description,status,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "status": {"value": "open"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_locations:
    speakeasy-default-hris-list-locations:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": {"value": "US"}, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_location:
    speakeasy-default-hris-get-location:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "name": "Woolsthorpe Manor", "phone_number": "+44 1476 860 364", "street_1": "Water Lane", "street_2": "Woolsthorpe by Colsterworth", "city": "Grantham", "state": "Lincolnshire", "zip_code": "NG33 5NR", "country": null, "location_type": {"value": "home", "source_value": "Home"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_positions:
    speakeasy-default-hris-list-positions:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          status: "open"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "job_id": "JOB-12345", "title": "Senior Software Engineer", "description": "Responsible for developing and maintaining software applications", "department_id": "dept-123", "location_id": "loc-456", "employment_type": "full-time", "status": {"value": "open"}, "posted_date": "2024-01-15T10:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_position:
    speakeasy-default-hris-get-position:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "job_id": "JOB-12345", "title": "Senior Software Engineer", "description": "Responsible for developing and maintaining software applications", "department_id": "dept-123", "location_id": "loc-456", "employment_type": "full-time", "status": {"value": "open"}, "posted_date": "2024-01-15T10:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_entries:
    speakeasy-default-hris-list-time-entries:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,start_time,end_time,hours_worked,break_duration,labor_type,location,status,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "start_time": "2020-01-01T00:00:00.000Z", "end_time": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_entries:
    speakeasy-default-hris-get-time-entries:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,start_time,end_time,hours_worked,break_duration,labor_type,location,status,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_time": "2021-01-01T01:01:01.000Z", "end_time": "2021-01-01T01:01:01.000Z", "hours_worked": 8, "break_duration": 0.5, "labor_type": {"code": "ABC123"}, "location": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}, "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_requests:
    speakeasy-default-hris-list-time-off-requests:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          filter: null
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_request:
    speakeasy-default-hris-get-time-off-request:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,approver_id,remote_approver_id,status,type,start_date,end_date,start_half_day,end_half_day,time_off_policy_id,remote_time_off_policy_id,reason,comment,duration,created_at,updated_at,policy"
          expand: "policy"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "1687-3", "remote_employee_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "approver_id": "1687-4", "remote_approver_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000", "end_date": "2021-01-01T01:01:01.000", "start_half_day": true, "end_half_day": true, "duration": "P3Y6M4DT12H30M5S", "time_off_policy_id": "cx280928933", "remote_time_off_policy_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "reason": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "created_date": "2021-01-01T01:01:01.000Z", "updated_date": "2021-01-01T01:01:01.000Z", "policy": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "comment": "Taking a day off for personal reasons"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_shifts:
    speakeasy-default-hris-list-shifts:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "emp_123456789", "location_id": "loc_123456789", "company_id": "comp_123456789", "start_time": "2024-03-20T09:00:00Z", "end_time": "2024-03-20T17:00:00Z", "break_duration": "PT1H30M", "status": {"value": "confirmed", "source_value": "Confirmed"}, "approval_status": {"value": "approved", "source_value": "Approved"}, "breaks": [{"id": "break_123456789", "start_time": "2024-03-20T12:00:00Z", "end_time": "2024-03-20T13:00:00Z", "duration": "PT1H", "is_paid": true, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}], "created_at": "2024-03-20T08:00:00Z", "updated_at": "2024-03-20T08:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_shift:
    speakeasy-default-hris-get-shift:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "emp_123456789", "location_id": "loc_123456789", "company_id": "comp_123456789", "start_time": "2024-03-20T09:00:00Z", "end_time": "2024-03-20T17:00:00Z", "break_duration": "PT1H30M", "status": {"value": "confirmed", "source_value": "Confirmed"}, "approval_status": {"value": "approved", "source_value": "Approved"}, "breaks": [{"id": "break_123456789", "start_time": "2024-03-20T12:00:00Z", "end_time": "2024-03-20T13:00:00Z", "duration": "PT1H", "is_paid": true, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}], "created_at": "2024-03-20T08:00:00Z", "updated_at": "2024-03-20T08:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_types:
    speakeasy-default-hris-list-time-off-types:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_type:
    speakeasy-default-hris-get-time-off-type:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_time_off_policies:
    speakeasy-default-hris-list-time-off-policies:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_time_off_policy:
    speakeasy-default-hris-get-time-off-policy:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Holidays", "description": "Usable for regional and national holidays of employees.", "type": {"value": "holiday"}, "duration_unit": {"value": "hours"}, "reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_time_off_policies:
    speakeasy-default-hris-list-employee-time-off-policies:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,duration_unit,reasons,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_benefits:
    speakeasy-default-hris-list-benefits:
      parameters:
        query:
          fields: "id,remote_id,name,benefit_type,provider,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_benefit:
    speakeasy-default-hris-get-benefit:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,benefit_type,provider,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Health Insurance", "provider": "Aetna", "description": "Health insurance for employees", "created_at": "2021-01-01T00:00:00Z", "updated_at": "2021-01-01T00:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_skills:
    speakeasy-default-hris-list-employee-skills:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,language,maximum_proficiency,minimum_proficiency"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_create_employee_skill:
    speakeasy-default-hris-create-employee-skill:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "16873-IT345", "name": "Information-Technology", "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": null}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_skill:
    speakeasy-default-hris-get-employee-skill:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,active,language,maximum_proficiency,minimum_proficiency"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": null, "maximum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}, "minimum_proficiency": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Expert"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_employee_tasks:
    speakeasy-default-hris-list-employee-tasks:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": [{"comment": "Approved based on in-person assessment", "created_at": "2024-03-15T10:00:00.000Z"}], "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_employee_task:
    speakeasy-default-hris-get-employee-task:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_list_tasks:
    speakeasy-default-hris-list-tasks:
      parameters:
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": null, "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": null}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_get_task:
    speakeasy-default-hris-get-task:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,employee_id,remote_employee_id,name,description,type,status,due_date,completion_date,assigned_by_employee_id,remote_assigned_by_employee_id,assigned_by_employee_name,link_to_task,extracted_links,next_task_id,remote_next_task_id,parent_process_name,comments,attachments,created_at,updated_at"
          expand: "attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "employee_id": "cx280928937", "name": "Complete onboarding documents", "description": "Please complete all required onboarding documents in the employee portal", "type": {"value": "action"}, "status": {"value": "open"}, "due_date": "2024-03-20T23:59:59.000Z", "completion_date": "2024-03-19T15:30:00.000Z", "assigned_by_employee_id": "cx280928938", "assigned_by_employee_name": "John Smith", "link_to_task": "https://provider.com/tasks/123", "extracted_links": ["https://provider.com/docs/1", "https://provider.com/forms/2"], "next_task_id": "cx280928939", "parent_process_name": "Onboarding Tasks", "comments": [{"comment": "Approved based on in-person assessment", "created_at": "2024-03-15T10:00:00.000Z"}], "attachments": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}], "created_at": "2024-03-15T10:00:00.000Z", "updated_at": "2024-03-19T15:30:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications:
    speakeasy-default-ats-list-applications:
      parameters:
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          expand: "documents"
          include: "attachments,custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_application:
    speakeasy-default-ats-create-application:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "job_posting_id": "1c702a20-8de8-4d03-ac18-cbf4ac42eb51", "location_id": "dd8d41d1-5eb8-4408-9c87-9ba44604eae4", "application_status": null, "questionnaires": [{"id": "right_to_work", "answers": [{"id": "answer1", "type": {"value": "short_text", "source_value": "Short Text"}, "values": ["Yes"]}]}], "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}, "candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "candidate": {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "phone_numbers": [{"phone": "+447700112233"}], "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "company": "Company Inc.", "title": "Software Engineer", "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}, "documents": [{"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": null}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application:
    speakeasy-default-ats-get-application:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
          expand: "documents"
          include: "attachments,custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "remote_job_id": "4071538b-3cac-4fbf-ac76-f78ed250ffdd", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "remote_interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "rejected_reasons": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "label": "Failed Phone Screen", "rejected_reason_type": {"value": "rejected_by_organization", "source_value": "RejectedByOrg"}}], "rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "remote_rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "rejected_at": "2021-01-01T01:01:01.000Z", "location_ids": ["dd8d41d1-5eb8-4408-9c87-9ba44604eae4"], "remote_location_ids": ["dd8d41d1-5eb8-4408-9c87-9ba44604eae4"], "application_status": {"value": "hired", "source_value": "Hired"}, "questionnaires": [{"id": "right_to_work", "answers": [{"id": "answer1", "type": {"value": "short_text", "source_value": "Short Text"}, "values": ["Yes"]}]}], "candidate": null, "documents": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}], "result_links": [{"label": "test result link", "url": "http://example.com/test-result/4565765/data"}], "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_application:
    speakeasy-default-ats-update-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "application_status": {"value": "hired", "source_value": "Hired"}, "source": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "LinkedIn"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications_offers:
    speakeasy-default-ats-list-applications-offers:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_move_application:
    speakeasy-default-ats-move-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "interview_stage_id": "f223d7f6-908b-48f0-9237-b201c307f609"}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Application moved successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_reject_application:
    speakeasy-default-ats-reject-application:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "rejected_reason_id": "f223d7f6-908b-48f0-9237-b201c307f609"}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Application rejected successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_offer:
    speakeasy-default-ats-get-application-offer:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_scorecards:
    speakeasy-default-ats-list-application-scorecards:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,sections,label,candidate_id,remote_candidate_id,application_id,remote_application_id,interview_id,remote_interview_id,author_id,remote_author_id,overall_recommendation,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_scorecard:
    speakeasy-default-ats-get-application-scorecard:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,sections,label,candidate_id,remote_candidate_id,application_id,remote_application_id,interview_id,remote_interview_id,author_id,remote_author_id,overall_recommendation,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "sections": null, "label": "Technical Interview", "candidate_id": "5678-9", "remote_candidate_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "application_id": "1011-12", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_id": "1314-15", "remote_interview_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "author_id": "1617-18", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "overall_recommendation": "no_decision", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_changes:
    speakeasy-default-ats-list-application-changes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "event_id,remote_event_id,created_at,effective_at,change_type,actor,new_values"
          filter: {"created_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2024-01-15T10:30:00Z", "effective_at": "2024-01-15T10:30:00Z", "actor": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}, "change_type": {"value": "application_status", "source_value": "StatusChange"}, "new_values": {"interview_stage_id": "18bcbb1b-3cbc-4198-a999-460861d19480", "rejected_reason_ids": ["f223d7f6-908b-48f0-9237-b201c307f609"], "application_status": null}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_notes:
    speakeasy-default-ats-list-application-notes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_application_note:
    speakeasy-default-ats-create-application-note:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_note:
    speakeasy-default-ats-get-application-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_application_note:
    speakeasy-default-ats-update-application-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_applications_scheduled_interviews:
    speakeasy-default-ats-list-applications-scheduled-interviews:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_scheduled_interview:
    speakeasy-default-ats-get-application-scheduled-interview:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,candidate_id,remote_candidate_id,job_id,remote_job_id,job_posting_id,remote_job_posting_id,interview_stage,interview_stage_id,remote_interview_stage_id,rejected_reason,rejected_reason_id,remote_rejected_reason_id,rejected_reason_ids,remote_rejected_reason_ids,rejected_reasons,rejected_at,location_id,remote_location_id,location_ids,remote_location_ids,status,application_status,questionnaires,attachments,result_links,source,created_at,updated_at,documents,custom_fields,candidate"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_upload_application_document:
    speakeasy-default-ats-upload-application-document:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": null, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "confidential": {"value": "true", "source_value": "public"}, "category": {}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_download_application_document:
    speakeasy-default-ats-download-application-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/octet-stream: "0x22c19257bb"
          application/gzip: "0x22c19257bb"
          application/msword: "0xbCa44FeEb1"
          application/pdf: "0xaa1eeCfc4A"
          application/rtf: "0x01EFDC3bd1"
          application/vnd.ms-excel: "0x2207DFEAf3"
          application/vnd.ms-outlook: "0xD6FE8CEb2C"
          application/vnd.ms-powerpoint: "0xc452638C15"
          application/vnd.oasis.opendocument.presentation: "0x9d2ffFAe87"
          application/vnd.oasis.opendocument.spreadsheet: "0x66f6d3F200"
          application/vnd.oasis.opendocument.text: "0x2Dad9f0caf"
          application/vnd.openxmlformats-officedocument.presentationml.presentation: "0x4D1E2fcecc"
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: "0xa4dEaaC0Ea"
          application/vnd.openxmlformats-officedocument.wordprocessingml.document: "0xed80bd88a3"
          application/x-7z-compressed: "0x075F4b8773"
          application/x-rar-compressed: "0xFbD277306C"
          application/xml: "0x9cb30a1dee"
          application/zip: "0x2C3EBDaf72"
          audio/mp4: "0x85daC912dC"
          audio/mpeg: "0xFfACa8e6b5"
          audio/wav: "0x0c128B556D"
          image/bmp: "0x63FdfEBeFE"
          image/gif: "0x45f3688c63"
          image/heic: "0x06E3eecF75"
          image/jpeg: "0xADBaeF0eCA"
          image/png: "0xbEF42fcc7c"
          image/tiff: "0xE3fcf3Ef8B"
          image/webp: "0xe27B8aa32f"
          message/rfc822: "0xDAfDdF1e3d"
          text/csv: "0xcdfbAb46FF"
          text/html: "0x34fe613ca0"
          text/rtf: "0x2405B72430"
          video/avi: "0x4Db048Dcae"
          video/mp4: "0xAeE9A02210"
          video/quicktime: "0x8bb83A9B0e"
          video/webm: "0x14b0d37bff"
          text/plain: "<value>"
          application/json: {"headers": {"content-disposition": "attachment; filename=\"example.pdf\"", "content-type": "application/pdf", "content-length": 1024, "content-range": "bytes 0-1023/2048", "content-encoding": "gzip", "transfer-encoding": "chunked"}, "data": "0xeaccaAAeBE"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_documents:
    speakeasy-default-ats-list-application-documents:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,path,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_document:
    speakeasy-default-ats-get-application-document:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,path,type,category,category_id,remote_category_id,contents,created_at,updated_at,remote_url,file_format"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidates:
    speakeasy-default-ats-list-candidates:
      parameters:
        query:
          fields: "id,remote_id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,country,title,application_ids,remote_application_ids,hired_at,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": null, "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "remote_application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_candidate:
    speakeasy-default-ats-create-candidate:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "phone_numbers": [{"phone": "+447700112233"}], "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "company": "Company Inc.", "title": "Software Engineer", "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate:
    speakeasy-default-ats-get-candidate:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,country,title,application_ids,remote_application_ids,hired_at,custom_fields,created_at,updated_at"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "remote_application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_candidate:
    speakeasy-default-ats-update-candidate:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Romain Sestier", "first_name": "Romain", "last_name": "Sestier", "email": "sestier.romain123@gmail.com", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "social_links": [{"type": "linkedin", "url": "https://www.linkedin.com/in/romainsestier/"}], "phone_numbers": [{"phone": "+447700112233"}], "company": "Company Inc.", "title": "Software Engineer", "application_ids": ["123e4567-e89b-12d3-a456-426614174000", "523e1234-e89b-fdd2-a456-762545121101"], "hired_at": "2021-01-01T01:01:01.000Z", "country": "United States", "custom_fields": null}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidate_notes:
    speakeasy-default-ats-list-candidate-notes:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_candidate_note:
    speakeasy-default-ats-create-candidate-note:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "visibility": {"value": "public", "source_value": "Public"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate_note:
    speakeasy-default-ats-get-candidate-note:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,content,author_id,remote_author_id,visibility,created_at,updated_at,deleted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "content": [{"body": "This candidate seems like a good fit for the role"}], "author_id": "1234567890", "remote_author_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "visibility": {"value": "public", "source_value": "Public"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "deleted_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_custom_field_definitions:
    speakeasy-default-ats-list-application-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_custom_field_definition:
    speakeasy-default-ats-get-application-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_candidate_custom_field_definitions:
    speakeasy-default-ats-list-candidate-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_candidate_custom_field_definition:
    speakeasy-default-ats-get-candidate-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_custom_field_definitions:
    speakeasy-default-ats-list-job-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_custom_field_definition:
    speakeasy-default-ats-get-job-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_departments:
    speakeasy-default-ats-list-departments:
      parameters:
        query:
          fields: "id,remote_id,name"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_department:
    speakeasy-default-ats-get-department:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_interview_stages:
    speakeasy-default-ats-list-interview-stages:
      parameters:
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_interview_stage:
    speakeasy-default-ats-get-interview-stage:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_interviews:
    speakeasy-default-ats-list-interviews:
      parameters:
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_interview:
    speakeasy-default-ats-get-interview:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,interview_stage_id,remote_interview_stage_id,interview_stage,status,interview_status,interviewer_ids,remote_interviewer_ids,interview_parts,interviewers,start_at,end_at,meeting_url,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "remote_interview_stage_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "interview_stage": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "interview_status": {"value": "unscheduled", "source_value": "Unscheduled"}, "remote_interviewer_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "interview_parts": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "on_site", "source_value": "Onsite Interview"}, "title": "Interview (Informal Interview) - Elon and StackOne", "interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "remote_interviewer_ids": ["cx28iQahdfDHa", "cx28iQokkD78das"], "meeting_url": "zoomus://zoom.us/join?confno=123456789", "meeting_provider": "zoom", "start_at": "2021-01-01T17:00:00.000Z", "end_at": "2021-01-01T18:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "interviewers": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "start_at": "2021-01-01T01:01:01.000Z", "end_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_jobs:
    speakeasy-default-ats-list-jobs:
      parameters:
        query:
          fields: "id,remote_id,code,title,description,status,job_status,department_ids,remote_department_ids,location_ids,remote_location_ids,hiring_team,interview_stages,confidential,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          expand: "job_postings,interview_stages"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_job:
    speakeasy-default-ats-create-job:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job:
    speakeasy-default-ats-get-job:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,code,title,description,status,job_status,department_ids,remote_department_ids,location_ids,remote_location_ids,hiring_team,interview_stages,confidential,custom_fields,created_at,updated_at"
          expand: "job_postings,interview_stages"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "remote_department_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48"], "location_ids": ["668570", "678571", "688572"], "remote_location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": null, "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_job:
    speakeasy-default-ats-update-job:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "code": "184919", "title": "Software Engineer", "description": "Responsible for identifying business requirements", "job_status": {"value": "published", "source_value": "Published"}, "department_ids": ["308570", "308571", "308572"], "location_ids": ["668570", "678571", "688572"], "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "interview_stages": null, "custom_fields": null, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_lists:
    speakeasy-default-ats-list-lists:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_list:
    speakeasy-default-ats-get-list:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_locations:
    speakeasy-default-ats-list-locations:
      parameters:
        query:
          fields: "id,remote_id,name"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_location:
    speakeasy-default-ats-get-location:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_rejected_reasons:
    speakeasy-default-ats-list-rejected-reasons:
      parameters:
        query:
          fields: "id,remote_id,label,type,rejected_reason_type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_rejected_reason:
    speakeasy-default-ats-get-rejected-reason:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,label,type,rejected_reason_type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "label": "Failed Phone Screen", "rejected_reason_type": {"value": "rejected_by_organization", "source_value": "RejectedByOrg"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_users:
    speakeasy-default-ats-list-users:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,email,phone"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_user:
    speakeasy-default-ats-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,email,phone"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_postings:
    speakeasy-default-ats-list-job-postings:
      parameters:
        query:
          fields: "id,remote_id,title,locations,internal,status,job_id,remote_job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,start_date,updated_at,created_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "created_after": "2020-01-01T00:00:00.000Z"}
          include: "questionnaires"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_posting:
    speakeasy-default-ats-get-job-posting:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,title,locations,internal,status,job_id,remote_job_id,content,compensation,employment_type,employment_contract_type,external_url,external_apply_url,questionnaires,start_date,updated_at,created_at"
          include: "questionnaires"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "Software Engineer", "locations": [{"id": "12345", "name": "New York"}, {"id": "67890", "name": "Remote"}], "internal": "true", "status": {"value": "live", "source_value": "Live"}, "job_id": "job001", "remote_job_posting_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "content": {"plain": "This is a plain text description", "html": "<p>This is an HTML description</p>"}, "compensation": [{"name": "Base Salary", "type": {"value": "salary", "source_value": "Salary"}, "pay_period": {"value": "hour", "source_value": "Hour"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "currency": "USD", "value": "50000", "min_value": "45000", "max_value": "55000"}, {"name": "Bonus", "type": {"value": "salary", "source_value": "Salary"}, "pay_frequency": {"value": "hourly", "source_value": "Hourly"}, "currency": "USD", "value": "10%"}], "employment_type": {"value": "permanent", "source_value": "Permanent"}, "employment_contract_type": {"value": "full_time", "source_value": "FullTime"}, "external_url": "https://www.example.com/job-posting/abcd1234", "external_apply_url": "https://www.example.com/job-posting/abcd1234/apply", "questionnaires": [{"id": "about001", "name": "About", "internal": "false", "questions": [{"id": "question001", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What is your name?", "required": true, "parent_question": null}, {"id": "question002", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What are your hobbies?", "required": false, "parent_question": null}, {"id": "question003", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What is your favourite animal?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Dog"}, {"id": "2", "text": "Cat"}, {"id": "3", "text": "Bird"}, {"id": "4", "text": "Other"}], "parent_question": null}, {"id": "question004", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Do you have previous work experience??", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Yes"}, {"id": "2", "text": "No"}], "parent_question": null}, {"id": "question005", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "What was the duration of your last employment?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Less than 1 year"}, {"id": "2", "text": "1-2 years"}, {"id": "2", "text": "More than 2 year"}], "parent_question": {"id": "question004", "option_ids": ["1"], "condition_type": {"value": "equals_to", "source_value": "EqualsTo"}}}]}, {"id": "experience001", "name": "Experience", "internal": "false", "questions": [{"id": "question004", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Please upload your resume.", "required": true, "parent_question": null}, {"id": "question005", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Select the programming languages you are proficient in.", "required": true, "multiple_choice_answers": [{"id": "1", "text": "JavaScript"}, {"id": "2", "text": "Python"}, {"id": "3", "text": "Java"}], "parent_question": null}, {"id": "question006", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Are you willing to relocate?", "parent_question": null}, {"id": "question007", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "How many years of experience do you have?", "parent_question": null}, {"id": "question008", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "When did you start your most recent position?", "parent_question": null}, {"id": "question009", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "Do you have Project Management Experience?", "required": true, "multiple_choice_answers": [{"id": "1", "text": "Yes"}, {"id": "2", "text": "No"}], "parent_question": null}, {"id": "question010", "type": {"value": "short_text", "source_value": "ShortText"}, "text": "How much Project Management experience do you have?", "multiple_choice_answers": [{"id": "1", "text": "1-3 years"}, {"id": "2", "text": "3-5 years"}, {"id": "3", "text": "5-10 years"}, {"id": "4", "text": "More than 10 years"}], "parent_question": {"id": "question009", "option_ids": ["1"], "condition_type": {"value": "equals_to", "source_value": "EqualsTo"}}}]}], "start_date": "2021-01-01T00:00:00.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_offers:
    speakeasy-default-ats-list-offers:
      parameters:
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_offer:
    speakeasy-default-ats-create-offer:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
  ats_get_offer:
    speakeasy-default-ats-get-offer:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,application_id,remote_application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_application_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "start_date": "2021-01-01T01:01:01.000Z", "offer_status": {"value": "pending", "source_value": "Pending"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "offer_history": [{"start_date": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_assessments_packages:
    speakeasy-default-ats-list-assessments-packages:
      parameters:
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_assessments_package:
    speakeasy-default-ats-get-assessments-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_order_assessments_request:
    speakeasy-default-ats-order-assessments-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "package": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}, "application": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application_status": {"value": "hired", "source_value": "Hired"}, "passthrough": {"other_known_names": "John Doe"}}, "job": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "title": "Software Engineer", "hiring_team": [{"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}], "passthrough": {"other_known_names": "John Doe"}}, "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "first_name": "Romain", "last_name": "Sestier", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "passthrough": {"other_known_names": "John Doe"}, "profile_url": "https://exmaple.com/candidate?id=xyz"}, "requester": {"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}, "results_update_url": "https://exmaple.com/integrations/results/update", "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "test_url": "https://exmaple.com/integrations/candidate/test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_assessments_result:
    speakeasy-default-ats-update-assessments-result:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"score": null, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}], "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_assessments_result:
    speakeasy-default-ats-get-assessments-result:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate,score,start_date,submission_date,summary,result,result_url,attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "candidate": null, "score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_background_check_packages:
    speakeasy-default-ats-list-background-check-packages:
      parameters:
        query:
          fields: "id,remote_id,name,description,tests"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_create_background_check_package:
    speakeasy-default-ats-create-background-check-package:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_background_check_package:
    speakeasy-default-ats-get-background-check-package:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,tests"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_delete_background_check_package:
    speakeasy-default-ats-delete-background-check-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_background_check_package:
    speakeasy-default-ats-update-background-check-package:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_order_background_check_request:
    speakeasy-default-ats-order-background-check-request:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "application_status": {"value": "hired", "source_value": "Hired"}, "passthrough": {"other_known_names": "John Doe"}}, "job": null, "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "first_name": "Romain", "last_name": "Sestier", "emails": [{"type": "personal", "value": "sestier.romain123@gmail.com"}], "passthrough": {"other_known_names": "John Doe"}, "profile_url": "https://exmaple.com/candidate?id=xyz"}, "requester": {"user_id": "123456", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "first_name": "John", "last_name": "Doe", "email": "john.doe@gmail.com", "role": "Software Engineer"}, "results_update_url": "https://exmaple.com/integrations/results/update", "package": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills", "tests": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Test 1", "description": "Skills test to gauge a candidate's proficiency in job-specific skills"}]}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "test_url": "https://exmaple.com/integrations/candidate/test"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_update_background_check_result:
    speakeasy-default-ats-update-background-check-result:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}], "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_background_check_result:
    speakeasy-default-ats-get-background-check-result:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,candidate,score,start_date,submission_date,summary,result,result_url,attachments"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "candidate": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "profile_url": "https://exmaple.com/candidate?id=xyz"}, "score": {"label": "Percentage", "value": "80", "min": "0", "max": "100"}, "start_date": "2021-01-01T01:01:01.000Z", "submission_date": "2021-01-01T01:01:01.000Z", "summary": "Test is passed", "result": {"value": "passed", "source_value": "Passed"}, "result_url": "https://exmaple.com/result?id=xyz", "attachments": [{"url": "http://example.com/resume.pdf", "content_type": {"value": "text", "source_value": "Text"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_application_document_categories:
    speakeasy-default-ats-list-application-document-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_application_document_category:
    speakeasy-default-ats-get-application-document-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "1687-3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "1687-4", "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_contacts:
    speakeasy-default-crm-list-contacts:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,remote_deal_ids,account_ids,remote_account_ids,custom_fields,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_create_contact:
    speakeasy-default-crm-create-contact:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "account_ids": ["account-123", "account-456"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_contact:
    speakeasy-default-crm-get-contact:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,remote_deal_ids,account_ids,remote_account_ids,custom_fields,created_at,updated_at"
          include: "custom_fields"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_update_contact:
    speakeasy-default-crm-update-contact:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "account_ids": ["account-123", "account-456"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "first_name": "Steve", "last_name": "Wozniak", "company_name": "Apple Inc.", "emails": ["steve@apple.com"], "phone_numbers": ["123-456-7890"], "deal_ids": ["deal-001", "deal-002"], "remote_deal_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "account_ids": ["account-123", "account-456"], "remote_account_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "custom_fields": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Training Completion Status", "value": "Completed", "value_id": "value_456", "remote_value_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_accounts:
    speakeasy-default-crm-list-accounts:
      parameters:
        query:
          fields: "id,remote_id,owner_id,remote_owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "industries": ["Information Technology", "Airlines & Airports", "Personal Care & Household Products"], "addresses": null, "phone_numbers": ["+1123425334"], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_account:
    speakeasy-default-crm-get-account:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,owner_id,remote_owner_id,name,description,industries,annual_revenue,website,addresses,phone_numbers,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "industries": ["Information Technology", "Airlines & Airports", "Personal Care & Household Products"], "addresses": [{"country": {"value": "GB", "source_value": "GB"}, "location_type": {"value": "home", "source_value": "Home"}}], "phone_numbers": ["+1123425334"], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_lists:
    speakeasy-default-crm-list-lists:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_list:
    speakeasy-default-crm-get-list:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,items,type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "items": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "type": {"value": "contacts", "source_value": "Contacts"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_list_contact_custom_field_definitions:
    speakeasy-default-crm-list-contact-custom-field-definitions:
      parameters:
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  crm_get_contact_custom_field_definition:
    speakeasy-default-crm-get-contact-custom-field-definition:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,type,options"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {}, "options": [{"id": "option_1", "value": "Not Started"}, {"id": "option_2", "value": "In Progress"}, {"id": "option_3", "value": "Completed"}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_users:
    speakeasy-default-iam-list-users:
      parameters:
        query:
          fields: "id,remote_id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "roles,groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": null, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "status": {"value": "enabled"}, "last_active_at": "2021-01-01T01:01:01.000Z", "last_login_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "multi_factor_enabled": [{"value": "totp"}], "avatar": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_user:
    speakeasy-default-iam-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,first_name,last_name,name,primary_email_address,username,roles,groups,status,avatar,is_bot_user,last_active_at,last_login_at,created_at,updated_at,multi_factor_enabled"
          expand: "roles,groups"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "groups": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "status": {"value": "enabled"}, "last_active_at": "2021-01-01T01:01:01.000Z", "last_login_at": "2021-01-01T01:01:01.000Z", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "multi_factor_enabled": [{"value": "totp"}], "avatar": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "My Document", "path": "/path/to/file", "category": {}, "category_id": "6530", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-02T01:01:01.000Z", "remote_url": "https://example.com/file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_delete_user:
    speakeasy-default-iam-delete-user:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_update_user:
    speakeasy-default-iam-update-user:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"primary_email_address": "han@stackone.com", "first_name": "Han", "last_name": "Solo", "name": "Han Solo", "username": "hansolo1977", "is_bot_user": true, "status": {"value": "enabled"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_roles:
    speakeasy-default-iam-list-roles:
      parameters:
        query:
          fields: "id,remote_id,name,type,policies,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          expand: "policies"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_role:
    speakeasy-default-iam-get-role:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,policies,description,created_at,updated_at"
          expand: "policies"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_groups:
    speakeasy-default-iam-list-groups:
      parameters:
        query:
          fields: "id,remote_id,parent_id,remote_parent_id,name,description,roles,type,created_at,updated_at"
          filter: null
          expand: "roles"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": null, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_group:
    speakeasy-default-iam-get-group:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,parent_id,remote_parent_id,name,description,roles,type,created_at,updated_at"
          expand: "roles"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "team"}, "roles": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "admin"}, "policies": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "remote_parent_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_list_policies:
    speakeasy-default-iam-list-policies:
      parameters:
        query:
          fields: "id,remote_id,name,permissions,description,created_at,updated_at"
          filter: null
          expand: "permissions"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  iam_get_policy:
    speakeasy-default-iam-get-policy:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,permissions,description,created_at,updated_at"
          expand: "permissions"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Remote Contractor Policy", "permissions": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "read:users", "type": {"value": "read_write"}, "resources": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Company History Records", "location": "s3://bucket-name/folder-name", "type": {"value": "file"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_email_templates:
    speakeasy-default-marketing-list-email-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_email_template:
    speakeasy-default-marketing-create-email-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": null}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_email_template:
    speakeasy-default-marketing-get-email-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_email_template:
    speakeasy-default-marketing-update-email-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_in_app_templates:
    speakeasy-default-marketing-list-in-app-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_in_app_template:
    speakeasy-default-marketing-create-in-app-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_in_app_template:
    speakeasy-default-marketing-get-in-app-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_in_app_template:
    speakeasy-default-marketing-update-in-app-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_sms_templates:
    speakeasy-default-marketing-list-sms-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_sms_template:
    speakeasy-default-marketing-create-sms-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_sms_template:
    speakeasy-default-marketing-get-sms-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": null}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_sms_template:
    speakeasy-default-marketing-update-sms-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_omni_channel_templates:
    speakeasy-default-marketing-list-omni-channel-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_omni_channel_template:
    speakeasy-default-marketing-create-omni-channel-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_omni_channel_template:
    speakeasy-default-marketing-get-omni-channel-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_omni_channel_template:
    speakeasy-default-marketing-update-omni-channel-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_push_templates:
    speakeasy-default-marketing-list-push-templates:
      parameters:
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_push_template:
    speakeasy-default-marketing-create-push-template:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_push_template:
    speakeasy-default-marketing-get-push-template:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,messages,created_at,updated_at,tags"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z", "messages": null}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_push_template:
    speakeasy-default-marketing-update-push-template:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"messages": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "message_type": {"value": "email", "source_value": "Email"}}], "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_campaigns:
    speakeasy-default-marketing-list-campaigns:
      parameters:
        query:
          fields: "id,remote_id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_campaign:
    speakeasy-default-marketing-get-campaign:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z", "schedule_type": null, "status": {"value": "draft", "source_value": "Email"}, "channels": [{"value": "sms", "source_value": "SMS"}], "first_sent_at": "2021-01-01T01:01:01.000Z", "last_sent_at": "2021-01-01T01:01:01.000Z", "messages": [{"id": "message-id-1", "name": "SMS Message", "message_type": {"value": "sms"}, "message_content": {"body": "This is an example SMS body.", "from": "1-555-123-4567"}}, {"id": "message-id-2", "name": "Email Message", "message_type": {"value": "email"}, "message_content": {"subject": "Example Email Subject", "body": "<h1>This is an example</h1>\n            <p>email body</p>", "from": "Jane Smith", "reply-to": "reply@example.com", "preheader": "This is the preheader of the email."}}, {"id": "message-id-3", "name": "iOS Push Message", "message_type": {"value": "ios_push"}, "message_content": {"body": "This is an example push notification body."}}]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_list_content_blocks:
    speakeasy-default-marketing-list-content-blocks:
      parameters:
        query:
          fields: "id,remote_id,name,type,content,status,tags,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_create_content_block:
    speakeasy-default-marketing-create-content-block:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"type": {"value": "html", "source_value": "text"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_get_content_block:
    speakeasy-default-marketing-get-content-block:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,type,content,status,tags,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "html", "source_value": "text"}, "status": {"value": "live", "source_value": "active"}, "created_at": "2021-01-01T00:00:00.000Z", "updated_at": "2021-01-01T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  marketing_update_content_block:
    speakeasy-default-marketing-update-content-block:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"type": {"value": "html", "source_value": "text"}, "passthrough": {"other_known_names": "John Doe"}}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_courses:
    speakeasy-default-lms-list-courses:
      parameters:
        query:
          fields: "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider,localizations,authors"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "content_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_content_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This course acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "cover_url": "https://www.googledrive.com/?v=16873", "url": "https://www.linkedinlearning.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "provider": "Course Provider", "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_course:
    speakeasy-default-lms-get-course:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,content_ids,remote_content_ids,title,description,languages,cover_url,url,active,duration,categories,skills,updated_at,created_at,content,provider,localizations,authors"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "content_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_content_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This course acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "cover_url": "https://www.googledrive.com/?v=16873", "url": "https://www.linkedinlearning.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "provider": "Course Provider", "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_user_assignments:
    speakeasy-default-lms-list-user-assignments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,certificate_url,result,completed_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          user_id: "c28xyrc55866bvuv"
          remote_user_id: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_create_user_assignment:
    speakeasy-default-lms-create-user-assignment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "learning_object_external_reference": "learning-content-123", "progress": 40, "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": {"value": "in_progress"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user_assignment:
    speakeasy-default-lms-get-user-assignment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "progress": 40, "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": null, "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "certificate_url": "https://example.com/certificate/12345", "completed_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_batch_upsert_content:
    speakeasy-default-lms-batch-upsert-content:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": [{"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer: A comprehensive guide", "description": "This course acts as learning resource for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"id": "16873-IT345", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "language": {"value": "en_GB"}}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}]}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_content:
    speakeasy-default-lms-list-content:
      parameters:
        query:
          fields: "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider,localizations,tags,authors"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "course_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_course_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "provider": "Content Provider", "localizations": [{"title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_upsert_content:
    speakeasy-default-lms-upsert-content:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer: A comprehensive guide", "description": "This course acts as learning resource for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"id": "16873-IT345", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "language": {"value": "en_GB"}}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_content:
    speakeasy-default-lms-get-content:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,course_ids,remote_course_ids,title,description,additional_data,languages,content_url,mobile_launch_content_url,content_type,cover_url,active,duration,order,categories,skills,updated_at,created_at,provider,localizations,tags,authors"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "course_ids": ["16873-SOFTWARE-ENG-COURSE", "16874-SOFTWARE-ENG-COURSE"], "remote_course_ids": ["e3cb75bf-aa84-466e-a6c1-b8322b257a48", "e3cb75bf-aa84-466e-a6c1-b8322b257a49"], "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "categories": [{"id": "12345", "name": "Technology"}], "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "provider": "Content Provider", "localizations": [{"title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_update_content:
    speakeasy-default-lms-update-content:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "SOFTWARE-ENG-LV1-TRAINING-VIDEO-1", "title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers.", "languages": [{"value": "en_GB"}], "content_url": "https://www.youtube.com/watch?v=16873", "mobile_launch_content_url": "https://www.mobile.youtube.com/watch?v=16873", "cover_url": "https://www.googledrive.com/?v=16873", "active": true, "duration": "P3Y6M4DT12H30M5S", "skills": [{"id": "12345", "name": "Sales Techniques"}], "order": 1, "localizations": [{"title": "Software Engineer Lv 1", "description": "This course acts as learning resource for software engineers."}, {"title": "Software Engineer Lv 1", "description": "This video acts as learning content for software engineers."}], "tags": ["Sales Techniques", "Customer Service"], "authors": [{"id": "123", "name": "John Doe"}], "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "categories": [{"name": "Technology"}], "additional_data": [{"id": "learning_outcomes", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "value": "This is additional data"}]}
      responses:
        "201":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_user_completions:
    speakeasy-default-lms-list-user-completions:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,time_spent,certificate_url"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_create_user_completion:
    speakeasy-default-lms-create-user-completion:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"passthrough": {"other_known_names": "John Doe"}, "completed_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "learning_object_external_reference": "learning-content-123", "time_spent": "PT1H30M45S"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user_completion:
    speakeasy-default-lms-get-user-completion:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S", "certificate_url": "https://example.com/certificate/12345"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_delete_user_completion:
    speakeasy-default-lms-delete-user-completion:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"statusCode": 204, "message": "Record deleted successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_completions:
    speakeasy-default-lms-list-completions:
      parameters:
        query:
          fields: "id,remote_id,external_id,remote_external_id,external_reference,content_id,remote_content_id,course_id,remote_course_id,user_id,remote_user_id,completed_at,updated_at,created_at,result,content_external_reference,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,time_spent,certificate_url"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_completion:
    speakeasy-default-lms-get-completion:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "completed_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "updated_at": "2021-07-21T14:00:00.000Z", "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "time_spent": "PT1H30M45S", "certificate_url": "https://example.com/certificate/12345"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_category:
    speakeasy-default-lms-get-category:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,hierarchy,level,language"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_categories:
    speakeasy-default-lms-list-categories:
      parameters:
        query:
          fields: "id,remote_id,name,active,hierarchy,level,language"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_users:
    speakeasy-default-lms-list-users:
      parameters:
        query:
          fields: "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_user:
    speakeasy-default-lms-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,external_reference,active,email,phone_number,created_at,updated_at,name"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_skill:
    speakeasy-default-lms-get-skill:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,active,hierarchy,language"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_skills:
    speakeasy-default-lms-list-skills:
      parameters:
        query:
          fields: "id,remote_id,name,active,hierarchy,language"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "active": true, "language": {"value": "en_GB"}}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_list_assignments:
    speakeasy-default-lms-list-assignments:
      parameters:
        query:
          fields: "id,remote_id,external_reference,user_id,remote_user_id,course_id,remote_course_id,updated_at,created_at,due_date,status,progress,learning_object_type,learning_object_id,remote_learning_object_id,learning_object_external_reference,certificate_url,result,completed_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
          user_id: "c28xyrc55866bvuv"
          remote_user_id: "e3cb75bf-aa84-466e-a6c1-b8322b257a48"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  lms_get_assignment:
    speakeasy-default-lms-get-assignment:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "123456", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "learning_object_id": "e3gd34-23tr21-er234-345er56", "remote_learning_object_id": "e3cb55bf-aa84-466e-a6c1-b8302b257a49", "learning_object_external_reference": "learning-content-123", "progress": 40, "updated_at": "2021-07-21T14:00:00.000Z", "created_at": "2021-07-21T14:00:00.000Z", "due_date": "2021-07-21T14:00:00.000Z", "status": {"value": "in_progress"}, "user_id": "c28xyrc55866bvuv", "remote_user_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "certificate_url": "https://example.com/certificate/12345", "completed_at": "2021-07-21T14:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_tickets:
    speakeasy-default-ticketing-list-tickets:
      parameters:
        query:
          fields: "id,remote_id,type,ticket_number,title,creator_id,remote_creator_id,reporters,assignees,content,parent_id,remote_parent_id,closed_at,ticket_url,status,priority,tags,projects,components,organization,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "ticket_number": "ticket-001", "type": {"id": "001", "name": "Task"}, "closed_at": "2021-01-01T01:01:01.000Z", "ticket_url": "https://help.company.com/tickets/SUP-5689", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}, "organization": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "domain": "company.com", "name": "Company"}, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_create_ticket:
    speakeasy-default-ticketing-create-ticket:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "organization_id": "organization-001", "project_id": "project-001", "component_ids": "[\"component-001\",\"component-002\"]", "type": "ticket-type-001"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_ticket:
    speakeasy-default-ticketing-get-ticket:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,ticket_number,title,creator_id,remote_creator_id,reporters,assignees,content,parent_id,remote_parent_id,closed_at,ticket_url,status,priority,tags,projects,components,organization,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "creator_id": "user-001", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "projects": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "ticket_number": "ticket-001", "type": null, "closed_at": "2021-01-01T01:01:01.000Z", "ticket_url": "https://help.company.com/tickets/SUP-5689", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}, "organization": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "domain": "company.com", "name": "Company"}, "components": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_update_ticket:
    speakeasy-default-ticketing-update-ticket:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "title": "System outage in production environment", "reporters": ["user-001", "user-002"], "assignees": ["user-001", "user-002"], "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "parent_id": "ticket-002", "priority": {"id": "001", "value": "medium", "source_value": "Normal"}, "tags": ["tag-001", "tag-002"], "project_id": "project-001", "component_ids": "[\"component-001\",\"component-002\"]", "status": {"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_users:
    speakeasy-default-ticketing-list-users:
      parameters:
        query:
          fields: "id,remote_id,type,name,primary_email,primary_phone,username,active,first_name,last_name,customer_account_reference,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": null, "name": "John Doe", "primary_email": "john.doe@example.com", "primary_phone": "555-5555-5555", "username": "johndoe", "active": true, "first_name": "John", "last_name": "Doe", "customer_account_reference": "JohnDoe123", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_user:
    speakeasy-default-ticketing-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,type,name,primary_email,primary_phone,username,active,first_name,last_name,customer_account_reference,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "type": {"value": "agent", "source_value": "Live"}, "name": "John Doe", "primary_email": "john.doe@example.com", "primary_phone": "555-5555-5555", "username": "johndoe", "active": true, "first_name": "John", "last_name": "Doe", "customer_account_reference": "JohnDoe123", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_comments:
    speakeasy-default-ticketing-list-comments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,content,user_id,remote_user_id,internal,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "internal": false, "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_comment:
    speakeasy-default-ticketing-get-comment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,content,user_id,remote_user_id,internal,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "internal": false, "content": [{"plain": "This is some content", "html": "<p>This is some content</p>"}], "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_download_ticketing_attachment:
    speakeasy-default-ticketing-download-ticketing-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0xbefc65C716"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_attachments:
    speakeasy-default-ticketing-list-attachments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,user_id,remote_user_id,file_name,file_format,file_url,size,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "file_name": "file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "file_url": "https://example.com/files/screenshot.png", "size": 1024, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_attachment:
    speakeasy-default-ticketing-get-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,ticket_id,remote_ticket_id,user_id,remote_user_id,file_name,file_format,file_url,size,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "ticket_id": "ticket-001", "user_id": "user-001", "file_name": "file.pdf", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "file_url": "https://example.com/files/screenshot.png", "size": 1024, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_ticket_types:
    speakeasy-default-ticketing-list-ticket-types:
      parameters:
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "name": "Task"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_ticket_type:
    speakeasy-default-ticketing-get-ticket-type:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "001", "name": "Task", "project_id": "project-001"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_collections:
    speakeasy-default-ticketing-list-collections:
      parameters:
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,parent_id,remote_parent_id,key,name,description,type,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "parent_id": "collection-001", "name": "Project Falcon", "description": "Description of the project", "key": "project-falcon", "type": "project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_collection:
    speakeasy-default-ticketing-get-collection:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,parent_id,remote_parent_id,key,name,description,type,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "parent_id": "collection-001", "name": "Project Falcon", "description": "Description of the project", "key": "project-falcon", "type": "project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_collection_ticket_types:
    speakeasy-default-ticketing-list-collection-ticket-types:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,parent_collection_id,remote_parent_collection_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "name": "Task", "parent_collection_id": "collection-001"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_ticket_statuses:
    speakeasy-default-ticketing-list-ticket-statuses:
      parameters:
        path:
          id: "<id>"
        query:
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "type": {"value": "to-do", "source_value": "New"}, "name": "Backlog"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_download_file:
    speakeasy-default-documents-download-file:
      parameters:
        path:
          id: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0x528fac6dda"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_upload_file:
    speakeasy-default-documents-upload-file:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"name": "weather-forecast", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "content": "VGhpcyBpc24ndCByZWFsbHkgYSBzYW1wbGUgZmlsZSwgYnV0IG5vIG9uZSB3aWxsIGV2ZXIga25vdyE", "category_id": "6530", "path": "/path/to/file", "category": {"value": "reports, resumes", "source_value": "550e8400-e29b-41d4-a716-446655440000, CUSTOM_CATEGORY_NAME"}, "confidential": {"value": "true", "source_value": "public"}}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Employee created successfully", "timestamp": "2021-01-01T01:01:01.000Z", "provider_errors": [{"status": 400, "url": "https://api.someprovider.com/v1/endpoint", "raw": {}, "headers": {}}], "unified_warnings": [{"message": "The provided field type is not supported in the current model."}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_files:
    speakeasy-default-documents-list-files:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,size,file_format,path,owner_id,remote_owner_id,folder_id,remote_folder_id,drive_id,remote_drive_id,export_formats,default_download_format,created_at,updated_at,has_content,has_children,all_parent_folder_ids,remote_all_parent_folder_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "name": "john_doe_resume.pdf", "content": "FAQ of the project", "created_after": "2020-01-01T00:00:00.000Z", "drive_id": "1234567890", "folder_id": "1234567890"}
          folder_id: "1234567890"
          nested_items: "true"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": []}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_file:
    speakeasy-default-documents-get-file:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,size,file_format,path,owner_id,remote_owner_id,folder_id,remote_folder_id,drive_id,remote_drive_id,export_formats,default_download_format,created_at,updated_at,has_content,has_children,all_parent_folder_ids,remote_all_parent_folder_ids"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the file.", "size": 1024, "url": "https://drive.google.com/file/d/nd8932h9d/view", "file_format": {"value": "pdf", "source_value": "application/pdf"}, "path": "/path/to/file", "owner_id": "c28xyrc55866bvuv", "export_formats": ["application/pdf"], "default_download_format": "application/pdf", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "folder_id": "c28xyrc55866bvuv", "remote_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "all_parent_folder_ids": ["0123456789"]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_folders:
    speakeasy-default-documents-list-folders:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,size,path,owner_id,remote_owner_id,parent_folder_id,remote_parent_folder_id,drive_id,remote_drive_id,created_at,updated_at,has_content,has_children,is_root,all_parent_folder_ids,remote_all_parent_folder_ids"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z", "drive_id": "1234567890", "folder_id": "1234567890"}
          folder_id: "1234567890"
          nested_items: "true"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the folder.", "size": 1024, "url": "https://drive.google.com/folder/d/nd8932h9d/view", "path": "/path/to/folder", "owner_id": "c28xyrc55866bvuv", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "parent_folder_id": "c28xyrc55866bvuv", "remote_parent_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "is_root": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_folder:
    speakeasy-default-documents-get-folder:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,size,path,owner_id,remote_owner_id,parent_folder_id,remote_parent_folder_id,drive_id,remote_drive_id,created_at,updated_at,has_content,has_children,is_root,all_parent_folder_ids,remote_all_parent_folder_ids"
          include: "all_parent_folder_ids"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Information-Technology", "description": "This is the description associated to the folder.", "size": 1024, "url": "https://drive.google.com/folder/d/nd8932h9d/view", "path": "/path/to/folder", "owner_id": "c28xyrc55866bvuv", "remote_owner_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "parent_folder_id": "c28xyrc55866bvuv", "remote_parent_folder_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "drive_id": "c28xyrc55866bvuv", "remote_drive_id": "e3cb75bf-aa84-466e-a6c1-b8322b257a48", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z", "has_content": true, "has_children": true, "is_root": true, "all_parent_folder_ids": ["0123456789"]}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_list_drives:
    speakeasy-default-documents-list-drives:
      parameters:
        query:
          fields: "id,remote_id,name,description,url,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "USA Development Drive", "description": "Drive with USA Development documents", "url": "https://test.sharepoint.com/Document%20Library", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  documents_get_drive:
    speakeasy-default-documents-get-drive:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,description,url,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "16873-IT345", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "USA Development Drive", "description": "Drive with USA Development documents", "url": "https://test.sharepoint.com/Document%20Library", "created_at": "2023-02-23T00:00:00.000Z", "updated_at": "2024-02-23T00:00:00.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  stackone_list_platform_logs:
    speakeasy-default-stackone-list-platform-logs:
      parameters:
        query:
          order_by: "duration"
          order_direction: "asc"
          filter: {"account_ids": "45355976281015164504,45355976281015164505", "start_date": "2020-01-01T00:00:00.000Z", "end_date": "2020-01-01T00:00:00.000Z", "request_ids": "adbf752f-6457-4ddd-89b3-98ae2252b83b,adbf752f-6457-4ddd-89b3-98ae2252b83c", "source_types": "DASHBOARD,SYNTHETIC_WEBHOOK", "http_methods": "GET,POST", "categories": "hris,ats", "resources": "employees,users", "actions": "download,upload", "status_codes": "200,400", "success": true, "order_by": "eventDatetime", "order_direction": "asc"}
      responses:
        "200":
          application/json: {"data": [{"request_id": "adbf752f-6457-4ddd-89b3-98ae2252b83b", "event_datetime": "2021-01-01T00:00:00Z", "start_time": "2021-01-01T00:00:00Z", "end_time": "2021-01-01T00:00:00Z", "account_id": "45355976281015164504", "project_id": "dev-project-68574", "http_method": "get", "path": "/unified/hris/employees", "url": "https://api.stackone.com/unified/hris/employees?raw=false", "status": 200, "duration": 356, "success": true, "resource": "employees", "child_resource": "time-off", "sub_resource": "documents", "action": "download", "source_type": "DASHBOARD", "source_value": "ACCOUNT_TESTER", "source_id": "1234567890", "source_ip": "192.168.1.1", "category": "hris"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_projects:
    speakeasy-default-ticketing-list-projects:
      parameters:
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,name,description,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_project:
    speakeasy-default-ticketing-get-project:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,name,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Project Falcon", "description": "Description of the project", "organization_id": "organization-001", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_project_components:
    speakeasy-default-ticketing-list-project-components:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,project_id,remote_project_id,name,description,created_at,updated_at"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_get_project_component:
    speakeasy-default-ticketing-get-project-component:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,organization_id,remote_organization_id,project_id,remote_project_id,name,description,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "organization_id": "organization-001", "project_id": "project-001", "name": "Component Falcon", "description": "Description of the component", "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ticketing_list_project_ticket_types:
    speakeasy-default-ticketing-list-project-ticket-types:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,project_id,remote_project_id"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "001", "name": "Task", "project_id": "project-001"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  hris_update_employee_task:
    speakeasy-default-hris-update-employee-task:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"comment": "All required documents have been submitted", "status": {"value": "open"}}
      responses:
        "200":
          application/json: {"statusCode": 200, "message": "Record updated successfully.", "timestamp": "2021-01-01T01:01:01.000Z"}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_list_job_application_stages:
    speakeasy-default-ats-list-job-application-stages:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Review", "order": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  ats_get_job_application_stage:
    speakeasy-default-ats-get-job-application-stage:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,name,order,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "name": "Review", "order": 1, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_conversations:
    speakeasy-default-messaging-list-conversations:
      parameters:
        query:
          fields: "id,remote_id,participants,name,private,created_at,last_message_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true, "created_at": "2024-03-20T10:00:00Z", "last_message_at": "2024-03-20T11:30:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_create_conversation:
    speakeasy-default-messaging-create-conversation:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_conversation:
    speakeasy-default-messaging-get-conversation:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,participants,name,private,created_at,last_message_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "participants": ["c28xIQ1", "c28xIQ2"], "name": "Project Discussion", "private": true, "created_at": "2024-03-20T10:00:00Z", "last_message_at": "2024-03-20T11:30:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_download_messaging_attachment:
    speakeasy-default-messaging-download-messaging-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          format: "base64"
          export_format: "text/plain"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          '*/*': "0xEbaCd8aC6D"
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": null, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_attachments:
    speakeasy-default-messaging-list-attachments:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,file_name,file_size,file_type"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "file_name": "document.pdf", "file_size": 1024, "file_type": "application/pdf"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_attachment:
    speakeasy-default-messaging-get-attachment:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,file_name,file_size,file_type"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "file_name": "document.pdf", "file_size": 1024, "file_type": "application/pdf"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_users:
    speakeasy-default-messaging-list-users:
      parameters:
        query:
          fields: "id,remote_id,email,username,name,first_name,last_name,bot,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "email": "john.doe@example.com", "username": "johndoe", "name": "John Doe", "first_name": "John", "last_name": "Doe", "bot": false, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_user:
    speakeasy-default-messaging-get-user:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,email,username,name,first_name,last_name,bot,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "email": "john.doe@example.com", "username": "johndoe", "name": "John Doe", "first_name": "John", "last_name": "Doe", "bot": false, "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_list_conversation_messages:
    speakeasy-default-messaging-list-conversation-messages:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,parent_message_id,remote_parent_message_id,attachments,author,created_at,updated_at"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "content": {"html": "<p>Hello world</p>", "plain": "Hello world"}, "parent_message_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "author": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "unified_custom_fields": {"my_project_custom_field_1": "REF-1236", "my_project_custom_field_2": "some other value"}, "external_reference": "al60043", "name": "John Dew", "email": "john@dew.com", "phone_number": "+1234567890", "active": true, "created_at": "2021-01-01T01:01:01.000Z", "updated_at": "2021-01-01T01:01:01.000Z"}, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_get_message:
    speakeasy-default-messaging-get-message:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,content,parent_message_id,remote_parent_message_id,attachments,author,created_at,updated_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "content": {"html": "<p>Hello world</p>", "plain": "Hello world"}, "parent_message_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "author": null, "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  messaging_send_message:
    speakeasy-default-messaging-send-message:
      parameters:
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"content": "Hello, world!", "recipient": "c28xyrc55866bvuv", "sender": "+34820398402"}
      responses:
        "201":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_companies:
    speakeasy-default-accounting-list-companies:
      parameters:
        query:
          fields: "id,remote_id,name,base_currency,fiscal_year_start_month,fiscal_year_start_day"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "name": "Acme Corp", "base_currency": {"value": "USD", "source_value": "USD"}, "fiscal_year_start_month": 1, "fiscal_year_start_day": 1}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": null}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company:
    speakeasy-default-accounting-get-company:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,name,base_currency,fiscal_year_start_month,fiscal_year_start_day"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_accounts:
    speakeasy-default-accounting-list-company-accounts:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,code,name,type,active"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "code": "4000", "name": "Cash", "type": {"value": "asset", "source_value": "asset"}, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_account:
    speakeasy-default-accounting-get-company-account:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,code,name,type,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": null}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_tax_rates:
    speakeasy-default-accounting-list-company-tax-rates:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,name,code,rate,active"
          filter: {"updated_after": "2020-01-01T00:00:00.000Z"}
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "name": "VAT 7.5%", "code": "TAX001", "percentage": 7.5, "active": true}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_tax_rate:
    speakeasy-default-accounting-get-company-tax-rate:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,name,code,rate,active"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "company_123", "name": "VAT 7.5%", "code": "TAX001", "percentage": 7.5, "active": true}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_batch_create_company_journals:
    speakeasy-default-accounting-batch-create-company-journals:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"items": []}
      responses:
        "202":
          application/json: {"statusCode": 202, "message": "Batch operation accepted", "timestamp": "2021-01-01T01:01:01.000Z", "errors": [["Missing field: name"], [], []]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_list_company_journals:
    speakeasy-default-accounting-list-company-journals:
      parameters:
        path:
          id: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,reference,memo,transaction_date,status,lines,created_at,updated_at,posted_at"
          filter: null
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": [{"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "comp_123456789", "reference": "JRN-2024-001", "memo": "Monthly closing entries", "transaction_date": "2024-03-20T10:00:00Z", "status": {"value": "draft", "source_value": "draft"}, "lines": [{"id": "line_1", "account_id": "acc_123", "description": "Payment for office supplies", "amount": 10010, "tax_amount": 2002}], "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z", "posted_at": "2024-03-20T10:00:00Z"}]}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_create_company_journal:
    speakeasy-default-accounting-create-company-journal:
      parameters:
        path:
          id: "<id>"
        header:
          x-account-id: "<id>"
      requestBody:
        application/json: {"reference": "JRN-2024-001", "memo": "Monthly closing entries", "currency_code": {"value": "USD", "source_value": "USD"}, "exchange_rate": 1, "transaction_date": "2024-03-20T10:00:00Z", "lines": [{"account_id": "acc_123456789", "description": "Payment for office supplies", "amount": 10010, "tax_rate_id": "tax_123456789", "tax_amount": 10010}]}
      responses:
        "200":
          application/json: {"statusCode": 201, "message": "Record created successfully.", "timestamp": "2021-01-01T01:01:01.000Z", "data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
  accounting_get_company_journal:
    speakeasy-default-accounting-get-company-journal:
      parameters:
        path:
          id: "<id>"
          subResourceId: "<id>"
        query:
          fields: "id,remote_id,company_id,remote_company_id,reference,memo,transaction_date,status,lines,created_at,updated_at,posted_at"
        header:
          x-account-id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "remote_id": "8187e5da-dc77-475e-9949-af0f1fa4e4e3", "company_id": "comp_123456789", "reference": "JRN-2024-001", "memo": "Monthly closing entries", "transaction_date": "2024-03-20T10:00:00Z", "status": {"value": "draft", "source_value": "draft"}, "lines": [{"id": "line_1", "account_id": "acc_123", "description": "Payment for office supplies", "amount": 10010, "tax_amount": 2002}], "created_at": "2024-03-20T10:00:00Z", "updated_at": "2024-03-20T10:00:00Z", "posted_at": "2024-03-20T10:00:00Z"}}
        "400":
          application/json: {"statusCode": 400, "message": "Bad Request", "timestamp": "2023-05-30T00:00:00.000Z", "data": {"statusCode": 400, "message": "Bad Request", "headers": {}}, "provider_errors": [{"status": 400, "url": "https://api.provider.com/v1/resource", "raw": {}, "headers": {}}]}
        "401":
          application/json: {"statusCode": 401, "message": "Unauthorized", "timestamp": "2023-05-30T00:00:00.000Z"}
        "403":
          application/json: {"statusCode": 403, "message": "Forbidden resource", "timestamp": "2023-05-30T00:00:00.000Z"}
        "404":
          application/json: {"statusCode": 404, "message": "Not Found", "timestamp": "2023-05-30T00:00:00.000Z"}
        "408":
          application/json: {"statusCode": 408, "message": "Request timed out", "timestamp": "2023-05-30T00:00:00.000Z"}
        "409":
          application/json: {"statusCode": 409, "message": "Conflict", "timestamp": "2023-05-30T00:00:00.000Z"}
        "412":
          application/json: {"statusCode": 412, "message": "Precondition failed", "timestamp": "2023-05-30T00:00:00.000Z"}
        "422":
          application/json: {"statusCode": 422, "message": "Unprocessable Entity", "timestamp": "2023-05-30T00:00:00.000Z"}
        "429":
          application/json: {"statusCode": 429, "message": "Too many requests", "timestamp": "2023-05-30T00:00:00.000Z"}
        "500":
          application/json: {"statusCode": 500, "message": "Internal server error", "timestamp": "2023-05-30T00:00:00.000Z"}
        "501":
          application/json: {"statusCode": 501, "message": "Not Implemented", "timestamp": "2023-05-30T00:00:00.000Z"}
        "502":
          application/json: {"statusCode": 502, "message": "Bad Gateway", "timestamp": "2023-05-30T00:00:00.000Z"}
examplesVersion: 1.0.2
releaseNotes: "## SDK Changes Detected:\n* `StackOneHq.client.Ats.CustomFieldDefinitions.ListCandidates()`:  `response.data.[].Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.Jobs.Get()`:  `response.data` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Crm.CustomFieldDefinitions.Contacts.Get()`:  `response.data.Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Crm.CustomFieldDefinitions.Contacts.List()`:  `response.data.[].Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.CustomFieldDefinitions.GetJob()`:  `response.data.Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.Candidates.CustomFieldDefinitions.Get()`:  `response.data.Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.Applications.GetCustomFieldDefinition()`:  `response.data.Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.Applications.ListCustomFieldDefinitions()`:  `response.data.[].Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.Applications.Create()`:  `request.atsCreateApplicationRequestDto` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.UpdateBackgroundCheckResult()`: \n  *  `request.atsUpdateBackgroundCheckResultRequestDto.Id` **Removed** **Breaking** :warning:\n* `StackOneHq.client.Ats.AssessmentsUpdateResult()`: \n  *  `request.atsUpdateCandidatesAssessmentsResultsRequestDto.Id` **Removed** **Breaking** :warning:\n* `StackOneHq.client.Ats.ListJobCustomFieldDefinitions()`:  `response.data.[].Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Ats.DocumentsUpload()`:  `request` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.GetTask()`:  `response.data` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.Jobs.List()`:  `response.data.[]` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.Employees.ListCustomFieldDefinitions()`:  `response.data.[].Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.GetEmployeeTask()`:  `response.data` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Hris.GetEmployeeCustomFieldDefinition()`:  `response.data.Options.[].Value` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Proxy.Perform()`:  `response` **Changed** **Breaking** :warning:\n* `StackOneHq.client.Accounting.BatchCreateCompanyJournals()`: **Added**\n* `StackOneHq.client.Messaging.GetUser()`: **Added**\n* `StackOneHq.client.Accounting.ListCompanyJournals()`: **Added**\n* `StackOneHq.client.Accounting.CreateCompanyJournal()`: **Added**\n* `StackOneHq.client.Accounting.GetCompanyJournal()`: **Added**\n* `StackOneHq.client.Ats.Assessments.GetResults()`: **Deleted** **Breaking** :warning:\n* `StackOneHq.client.Ats.BackgroundChecks.GetResults()`: **Deleted** **Breaking** :warning:\n* `StackOneHq.client.Accounts.List()`: \n  *  `request.OriginOwnerIds` **Added**\n* `StackOneHq.client.Accounting.ListCompanyTaxRates()`: **Added**\n* `StackOneHq.client.Accounting.GetCompanyAccount()`: **Added**\n* `StackOneHq.client.Hris.GetEmployee()`:  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Accounting.ListCompanyAccounts()`: **Added**\n* `StackOneHq.client.Ats.ListApplications()`:  `response.data.[].CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Accounting.GetCompany()`: **Added**\n* `StackOneHq.client.Hris.Employees.List()`:  `response.data.[].CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Hris.Employees.Create()`: \n  *  `request.hrisCreateEmployeeRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Hris.Employees.Update()`: \n  *  `request.hrisUpdateEmployeeRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Hris.Employees.Documents.Download()`:  `response.status[200]` **Changed**\n* `StackOneHq.client.Accounting.ListCompanies()`: **Added**\n* `StackOneHq.client.Ats.ListJobApplicationStages()`: **Added**\n* `StackOneHq.client.Messaging.SendMessage()`: **Added**\n* `StackOneHq.client.Ats.ListJobs()`:  `response.data.[]` **Changed**\n* `StackOneHq.client.Messaging.GetMessage()`: **Added**\n* `StackOneHq.client.Ats.ListCandidates()`:  `response.data.[].CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Ats.UpdateCandidate()`: \n  *  `request.atsUpdateCandidateRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Messaging.ListConversationMessages()`: **Added**\n* `StackOneHq.client.Ats.Get()`:  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Ats.CreateJob()`: \n  *  `request.atsCreateJobRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Ats.UpdateJob()`: \n  *  `request.atsUpdateJobRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Accounting.GetCompanyTaxRate()`: **Added**\n* `StackOneHq.client.Messaging.ListUsers()`: **Added**\n* `StackOneHq.client.Messaging.GetAttachment()`: **Added**\n* `StackOneHq.client.Ats.Applications.Update()`: \n  *  `request.atsUpdateApplicationRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Ats.Applications.DownloadDocument()`:  `response.status[200]` **Changed**\n* `StackOneHq.client.Messaging.ListAttachments()`: **Added**\n* `StackOneHq.client.Messaging.DownloadMessagingAttachment()`: **Added**\n* `StackOneHq.client.Ats.Candidates.Create()`: \n  *  `request.atsCreateCandidateRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Ats.Candidates.Get()`:  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Messaging.GetConversation()`: **Added**\n* `StackOneHq.client.Hris.Employees.Tasks.Complete()`: **Added**\n* `StackOneHq.client.Messaging.CreateConversation()`: **Added**\n* `StackOneHq.client.Ats.Jobs.Get()`:  `response.data` **Changed**\n* `StackOneHq.client.Crm.GetContact()`:  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Crm.UpdateContact()`: \n  *  `request.crmCreateContactRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n  *  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Crm.Contacts.List()`:  `response.data.[].CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Crm.Contacts.Create()`: \n  *  `request.crmCreateContactRequestDto.CustomFields.[].Value.[date-Time]` **Added**\n  *  `response.data.CustomFields.[].Value.[date-Time]` **Added**\n* `StackOneHq.client.Messaging.ListConversations()`: **Added**\n* `StackOneHq.client.Ats.GetJobApplicationStage()`: **Added**\n* `StackOneHq.client.Courses.List()`: \n  *  `request.Filter` **Changed**\n  *  `response.total` **Added**\n* `StackOneHq.client.Lms.ListUserAssignments()`:  `response.data.[]` **Changed**\n* `StackOneHq.client.Lms.ListContent()`: \n  *  `request.Filter` **Changed**\n  *  `response.total` **Added**\n* `StackOneHq.client.Lms.GetUserCompletion()`:  `response.data.CertificateUrl` **Added**\n* `StackOneHq.client.Lms.Assignments.List()`:  `response.data.[]` **Changed**\n* `StackOneHq.client.Lms.Assignments.Get()`:  `response.data` **Changed**\n* `StackOneHq.client.Lms.UsersAssignments.Get()`:  `response.data` **Changed**\n* `StackOneHq.client.Lms.Users.ListCompletions()`:  `response.data.[].CertificateUrl` **Added**\n* `StackOneHq.client.Lms.Completions.List()`:  `response.data.[].CertificateUrl` **Added**\n* `StackOneHq.client.Lms.Completions.Get()`:  `response.data.CertificateUrl` **Added**\n"
