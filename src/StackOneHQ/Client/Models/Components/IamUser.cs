//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Models.Components;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Generic;
    
    public class IamUser
    {

        /// <summary>
        /// Unique identifier
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; } = null;

        /// <summary>
        /// Provider&apos;s unique identifier
        /// </summary>
        [JsonProperty("remote_id")]
        public string? RemoteId { get; set; } = null;

        /// <summary>
        /// Custom Unified Fields configured in your StackOne project
        /// </summary>
        [JsonProperty("unified_custom_fields")]
        public Dictionary<string, object>? UnifiedCustomFields { get; set; } = null;

        /// <summary>
        /// Primary email address of the user. This is generally a work email address.
        /// </summary>
        [JsonProperty("primary_email_address")]
        public string? PrimaryEmailAddress { get; set; } = null;

        [JsonProperty("first_name")]
        public string? FirstName { get; set; } = null;

        [JsonProperty("last_name")]
        public string? LastName { get; set; } = null;

        /// <summary>
        /// User&apos;s name which (can be a full name or display name)
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        [JsonProperty("username")]
        public string? Username { get; set; } = null;

        /// <summary>
        /// Indicates if the user is a bot or service user
        /// </summary>
        [JsonProperty("is_bot_user")]
        public IamUserIsBotUserUnion? IsBotUser { get; set; } = null;

        /// <summary>
        /// List of roles the user is assigned to
        /// </summary>
        [JsonProperty("roles")]
        public List<IamRole>? Roles { get; set; } = null;

        /// <summary>
        /// List of groups the user is assigned to
        /// </summary>
        [JsonProperty("groups")]
        public List<IamGroup>? Groups { get; set; } = null;

        [JsonProperty("status")]
        public IamUserStatus? Status { get; set; } = null;

        /// <summary>
        /// The date this user was last active
        /// </summary>
        [JsonProperty("last_active_at")]
        public DateTime? LastActiveAt { get; set; } = null;

        /// <summary>
        /// The date this user last logged in
        /// </summary>
        [JsonProperty("last_login_at")]
        public DateTime? LastLoginAt { get; set; } = null;

        /// <summary>
        /// The date the user was created
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The date the user was created
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// The list of Multi-Factor Authentication (MFA) types enabled for the user.
        /// </summary>
        [JsonProperty("multi_factor_enabled")]
        public List<IamMfaTypeEnum>? MultiFactorEnabled { get; set; } = null;

        /// <summary>
        /// The user&apos;s avatar data. This generally contains a URL within this property&apos;s &apos;contents&apos; array.
        /// </summary>
        [JsonProperty("avatar")]
        public IamUserAvatar? Avatar { get; set; } = null;
    }
}