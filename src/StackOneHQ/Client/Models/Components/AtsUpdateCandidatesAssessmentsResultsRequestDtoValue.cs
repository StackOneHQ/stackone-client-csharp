//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The result of the test.
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class AtsUpdateCandidatesAssessmentsResultsRequestDtoValue : IEquatable<AtsUpdateCandidatesAssessmentsResultsRequestDtoValue>
    {
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Initiated = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("initiated");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue InProgress = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("in_progress");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Cancelled = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("cancelled");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Completed = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("completed");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Expired = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("expired");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Failed = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("failed");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Passed = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("passed");
        public static readonly AtsUpdateCandidatesAssessmentsResultsRequestDtoValue UnmappedValue = new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue("unmapped_value");

        private static readonly Dictionary <string, AtsUpdateCandidatesAssessmentsResultsRequestDtoValue> _knownValues =
            new Dictionary <string, AtsUpdateCandidatesAssessmentsResultsRequestDtoValue> ()
            {
                ["initiated"] = Initiated,
                ["in_progress"] = InProgress,
                ["cancelled"] = Cancelled,
                ["completed"] = Completed,
                ["expired"] = Expired,
                ["failed"] = Failed,
                ["passed"] = Passed,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, AtsUpdateCandidatesAssessmentsResultsRequestDtoValue> _values =
            new ConcurrentDictionary<string, AtsUpdateCandidatesAssessmentsResultsRequestDtoValue>(_knownValues);

        private AtsUpdateCandidatesAssessmentsResultsRequestDtoValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static AtsUpdateCandidatesAssessmentsResultsRequestDtoValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new AtsUpdateCandidatesAssessmentsResultsRequestDtoValue(value));
        }

        public static implicit operator AtsUpdateCandidatesAssessmentsResultsRequestDtoValue(string value) => Of(value);
        public static implicit operator string(AtsUpdateCandidatesAssessmentsResultsRequestDtoValue atsupdatecandidatesassessmentsresultsrequestdtovalue) => atsupdatecandidatesassessmentsresultsrequestdtovalue.Value;

        public static AtsUpdateCandidatesAssessmentsResultsRequestDtoValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as AtsUpdateCandidatesAssessmentsResultsRequestDtoValue);

        public bool Equals(AtsUpdateCandidatesAssessmentsResultsRequestDtoValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}