//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    [JsonConverter(typeof(OpenEnumConverter))]
    public class HrisUpdateEmployeeRequestDtoEthnicityValue : IEquatable<HrisUpdateEmployeeRequestDtoEthnicityValue>
    {
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue White = new HrisUpdateEmployeeRequestDtoEthnicityValue("white");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue BlackOrAfricanAmerican = new HrisUpdateEmployeeRequestDtoEthnicityValue("black_or_african_american");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue Asian = new HrisUpdateEmployeeRequestDtoEthnicityValue("asian");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue HispanicOrLatino = new HrisUpdateEmployeeRequestDtoEthnicityValue("hispanic_or_latino");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue AmericanIndianOrAlaskaNative = new HrisUpdateEmployeeRequestDtoEthnicityValue("american_indian_or_alaska_native");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue NativeHawaiianOrPacificIslander = new HrisUpdateEmployeeRequestDtoEthnicityValue("native_hawaiian_or_pacific_islander");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue TwoOrMoreRaces = new HrisUpdateEmployeeRequestDtoEthnicityValue("two_or_more_races");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue NotDisclosed = new HrisUpdateEmployeeRequestDtoEthnicityValue("not_disclosed");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue Other = new HrisUpdateEmployeeRequestDtoEthnicityValue("other");
        public static readonly HrisUpdateEmployeeRequestDtoEthnicityValue UnmappedValue = new HrisUpdateEmployeeRequestDtoEthnicityValue("unmapped_value");

        private static readonly Dictionary <string, HrisUpdateEmployeeRequestDtoEthnicityValue> _knownValues =
            new Dictionary <string, HrisUpdateEmployeeRequestDtoEthnicityValue> ()
            {
                ["white"] = White,
                ["black_or_african_american"] = BlackOrAfricanAmerican,
                ["asian"] = Asian,
                ["hispanic_or_latino"] = HispanicOrLatino,
                ["american_indian_or_alaska_native"] = AmericanIndianOrAlaskaNative,
                ["native_hawaiian_or_pacific_islander"] = NativeHawaiianOrPacificIslander,
                ["two_or_more_races"] = TwoOrMoreRaces,
                ["not_disclosed"] = NotDisclosed,
                ["other"] = Other,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, HrisUpdateEmployeeRequestDtoEthnicityValue> _values =
            new ConcurrentDictionary<string, HrisUpdateEmployeeRequestDtoEthnicityValue>(_knownValues);

        private HrisUpdateEmployeeRequestDtoEthnicityValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static HrisUpdateEmployeeRequestDtoEthnicityValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new HrisUpdateEmployeeRequestDtoEthnicityValue(value));
        }

        public static implicit operator HrisUpdateEmployeeRequestDtoEthnicityValue(string value) => Of(value);
        public static implicit operator string(HrisUpdateEmployeeRequestDtoEthnicityValue hrisupdateemployeerequestdtoethnicityvalue) => hrisupdateemployeerequestdtoethnicityvalue.Value;

        public static HrisUpdateEmployeeRequestDtoEthnicityValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as HrisUpdateEmployeeRequestDtoEthnicityValue);

        public bool Equals(HrisUpdateEmployeeRequestDtoEthnicityValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}