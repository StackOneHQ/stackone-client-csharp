//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The unified message type.
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class SmsMessagesValue : IEquatable<SmsMessagesValue>
    {
        public static readonly SmsMessagesValue Email = new SmsMessagesValue("email");
        public static readonly SmsMessagesValue Sms = new SmsMessagesValue("sms");
        public static readonly SmsMessagesValue Push = new SmsMessagesValue("push");
        public static readonly SmsMessagesValue WebPush = new SmsMessagesValue("web_push");
        public static readonly SmsMessagesValue IosPush = new SmsMessagesValue("ios_push");
        public static readonly SmsMessagesValue AndroidPush = new SmsMessagesValue("android_push");
        public static readonly SmsMessagesValue AppPush = new SmsMessagesValue("app_push");
        public static readonly SmsMessagesValue OmniChannel = new SmsMessagesValue("omni_channel");
        public static readonly SmsMessagesValue ContentBlock = new SmsMessagesValue("content_block");
        public static readonly SmsMessagesValue InApp = new SmsMessagesValue("in_app");
        public static readonly SmsMessagesValue Unknown = new SmsMessagesValue("unknown");
        public static readonly SmsMessagesValue UnmappedValue = new SmsMessagesValue("unmapped_value");

        private static readonly Dictionary <string, SmsMessagesValue> _knownValues =
            new Dictionary <string, SmsMessagesValue> ()
            {
                ["email"] = Email,
                ["sms"] = Sms,
                ["push"] = Push,
                ["web_push"] = WebPush,
                ["ios_push"] = IosPush,
                ["android_push"] = AndroidPush,
                ["app_push"] = AppPush,
                ["omni_channel"] = OmniChannel,
                ["content_block"] = ContentBlock,
                ["in_app"] = InApp,
                ["unknown"] = Unknown,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, SmsMessagesValue> _values =
            new ConcurrentDictionary<string, SmsMessagesValue>(_knownValues);

        private SmsMessagesValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static SmsMessagesValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new SmsMessagesValue(value));
        }

        public static implicit operator SmsMessagesValue(string value) => Of(value);
        public static implicit operator string(SmsMessagesValue smsmessagesvalue) => smsmessagesvalue.Value;

        public static SmsMessagesValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as SmsMessagesValue);

        public bool Equals(SmsMessagesValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}