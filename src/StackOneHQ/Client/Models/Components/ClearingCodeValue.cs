//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;
    
    /// <summary>
    /// The type of clearing code
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class ClearingCodeValue : IEquatable<ClearingCodeValue>
    {
        public static readonly ClearingCodeValue SortCode = new ClearingCodeValue("sort_code");
        public static readonly ClearingCodeValue BuildingSocietyReference = new ClearingCodeValue("building_society_reference");
        public static readonly ClearingCodeValue AbaRouting = new ClearingCodeValue("aba_routing");
        public static readonly ClearingCodeValue ChipsParticipantId = new ClearingCodeValue("chips_participant_id");
        public static readonly ClearingCodeValue TransitNumber = new ClearingCodeValue("transit_number");
        public static readonly ClearingCodeValue InstitutionNumber = new ClearingCodeValue("institution_number");
        public static readonly ClearingCodeValue BsbCode = new ClearingCodeValue("bsb_code");
        public static readonly ClearingCodeValue IfscCode = new ClearingCodeValue("ifsc_code");
        public static readonly ClearingCodeValue MicrCode = new ClearingCodeValue("micr_code");
        public static readonly ClearingCodeValue Clabe = new ClearingCodeValue("clabe");
        public static readonly ClearingCodeValue CnapsCode = new ClearingCodeValue("cnaps_code");
        public static readonly ClearingCodeValue ChBankClearingCode = new ClearingCodeValue("ch_bank_clearing_code");
        public static readonly ClearingCodeValue ChSicCode = new ClearingCodeValue("ch_sic_code");
        public static readonly ClearingCodeValue ZenginCode = new ClearingCodeValue("zengin_code");
        public static readonly ClearingCodeValue NzClearingCode = new ClearingCodeValue("nz_clearing_code");
        public static readonly ClearingCodeValue HkBankCode = new ClearingCodeValue("hk_bank_code");
        public static readonly ClearingCodeValue Blz = new ClearingCodeValue("blz");
        public static readonly ClearingCodeValue AtBankleitzahl = new ClearingCodeValue("at_bankleitzahl");
        public static readonly ClearingCodeValue Nuban = new ClearingCodeValue("nuban");
        public static readonly ClearingCodeValue SeBankgiroCode = new ClearingCodeValue("se_bankgiro_code");
        public static readonly ClearingCodeValue UnmappedValue = new ClearingCodeValue("unmapped_value");

        private static readonly Dictionary <string, ClearingCodeValue> _knownValues =
            new Dictionary <string, ClearingCodeValue> ()
            {
                ["sort_code"] = SortCode,
                ["building_society_reference"] = BuildingSocietyReference,
                ["aba_routing"] = AbaRouting,
                ["chips_participant_id"] = ChipsParticipantId,
                ["transit_number"] = TransitNumber,
                ["institution_number"] = InstitutionNumber,
                ["bsb_code"] = BsbCode,
                ["ifsc_code"] = IfscCode,
                ["micr_code"] = MicrCode,
                ["clabe"] = Clabe,
                ["cnaps_code"] = CnapsCode,
                ["ch_bank_clearing_code"] = ChBankClearingCode,
                ["ch_sic_code"] = ChSicCode,
                ["zengin_code"] = ZenginCode,
                ["nz_clearing_code"] = NzClearingCode,
                ["hk_bank_code"] = HkBankCode,
                ["blz"] = Blz,
                ["at_bankleitzahl"] = AtBankleitzahl,
                ["nuban"] = Nuban,
                ["se_bankgiro_code"] = SeBankgiroCode,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, ClearingCodeValue> _values =
            new ConcurrentDictionary<string, ClearingCodeValue>(_knownValues);

        private ClearingCodeValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static ClearingCodeValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new ClearingCodeValue(value));
        }

        public static implicit operator ClearingCodeValue(string value) => Of(value);
        public static implicit operator string(ClearingCodeValue clearingcodevalue) => clearingcodevalue.Value;

        public static ClearingCodeValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as ClearingCodeValue);

        public bool Equals(ClearingCodeValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}