//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    [JsonConverter(typeof(OpenEnumConverter))]
    public class HrisCreateEmployeeRequestDtoMaritalStatusValue : IEquatable<HrisCreateEmployeeRequestDtoMaritalStatusValue>
    {
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Single = new HrisCreateEmployeeRequestDtoMaritalStatusValue("single");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Married = new HrisCreateEmployeeRequestDtoMaritalStatusValue("married");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue CommonLaw = new HrisCreateEmployeeRequestDtoMaritalStatusValue("common_law");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Divorced = new HrisCreateEmployeeRequestDtoMaritalStatusValue("divorced");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Widowed = new HrisCreateEmployeeRequestDtoMaritalStatusValue("widowed");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue DomesticPartnership = new HrisCreateEmployeeRequestDtoMaritalStatusValue("domestic_partnership");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Separated = new HrisCreateEmployeeRequestDtoMaritalStatusValue("separated");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue Other = new HrisCreateEmployeeRequestDtoMaritalStatusValue("other");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue NotDisclosed = new HrisCreateEmployeeRequestDtoMaritalStatusValue("not_disclosed");
        public static readonly HrisCreateEmployeeRequestDtoMaritalStatusValue UnmappedValue = new HrisCreateEmployeeRequestDtoMaritalStatusValue("unmapped_value");

        private static readonly Dictionary <string, HrisCreateEmployeeRequestDtoMaritalStatusValue> _knownValues =
            new Dictionary <string, HrisCreateEmployeeRequestDtoMaritalStatusValue> ()
            {
                ["single"] = Single,
                ["married"] = Married,
                ["common_law"] = CommonLaw,
                ["divorced"] = Divorced,
                ["widowed"] = Widowed,
                ["domestic_partnership"] = DomesticPartnership,
                ["separated"] = Separated,
                ["other"] = Other,
                ["not_disclosed"] = NotDisclosed,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, HrisCreateEmployeeRequestDtoMaritalStatusValue> _values =
            new ConcurrentDictionary<string, HrisCreateEmployeeRequestDtoMaritalStatusValue>(_knownValues);

        private HrisCreateEmployeeRequestDtoMaritalStatusValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static HrisCreateEmployeeRequestDtoMaritalStatusValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new HrisCreateEmployeeRequestDtoMaritalStatusValue(value));
        }

        public static implicit operator HrisCreateEmployeeRequestDtoMaritalStatusValue(string value) => Of(value);
        public static implicit operator string(HrisCreateEmployeeRequestDtoMaritalStatusValue hriscreateemployeerequestdtomaritalstatusvalue) => hriscreateemployeerequestdtomaritalstatusvalue.Value;

        public static HrisCreateEmployeeRequestDtoMaritalStatusValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as HrisCreateEmployeeRequestDtoMaritalStatusValue);

        public bool Equals(HrisCreateEmployeeRequestDtoMaritalStatusValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}