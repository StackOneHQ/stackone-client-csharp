//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The category of the file
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class HrisDocumentApiModelTypeValue : IEquatable<HrisDocumentApiModelTypeValue>
    {
        public static readonly HrisDocumentApiModelTypeValue Application = new HrisDocumentApiModelTypeValue("application");
        public static readonly HrisDocumentApiModelTypeValue Academic = new HrisDocumentApiModelTypeValue("academic");
        public static readonly HrisDocumentApiModelTypeValue Contract = new HrisDocumentApiModelTypeValue("contract");
        public static readonly HrisDocumentApiModelTypeValue Certificates = new HrisDocumentApiModelTypeValue("certificates");
        public static readonly HrisDocumentApiModelTypeValue Visa = new HrisDocumentApiModelTypeValue("visa");
        public static readonly HrisDocumentApiModelTypeValue Passport = new HrisDocumentApiModelTypeValue("passport");
        public static readonly HrisDocumentApiModelTypeValue DriverLicense = new HrisDocumentApiModelTypeValue("driver_license");
        public static readonly HrisDocumentApiModelTypeValue Payslip = new HrisDocumentApiModelTypeValue("payslip");
        public static readonly HrisDocumentApiModelTypeValue Payroll = new HrisDocumentApiModelTypeValue("payroll");
        public static readonly HrisDocumentApiModelTypeValue Appraisal = new HrisDocumentApiModelTypeValue("appraisal");
        public static readonly HrisDocumentApiModelTypeValue Resume = new HrisDocumentApiModelTypeValue("resume");
        public static readonly HrisDocumentApiModelTypeValue Policy = new HrisDocumentApiModelTypeValue("policy");
        public static readonly HrisDocumentApiModelTypeValue CoverLetter = new HrisDocumentApiModelTypeValue("cover_letter");
        public static readonly HrisDocumentApiModelTypeValue OfferLetter = new HrisDocumentApiModelTypeValue("offer_letter");
        public static readonly HrisDocumentApiModelTypeValue PolicyAgreement = new HrisDocumentApiModelTypeValue("policy_agreement");
        public static readonly HrisDocumentApiModelTypeValue HomeAddress = new HrisDocumentApiModelTypeValue("home_address");
        public static readonly HrisDocumentApiModelTypeValue NationalId = new HrisDocumentApiModelTypeValue("national_id");
        public static readonly HrisDocumentApiModelTypeValue Confidential = new HrisDocumentApiModelTypeValue("confidential");
        public static readonly HrisDocumentApiModelTypeValue Signed = new HrisDocumentApiModelTypeValue("signed");
        public static readonly HrisDocumentApiModelTypeValue Shared = new HrisDocumentApiModelTypeValue("shared");
        public static readonly HrisDocumentApiModelTypeValue Other = new HrisDocumentApiModelTypeValue("other");
        public static readonly HrisDocumentApiModelTypeValue Benefit = new HrisDocumentApiModelTypeValue("benefit");
        public static readonly HrisDocumentApiModelTypeValue IdVerification = new HrisDocumentApiModelTypeValue("id_verification");
        public static readonly HrisDocumentApiModelTypeValue BackgroundCheck = new HrisDocumentApiModelTypeValue("background_check");
        public static readonly HrisDocumentApiModelTypeValue UnmappedValue = new HrisDocumentApiModelTypeValue("unmapped_value");

        private static readonly Dictionary <string, HrisDocumentApiModelTypeValue> _knownValues =
            new Dictionary <string, HrisDocumentApiModelTypeValue> ()
            {
                ["application"] = Application,
                ["academic"] = Academic,
                ["contract"] = Contract,
                ["certificates"] = Certificates,
                ["visa"] = Visa,
                ["passport"] = Passport,
                ["driver_license"] = DriverLicense,
                ["payslip"] = Payslip,
                ["payroll"] = Payroll,
                ["appraisal"] = Appraisal,
                ["resume"] = Resume,
                ["policy"] = Policy,
                ["cover_letter"] = CoverLetter,
                ["offer_letter"] = OfferLetter,
                ["policy_agreement"] = PolicyAgreement,
                ["home_address"] = HomeAddress,
                ["national_id"] = NationalId,
                ["confidential"] = Confidential,
                ["signed"] = Signed,
                ["shared"] = Shared,
                ["other"] = Other,
                ["benefit"] = Benefit,
                ["id_verification"] = IdVerification,
                ["background_check"] = BackgroundCheck,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, HrisDocumentApiModelTypeValue> _values =
            new ConcurrentDictionary<string, HrisDocumentApiModelTypeValue>(_knownValues);

        private HrisDocumentApiModelTypeValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static HrisDocumentApiModelTypeValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new HrisDocumentApiModelTypeValue(value));
        }

        public static implicit operator HrisDocumentApiModelTypeValue(string value) => Of(value);
        public static implicit operator string(HrisDocumentApiModelTypeValue hrisdocumentapimodeltypevalue) => hrisdocumentapimodeltypevalue.Value;

        public static HrisDocumentApiModelTypeValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as HrisDocumentApiModelTypeValue);

        public bool Equals(HrisDocumentApiModelTypeValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}