//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;
    using StackOneHQ.Client.Models.Components;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Generic;
    using System.Numerics;
    using System.Reflection;

    public class HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType
    {
        private HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType(string value) { Value = value; }

        public string Value { get; private set; }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType Str { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("str"); } }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType Number { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("number"); } }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType Boolean { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("boolean"); } }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType HrisCreateEmploymentRequestDtoSourceValuePayFrequency { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("HrisCreateEmploymentRequestDto_source_value_pay_frequency"); } }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType ArrayOfAny { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("arrayOfAny"); } }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType Null { get { return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType("null"); } }

        public override string ToString() { return Value; }
        public static implicit operator String(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType v) { return v.Value; }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType FromString(string v) {
            switch(v) {
                case "str": return Str;
                case "number": return Number;
                case "boolean": return Boolean;
                case "HrisCreateEmploymentRequestDto_source_value_pay_frequency": return HrisCreateEmploymentRequestDtoSourceValuePayFrequency;
                case "arrayOfAny": return ArrayOfAny;
                case "null": return Null;
                default: throw new ArgumentException("Invalid value for HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType");
            }
        }
        public override bool Equals(object? obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }
            return Value.Equals(((HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType)obj).Value);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }
    }


    /// <summary>
    /// The source value of the pay frequency.
    /// </summary>
    [JsonConverter(typeof(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion.HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionConverter))]
    public class HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion
    {
        public HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType type)
        {
            Type = type;
        }

        [SpeakeasyMetadata("form:explode=true")]
        public string? Str { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public double? Number { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public bool? Boolean { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public HrisCreateEmploymentRequestDtoSourceValuePayFrequency? HrisCreateEmploymentRequestDtoSourceValuePayFrequency { get; set; }

        [SpeakeasyMetadata("form:explode=true")]
        public List<object>? ArrayOfAny { get; set; }

        public HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType Type { get; set; }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateStr(string str)
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Str;

            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
            res.Str = str;
            return res;
        }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateNumber(double number)
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Number;

            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
            res.Number = number;
            return res;
        }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateBoolean(bool boolean)
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Boolean;

            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
            res.Boolean = boolean;
            return res;
        }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateHrisCreateEmploymentRequestDtoSourceValuePayFrequency(HrisCreateEmploymentRequestDtoSourceValuePayFrequency hrisCreateEmploymentRequestDtoSourceValuePayFrequency)
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.HrisCreateEmploymentRequestDtoSourceValuePayFrequency;

            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
            res.HrisCreateEmploymentRequestDtoSourceValuePayFrequency = hrisCreateEmploymentRequestDtoSourceValuePayFrequency;
            return res;
        }
        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateArrayOfAny(List<object> arrayOfAny)
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.ArrayOfAny;

            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
            res.ArrayOfAny = arrayOfAny;
            return res;
        }

        public static HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion CreateNull()
        {
            HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType typ = HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Null;
            return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(typ);
        }

        public class HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionConverter : JsonConverter
        {

            public override bool CanConvert(System.Type objectType) => objectType == typeof(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion);

            public override bool CanRead => true;

            public override object? ReadJson(JsonReader reader, System.Type objectType, object? existingValue, JsonSerializer serializer)
            {
                var json = JRaw.Create(reader).ToString();
                if (json == "null")
                {
                    return null;
                }

                var fallbackCandidates = new List<(System.Type, object, string)>();

                try
                {
                    return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.HrisCreateEmploymentRequestDtoSourceValuePayFrequency)
                    {
                        HrisCreateEmploymentRequestDtoSourceValuePayFrequency = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<HrisCreateEmploymentRequestDtoSourceValuePayFrequency>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(HrisCreateEmploymentRequestDtoSourceValuePayFrequency), new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.HrisCreateEmploymentRequestDtoSourceValuePayFrequency), "HrisCreateEmploymentRequestDtoSourceValuePayFrequency"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (json[0] == '"' && json[^1] == '"'){
                    return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Str)
                    {
                        Str = json[1..^1]
                    };
                }

                try
                {
                    var converted = Convert.ToDouble(json);
                    return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Number)
                    {
                        Number = converted
                    };
                }
                catch (System.FormatException)
                {
                    // try next option
                }

                try
                {
                    var converted = Convert.ToBoolean(json);
                    return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Boolean)
                    {
                        Boolean = converted
                    };
                }
                catch (System.FormatException)
                {
                    // try next option
                }

                try
                {
                    return new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.ArrayOfAny)
                    {
                        ArrayOfAny = ResponseBodyDeserializer.DeserializeUndiscriminatedUnionMember<List<object>>(json)
                    };
                }
                catch (ResponseBodyDeserializer.MissingMemberException)
                {
                    fallbackCandidates.Add((typeof(List<object>), new HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.ArrayOfAny), "ArrayOfAny"));
                }
                catch (ResponseBodyDeserializer.DeserializationException)
                {
                    // try next option
                }
                catch (Exception)
                {
                    throw;
                }

                if (fallbackCandidates.Count > 0)
                {
                    fallbackCandidates.Sort((a, b) => ResponseBodyDeserializer.CompareFallbackCandidates(a.Item1, b.Item1, json));
                    foreach(var (deserializationType, returnObject, propertyName) in fallbackCandidates)
                    {
                        try
                        {
                            return ResponseBodyDeserializer.DeserializeUndiscriminatedUnionFallback(deserializationType, returnObject, propertyName, json);
                        }
                        catch (ResponseBodyDeserializer.DeserializationException)
                        {
                            // try next fallback option
                        }
                        catch (Exception)
                        {
                            throw;
                        }
                    }
                }

                throw new InvalidOperationException("Could not deserialize into any supported types.");
            }

            public override void WriteJson(JsonWriter writer, object? value, JsonSerializer serializer)
            {
                if (value == null) {
                    writer.WriteRawValue("null");
                    return;
                }

                HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion res = (HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnion)value;
                if (HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.FromString(res.Type).Equals(HrisCreateEmploymentRequestDtoPayFrequencySourceValueUnionType.Null))
                {
                    writer.WriteRawValue("null");
                    return;
                }

                if (res.Str != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Str));
                    return;
                }

                if (res.Number != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Number));
                    return;
                }

                if (res.Boolean != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.Boolean));
                    return;
                }

                if (res.HrisCreateEmploymentRequestDtoSourceValuePayFrequency != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.HrisCreateEmploymentRequestDtoSourceValuePayFrequency));
                    return;
                }

                if (res.ArrayOfAny != null)
                {
                    writer.WriteRawValue(Utilities.SerializeJSON(res.ArrayOfAny));
                    return;
                }
            }

        }

    }
}