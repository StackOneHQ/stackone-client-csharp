//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOneHQ.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOneHQ.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The category name to associate with the file
    /// </summary>
    [JsonConverter(typeof(OpenEnumConverter))]
    public class AtsDocumentsUploadRequestDtoCategoryValue : IEquatable<AtsDocumentsUploadRequestDtoCategoryValue>
    {
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Resume = new AtsDocumentsUploadRequestDtoCategoryValue("resume");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Avatar = new AtsDocumentsUploadRequestDtoCategoryValue("avatar");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue CoverLetter = new AtsDocumentsUploadRequestDtoCategoryValue("cover_letter");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue ProfilePicture = new AtsDocumentsUploadRequestDtoCategoryValue("profile_picture");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Policy = new AtsDocumentsUploadRequestDtoCategoryValue("policy");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Passport = new AtsDocumentsUploadRequestDtoCategoryValue("passport");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Assessment = new AtsDocumentsUploadRequestDtoCategoryValue("assessment");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue InterviewAttachment = new AtsDocumentsUploadRequestDtoCategoryValue("interview_attachment");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue TakeHomeTest = new AtsDocumentsUploadRequestDtoCategoryValue("take_home_test");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue OfferLetter = new AtsDocumentsUploadRequestDtoCategoryValue("offer_letter");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue SignedOfferLetter = new AtsDocumentsUploadRequestDtoCategoryValue("signed_offer_letter");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue NationalId = new AtsDocumentsUploadRequestDtoCategoryValue("national_id");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue OfferPacket = new AtsDocumentsUploadRequestDtoCategoryValue("offer_packet");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue Other = new AtsDocumentsUploadRequestDtoCategoryValue("other");
        public static readonly AtsDocumentsUploadRequestDtoCategoryValue UnmappedValue = new AtsDocumentsUploadRequestDtoCategoryValue("unmapped_value");

        private static readonly Dictionary <string, AtsDocumentsUploadRequestDtoCategoryValue> _knownValues =
            new Dictionary <string, AtsDocumentsUploadRequestDtoCategoryValue> ()
            {
                ["resume"] = Resume,
                ["avatar"] = Avatar,
                ["cover_letter"] = CoverLetter,
                ["profile_picture"] = ProfilePicture,
                ["policy"] = Policy,
                ["passport"] = Passport,
                ["assessment"] = Assessment,
                ["interview_attachment"] = InterviewAttachment,
                ["take_home_test"] = TakeHomeTest,
                ["offer_letter"] = OfferLetter,
                ["signed_offer_letter"] = SignedOfferLetter,
                ["national_id"] = NationalId,
                ["offer_packet"] = OfferPacket,
                ["other"] = Other,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, AtsDocumentsUploadRequestDtoCategoryValue> _values =
            new ConcurrentDictionary<string, AtsDocumentsUploadRequestDtoCategoryValue>(_knownValues);

        private AtsDocumentsUploadRequestDtoCategoryValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static AtsDocumentsUploadRequestDtoCategoryValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new AtsDocumentsUploadRequestDtoCategoryValue(value));
        }

        public static implicit operator AtsDocumentsUploadRequestDtoCategoryValue(string value) => Of(value);
        public static implicit operator string(AtsDocumentsUploadRequestDtoCategoryValue atsdocumentsuploadrequestdtocategoryvalue) => atsdocumentsuploadrequestdtocategoryvalue.Value;

        public static AtsDocumentsUploadRequestDtoCategoryValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as AtsDocumentsUploadRequestDtoCategoryValue);

        public bool Equals(AtsDocumentsUploadRequestDtoCategoryValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}