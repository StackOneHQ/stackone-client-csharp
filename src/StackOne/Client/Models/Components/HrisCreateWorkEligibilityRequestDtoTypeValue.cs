//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOne.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOne.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;

    [JsonConverter(typeof(OpenEnumConverter))]
    public class HrisCreateWorkEligibilityRequestDtoTypeValue : IEquatable<HrisCreateWorkEligibilityRequestDtoTypeValue>
    {
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue Visa = new HrisCreateWorkEligibilityRequestDtoTypeValue("visa");
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue Passport = new HrisCreateWorkEligibilityRequestDtoTypeValue("passport");
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue DriverLicense = new HrisCreateWorkEligibilityRequestDtoTypeValue("driver_license");
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue BirthCertificate = new HrisCreateWorkEligibilityRequestDtoTypeValue("birth_certificate");
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue Other = new HrisCreateWorkEligibilityRequestDtoTypeValue("other");
        public static readonly HrisCreateWorkEligibilityRequestDtoTypeValue UnmappedValue = new HrisCreateWorkEligibilityRequestDtoTypeValue("unmapped_value");

        private static readonly Dictionary <string, HrisCreateWorkEligibilityRequestDtoTypeValue> _knownValues =
            new Dictionary <string, HrisCreateWorkEligibilityRequestDtoTypeValue> ()
            {
                ["visa"] = Visa,
                ["passport"] = Passport,
                ["driver_license"] = DriverLicense,
                ["birth_certificate"] = BirthCertificate,
                ["other"] = Other,
                ["unmapped_value"] = UnmappedValue
            };

        private static readonly ConcurrentDictionary<string, HrisCreateWorkEligibilityRequestDtoTypeValue> _values =
            new ConcurrentDictionary<string, HrisCreateWorkEligibilityRequestDtoTypeValue>(_knownValues);

        private HrisCreateWorkEligibilityRequestDtoTypeValue(string value)
        {
            if (value == null) throw new ArgumentNullException(nameof(value));
            Value = value;
        }

        public string Value { get; }

        public static HrisCreateWorkEligibilityRequestDtoTypeValue Of(string value)
        {
            return _values.GetOrAdd(value, _ => new HrisCreateWorkEligibilityRequestDtoTypeValue(value));
        }

        public static implicit operator HrisCreateWorkEligibilityRequestDtoTypeValue(string value) => Of(value);
        public static implicit operator string(HrisCreateWorkEligibilityRequestDtoTypeValue hriscreateworkeligibilityrequestdtotypevalue) => hriscreateworkeligibilityrequestdtotypevalue.Value;

        public static HrisCreateWorkEligibilityRequestDtoTypeValue[] Values()
        {
            return _values.Values.ToArray();
        }

        public override string ToString() => Value.ToString();

        public bool IsKnown()
        {
            return _knownValues.ContainsKey(Value);
        }

        public override bool Equals(object? obj) => Equals(obj as HrisCreateWorkEligibilityRequestDtoTypeValue);

        public bool Equals(HrisCreateWorkEligibilityRequestDtoTypeValue? other)
        {
            if (ReferenceEquals(this, other)) return true;
            if (other is null) return false;
            return string.Equals(Value, other.Value);
        }

        public override int GetHashCode() => Value.GetHashCode();
    }

}