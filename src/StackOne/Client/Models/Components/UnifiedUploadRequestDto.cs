//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOne.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOne.Client.Models.Components;
    using StackOne.Client.Utils;
    
    public class UnifiedUploadRequestDto
    {

        /// <summary>
        /// The filename of the file to upload
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        /// <summary>
        /// The file format of the file
        /// </summary>
        [JsonProperty("file_format")]
        public UnifiedUploadRequestDtoFileFormat? FileFormat { get; set; } = null;

        /// <summary>
        /// The base64 encoded content of the file to upload
        /// </summary>
        [JsonProperty("content")]
        public string? Content { get; set; } = null;

        /// <summary>
        /// The categoryId of the documents
        /// </summary>
        [JsonProperty("category_id")]
        public string? CategoryId { get; set; } = null;

        /// <summary>
        /// The path for the file to be uploaded to
        /// </summary>
        [JsonProperty("path")]
        public string? Path { get; set; } = null;

        /// <summary>
        /// The category object for associating uploaded files. If both an ID and a name are provided, the ID takes precedence.
        /// </summary>
        [JsonProperty("category")]
        public UnifiedUploadRequestDtoCategory? Category { get; set; } = null;

        /// <summary>
        /// The confidentiality level of the file to be uploaded
        /// </summary>
        [JsonProperty("confidential")]
        public UnifiedUploadRequestDtoConfidential? Confidential { get; set; } = null;
    }
}