//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace StackOne.Client.Models.Components
{
    using Newtonsoft.Json;
    using StackOne.Client.Models.Components;
    using StackOne.Client.Utils;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    using System.Linq;
    
    public class TicketingCollectionResultData
    {

        /// <summary>
        /// Unique identifier
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; } = null;

        /// <summary>
        /// Provider&apos;s unique identifier
        /// </summary>
        [JsonProperty("remote_id")]
        public string? RemoteId { get; set; } = null;

        /// <summary>
        /// The parent collection of the collection
        /// </summary>
        [JsonProperty("parent_id")]
        public string? ParentId { get; set; } = null;

        /// <summary>
        /// The name of the collection
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        /// <summary>
        /// The description of the collection
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// The user-friendly key of the collection
        /// </summary>
        [JsonProperty("key")]
        public string? Key { get; set; } = null;

        /// <summary>
        /// The type of the collection.
        /// </summary>
        [JsonProperty("type")]
        public TicketingCollectionResultType? Type { get; set; } = null;

        /// <summary>
        /// The organization id related to the collection
        /// </summary>
        [JsonProperty("organization_id")]
        public string? OrganizationId { get; set; } = null;

        /// <summary>
        /// The timestamp when the record was created
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The timestamp when the record was last updated
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;
    }
}